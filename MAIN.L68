000014D6 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 23/12/2020 2:32:32

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000500                 85  SCRWIDTH    EQU     1280                    ; SCREEN WIDTH (PIXELS)
00001000  =000002D0                 86  SCRHEIGH    EQU     720                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000208                 93  DMMBNUM     EQU     520                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            95  
00001000                            96  
00001000                            97  
00001000                            98  
00001000                            99  -------------------- end include --------------------
00001000                           100              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                           101  ; =============================================================================
00001000                           102  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                           103  ; AUTHOR   : ANTONI BURGUERA
00001000                           104  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           105  ;            - SYS : GENERIC.
00001000                           106  ;            - SCR : SCREEN MANAGEMENT.
00001000                           107  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           108  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           109  ;            11-OCT-2020 - MINOR CHANGES
00001000                           110  ; =============================================================================
00001000                           111  
00001000                           112  ; -----------------------------------------------------------------------------
00001000                           113  SYSINIT
00001000                           114  ; INITIALIZES THE SYSTEM
00001000                           115  ; INPUT    - NONE
00001000                           116  ; OUTPUT   - NONE
00001000                           117  ; MODIFIES - NONE
00001000                           118  ; -----------------------------------------------------------------------------
00001000  205F                     119              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            120              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            121              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            122              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                123              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     124              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     125              RTS
0000101C                           126  
0000101C                           127  ; =============================================================================
0000101C                           128  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           129  ; =============================================================================
0000101C                           130  
0000101C                           131  ; -----------------------------------------------------------------------------
0000101C                           132  SCRINIT
0000101C                           133  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           134  ; INPUT    - NONE
0000101C                           135  ; OUTPUT   - NONE
0000101C                           136  ; MODIFIES - D0,D1,D2,D3
0000101C                           137  ; -----------------------------------------------------------------------------
0000101C  007C 0700                138              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       139              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 050002D0            140              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                141              MOVE.B  #33,D0
00001032  4E4F                     142              TRAP    #15
00001034  7201                     143              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     144              TRAP    #15
00001038  323C FF00                145              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                146              MOVE.B  #11,D0
00001040  4E4F                     147              TRAP    #15
00001042  123C 0011                148              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                149              MOVE.B  #92,D0
0000104A  4E4F                     150              TRAP    #15
0000104C  323C FF00                151              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                152              MOVE.B  #11,D0
00001054  4E4F                     153              TRAP    #15
00001056  21FC 0000108C 0064       154              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                155              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                156              MOVE.B  #32,D0
00001066  4E4F                     157              TRAP    #15
00001068  143C 0081                158              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                159              MOVE.B  #SCRTIM,D3
00001070  123C 0006                160              MOVE.B  #6,D1
00001074  103C 0020                161              MOVE.B  #32,D0
00001078  4E4F                     162              TRAP    #15
0000107A  4239 00001504            163              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001505            164              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                165              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     166              RTS
0000108C                           167  
0000108C                           168  ; -----------------------------------------------------------------------------
0000108C                           169  SCRISR
0000108C                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           171  ; INPUT    - NONE
0000108C                           172  ; OUTPUT   - NONE
0000108C                           173  ; MODIFIES - NONE
0000108C                           174  ; -----------------------------------------------------------------------------
0000108C  5239 00001504            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001505            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     177              RTE
0000109A                           178  
0000109A                           179  ; -----------------------------------------------------------------------------
0000109A                           180  SCRUPD
0000109A                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           182  ; BUFFER FOR THE NEXT ONE.
0000109A                           183  ; INPUT    - NONE
0000109A                           184  ; OUTPUT   - NONE
0000109A                           185  ; MODIFIES - NONE
0000109A                           186  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                187              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                188              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     189              TRAP    #15
000010A4  323C FF00                190              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                191              MOVE.B  #11,D0
000010AC  4E4F                     192              TRAP    #15
000010AE  4C9F 0003                193              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     194              RTE
000010B4                           195  
000010B4                           196  ; =============================================================================
000010B4                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           198  ; =============================================================================
000010B4                           199  
000010B4                           200  ; -----------------------------------------------------------------------------
000010B4                           201  KBDINIT
000010B4                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           203  ; INPUT    - NONE
000010B4                           204  ; OUTPUT   - NONE
000010B4                           205  ; MODIFIES - NONE
000010B4                           206  ; -----------------------------------------------------------------------------
000010B4  4239 00001502            207              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001503            208              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     210              RTS
000010CA                           211  
000010CA                           212  ; -----------------------------------------------------------------------------
000010CA                           213  KBDREAD
000010CA                           214  ; TRAP SERVICE ROUTINE.
000010CA                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           218  ; INPUT    - NONE
000010CA                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           220  ; MODIFIES - NONE
000010CA                           221  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                222              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                223              MOVE.B  #19,D0
000010D2  223C 50104D20            224              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     225              TRAP    #15
000010DA  6100 002A                226              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            227              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     228              TRAP    #15
000010E6  6100 001E                229              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001502            230              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     231              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     232              AND.B   D2,D0
000010F4  13C2 00001502            233              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001503            234              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                235              MOVEM.L (A7)+,D0-D3
00001104  4E73                     236              RTE
00001106                           237  
00001106  363C 0003                238  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     239  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     240              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                241              DBRA.W  D3,.LOOP
00001112  4E75                     242              RTS
00001114                           243  
00001114                           244  ; =============================================================================
00001114                           245  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           246  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           247  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           248  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           249  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           250  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           251  ; =============================================================================
00001114                           252  
00001114                           253  ; -----------------------------------------------------------------------------
00001114                           254  DMMINIT
00001114                           255  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           256  ; INPUT    - NONE
00001114                           257  ; OUTPUT   - NONE
00001114                           258  ; MODIFIES - NONE
00001114                           259  ; -----------------------------------------------------------------------------
00001114  48E7 8080                260              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001540            261              LEA     DMMDATA,A0
0000111E  303C 0207                262              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                263  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            264              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                265              DBRA.W  D0,.LOOP
00001130  4CDF 0101                266              MOVEM.L (A7)+,D0/A0
00001134  4E75                     267              RTS
00001136                           268  
00001136                           269  ; -----------------------------------------------------------------------------
00001136                           270  DMMFIRST
00001136                           271  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           272  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           273  ; INPUT    - NONE
00001136                           274  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           275  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           276  ; -----------------------------------------------------------------------------
00001136  41F9 00001540            277              LEA     DMMDATA,A0
0000113C  4A58                     278  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                279              BNE     DMMFRFND
00001142  D1FC 0000003E            280              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 0000973F            281  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     282              BLT     DMMFRLOP
00001150  207C 00000000            283              MOVE.L  #0,A0
00001156  4E75                     284  DMMFRFND    RTS
00001158                           285  
00001158                           286  ; -----------------------------------------------------------------------------
00001158                           287  DMMNEXT
00001158                           288  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           289  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           290  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           291  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           292  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           293  ; -----------------------------------------------------------------------------
00001158  2F00                     294              MOVE.L  D0,-(A7)
0000115A  2008                     295              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            296              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            297              ADD.L   #DMMBSIZE,D0
00001168  2040                     298              MOVE.L  D0,A0
0000116A  201F                     299              MOVE.L  (A7)+,D0
0000116C  60DA                     300              BRA     DMMFRCOM
0000116E                           301  
0000116E                           302  ; -----------------------------------------------------------------------------
0000116E                           303  DMMFRSTO
0000116E                           304  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           305  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           306  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           307  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           308  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           309  ; -----------------------------------------------------------------------------
0000116E  41F9 00001540            310              LEA     DMMDATA,A0
00001174  B058                     311  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                312              BEQ     DMMFFND
0000117A  D1FC 0000003E            313              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 0000973F            314  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     315              BLT     DMMFLOOP
00001188  207C 00000000            316              MOVE.L  #0,A0
0000118E  4E75                     317  DMMFFND     RTS
00001190                           318  
00001190                           319  ; -----------------------------------------------------------------------------
00001190                           320  DMMNEXTO
00001190                           321  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           322  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           323  ; INPUT    - D0.W : ID TO SEARCH
00001190                           324  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           325  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           326  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           327  ; -----------------------------------------------------------------------------
00001190  2F00                     328              MOVE.L  D0,-(A7)
00001192  2008                     329              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            330              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            331              ADD.L   #DMMBSIZE,D0
000011A0  2040                     332              MOVE.L  D0,A0
000011A2  201F                     333              MOVE.L  (A7)+,D0
000011A4  60DA                     334              BRA     DMMFCOM
000011A6                           335  
000011A6                           336  ; -----------------------------------------------------------------------------
000011A6                           337  DMMALLOC
000011A6                           338  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           339  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           340  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           341  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           342  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           343  ; -----------------------------------------------------------------------------
000011A6  3F00                     344              MOVE.W  D0,-(A7)
000011A8  4240                     345              CLR.W   D0
000011AA  4EB8 116E                346              JSR     DMMFRSTO
000011AE  301F                     347              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            348              CMP.L   #0,A0
000011B6  6700 0006                349              BEQ     .END
000011BA  3140 FFFE                350              MOVE.W  D0,-2(A0)
000011BE  4E75                     351  .END        RTS
000011C0                           352  
000011C0                           353  ; -----------------------------------------------------------------------------
000011C0                           354  DMMFREE
000011C0                           355  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           356  ; SYSTEM (0)
000011C0                           357  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           358  ; OUTPUT   - NONE
000011C0                           359  ; MODIFIES - NONE
000011C0                           360  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                361              MOVEM.L D0/A0,-(A7)
000011C4  2008                     362              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            363              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     364              MOVE.L  D0,A0
000011CE  4250                     365              CLR.W   (A0)
000011D0  4CDF 0101                366              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     367              RTS
000011D4  4E75                     368  -------------------- end include --------------------
000011D6                           369              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           370  ; =============================================================================
000011D6                           371  ; TITLE    : GAME CONSTANTS
000011D6                           372  ; AUTHOR   : MAURICI RUIZ PLAZA
000011D6                           373  ; HISTORY  : 15/12/2020  -  CREATION
000011D6                           374  ; =============================================================================
000011D6                           375  
000011D6                           376  ; ----BLOCK RELATED CONSTANTS--------------------------------------------------
000011D6                           377  
000011D6  =00000028                378  BLOCSIZE    EQU     40                  ; BLOCK WIDTH
000011D6                           379  
000011D6                           380  ; ---- BLOCK TYPES - 00BBGGRR -----------------------
000011D6                           381  
000011D6  =00000000                382  BLOCPCOL    EQU     $00000000               ; PEN COLOR
000011D6  =00000001                383  BLOCID      EQU       1                      ; STONE IDENTIFIER
000011D6  =00000020                384  NROWBLKS    EQU     SCRWIDTH/BLOCSIZE       ; NUMBER OF BLOCKS PER ROW TO PAINT
000011D6  =00000012                385  NCOLBLKS    EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF BLOCKS PER COLUMN TO PAINT
000011D6                           386  
000011D6                           387  
000011D6                           388  ; STONE
000011D6  =00000012                389  NUMSTN      EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF STONES TO PAINT
000011D6  =00000014                390  STNINITX    EQU     BLOCSIZE/2              ; INITIALX STONES
000011D6  =000002BC                391  STNINITY    EQU     SCRHEIGH-BLOCSIZE/2     ; INITIALY STONES                                  
000011D6  =00676767                392  STNFCOL     EQU      $00676767          ; FILL STONE COLOR
000011D6                           393  
000011D6                           394  ; DIRT
000011D6  =00000014                395  DRTINITX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =000002A8                396  DRTINITY    EQU     SCRHEIGH-BLOCSIZE     ; INITIALY DIRT
000011D6  =00002850                397  DIRTFCOL    EQU      $00002850              ; FILL DIRT COLOR 
000011D6                           398  
000011D6                           399  ; GRASS
000011D6  =00000014                400  GRASINTX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =0000026C                401  GRASINTY    EQU     SCRHEIGH-3*BLOCSIZE+BLOCSIZE/2      ; INITIALY DIRT
000011D6  =00008C50                402  GRASFCOL    EQU      $00008C50         ; FILL GRASS COLOR
000011D6                           403  
000011D6                           404  
000011D6                           405  
000011D6                           406  
000011D6                           407  
000011D6                           408  
000011D6                           409  
000011D6                           410  
000011D6                           411  
000011D6                           412  -------------------- end include --------------------
000011D6                           413              INCLUDE "RANDOM.X68"            ; RANDOM NUMBER GENERATOR
000011D6                           414  ; =============================================================================
000011D6                           415  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
000011D6                           416  ; AUTHOR   : ANTONI BURGUERA
000011D6                           417  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
000011D6                           418  ; HISTORY  : XX-XXX-201X - CREATION
000011D6                           419  ;            11-OCT-2020 - MINOR CHANGES
000011D6                           420  ; =============================================================================
000011D6                           421  
000011D6                           422  ; -----------------------------------------------------------------------------
000011D6                           423  RNDINIT
000011D6                           424  ; INITIALIZES RANDOM NUMBER GENERATOR
000011D6                           425  ; INPUT    - NONE
000011D6                           426  ; OUTPUT   - NONE
000011D6                           427  ; MODIFIES - NONE
000011D6                           428  ; -----------------------------------------------------------------------------
000011D6  4239 00009744            429              CLR.B   (RNDINDEX)
000011DC  4E75                     430              RTS
000011DE                           431              
000011DE                           432              
000011DE                           433  ; -----------------------------------------------------------------------------
000011DE                           434  GETRDIRT
000011DE                           435  ; PROVIDES A RANDOM NUMBER OF DIRT BLOCKS BETWEEN 6-10
000011DE                           436  ; INPUT    - NONE
000011DE                           437  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011DE                           438  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011DE                           439  ; -----------------------------------------------------------------------------
000011DE  2F08                     440              MOVE.L  A0,-(A7)
000011E0  41F9 000011FC            441              LEA     .RANDIRT, A0
000011E6  4280                     442              CLR.L   D0
000011E8  1039 00009744            443              MOVE.B  (RNDINDEX),D0
000011EE  1030 0800                444              MOVE.B  (A0,D0.L),D0
000011F2  5239 00009744            445              ADDQ.B  #1,(RNDINDEX)
000011F8  205F                     446              MOVE.L  (A7)+,A0
000011FA  4E75                     447              RTS
000011FC                           448  
000011FC= 06 07 07 08 09 0A ...    449  .RANDIRT    DC.B    6  , 7  , 7  , 8  , 9  , 10  , 10  , 9 
00001204= 08 07 06 06 07 08 ...    450              DC.B    8  , 7  , 6  , 6  , 7  , 8   , 9   , 9 
0000120C= 0A 09 08 08 09 0A ...    451              DC.B    10 , 9  , 8  , 8  , 9  , 10  , 10  , 9 
00001214= 08 07 07 06 07 08 ...    452              DC.B    8  , 7  , 7  , 6  , 7  , 8   , 9   , 10 
0000121C                           453  
0000121C                           454              
0000121C                           455  ; -----------------------------------------------------------------------------
0000121C                           456  RNDGET
0000121C                           457  ; PROVIDES A PSEUDO-RANDOM BYTE
0000121C                           458  ; INPUT    - NONE
0000121C                           459  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
0000121C                           460  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000121C                           461  ; -----------------------------------------------------------------------------
0000121C  2F08                     462              MOVE.L  A0,-(A7)
0000121E  41F9 0000123A            463              LEA     .RANDVEC,A0
00001224  4280                     464              CLR.L   D0
00001226  1039 00009744            465              MOVE.B  (RNDINDEX),D0
0000122C  1030 0800                466              MOVE.B  (A0,D0.L),D0
00001230  5239 00009744            467              ADDQ.B  #1,(RNDINDEX)
00001236  205F                     468              MOVE.L  (A7)+,A0
00001238  4E75                     469              RTS
0000123A                           470  
0000123A= A2 EE 9A 0C F5 24 ...    471  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
00001242= 2A A3 51 26 E0 AC ...    472              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
0000124A= 75 51 CA FD 33 EB ...    473              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001252= 60 CC E7 B8 9A EB ...    474              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000125A= 1D 76 B5 95 B0 89 ...    475              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001262= 39 15 48 C9 6E CA ...    476              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000126A= 43 E7 E2 7C 37 25 ...    477              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001272= E9 94 CE E9 E4 52 ...    478              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000127A= 37 6D 9A 84 A2 28 ...    479              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001282= 19 E2 C6 77 80 D4 ...    480              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000128A= 0A 5A 32 67 33 C2 ...    481              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001292= 59 80 DC 0E 57 FC ...    482              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000129A= 8A AB BC F7 07 4D ...    483              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
000012A2= EF D5 77 6E 1E BB ...    484              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
000012AA= D6 E0 2A 8F BD 28 ...    485              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
000012B2= 13 4F 66 EC 0A 64 ...    486              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
000012BA= 56 52 9A 16 9B 90 ...    487              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
000012C2= 06 8A A4 F7 01 DA ...    488              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
000012CA= F2 E7 77 28 B1 76 ...    489              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
000012D2= A4 42 E3 81 B1 67 ...    490              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
000012DA= BF CE FA 16 BF 38 ...    491              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
000012E2= D1 8B 50 0C 5F 49 ...    492              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
000012EA= DE 4C 14 A2 40 DC ...    493              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012F2= B6 9B 0A 38 5D AB ...    494              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012FA= E2 1B DD 75 15 82 ...    495              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
00001302= 8A 26 51 30 9F 47 ...    496              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
0000130A= 1E 8A BB 71 C6 6E ...    497              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
00001312= 9F 47 E5 34 94 27 ...    498              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
0000131A= 7D 06 D6 BA 30 0F ...    499              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
00001322= EC 7F 7E 03 CF 2D ...    500              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
0000132A= 94 5B 23 F2 8B CD ...    501              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
00001332= 74 33 EC B9 0F D5 ...    502              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
00001332= 74 33 EC B9 0F D5 ...    503  -------------------- end include --------------------
0000133A                           504              INCLUDE "AGENTLST.X68"          ; 
0000133A                           505  ; =============================================================================
0000133A                           506  ; TITLE    : AGENT LIST
0000133A                           507  ; AUTHOR   : ANTONI BURGUERA
0000133A                           508  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
0000133A                           509  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
0000133A                           510  ;              +4 - LONG : PLOT SUBROUTINE POINTER
0000133A                           511  ;              +8:END    : DATA (AGENT SPECIFIC)
0000133A                           512  ; HISTORY  : XX-XXX-201X - CREATION
0000133A                           513  ;            11-OCT-2020 - MINOR CHANGES
0000133A                           514  ; =============================================================================
0000133A                           515  
0000133A                           516  ; -----------------------------------------------------------------------------
0000133A                           517  AGLADD
0000133A                           518  ; CREATES A NEW AGENT
0000133A                           519  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
0000133A                           520  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
0000133A                           521  ;            A3 - POINTER TO AGENT PLOT FUNCTION
0000133A                           522  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
0000133A                           523  ;            D1 - AGENT INITIALIZATION PARAMETER 1
0000133A                           524  ;            D2 - AGENT INITIALIZATION PARAMETER 2
0000133A                           525  ;            D3 - AGENT INITIALIZATION PARAMETER 3
0000133A                           526  ; OUTPUT   - NONE
0000133A                           527  ; MODIFIES - NONE
0000133A                           528  ; -----------------------------------------------------------------------------
0000133A  2F08                     529              MOVE.L  A0,-(A7)
0000133C  4EB8 11A6                530              JSR     DMMALLOC
00001340  B1FC 00000000            531              CMP.L   #0,A0
00001346  6700 0008                532              BEQ     .END
0000134A  20CA                     533              MOVE.L  A2,(A0)+
0000134C  20CB                     534              MOVE.L  A3,(A0)+
0000134E  4E91                     535              JSR     (A1)
00001350  205F                     536  .END        MOVE.L  (A7)+,A0
00001352  4E75                     537              RTS
00001354                           538  
00001354                           539  ; -----------------------------------------------------------------------------
00001354                           540  AGLUPD
00001354                           541  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001354                           542  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001354                           543  ; INPUT    - NONE
00001354                           544  ; OUTPUT   - NONE
00001354                           545  ; MODIFIES - NONE
00001354                           546  ; -----------------------------------------------------------------------------
00001354  48E7 00C0                547              MOVEM.L A0-A1,-(A7)
00001358  4EB8 1136                548              JSR     DMMFIRST
0000135C  B1FC 00000000            549  .LOOP       CMP.L   #0,A0
00001362  6700 000E                550              BEQ     .END
00001366  2250                     551              MOVE.L  (A0),A1
00001368  5088                     552              ADD.L   #8,A0
0000136A  4E91                     553              JSR     (A1)
0000136C  4EB8 1158                554              JSR     DMMNEXT
00001370  60EA                     555              BRA     .LOOP
00001372  4CDF 0300                556  .END        MOVEM.L (A7)+,A0-A1
00001376  4E75                     557              RTS
00001378                           558  
00001378                           559  ; -----------------------------------------------------------------------------
00001378                           560  AGLPLOT
00001378                           561  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001378                           562  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001378                           563  ; INPUT    - NONE
00001378                           564  ; OUTPUT   - NONE
00001378                           565  ; MODIFIES - NONE
00001378                           566  ; -----------------------------------------------------------------------------
00001378  48E7 00C0                567              MOVEM.L A0-A1,-(A7)
0000137C  4EB8 1136                568              JSR     DMMFIRST
00001380  B1FC 00000000            569  .LOOP       CMP.L   #0,A0
00001386  6700 0010                570              BEQ     .END
0000138A  2268 0004                571              MOVE.L  4(A0),A1
0000138E  5088                     572              ADD.L   #8,A0
00001390  4E91                     573              JSR     (A1)
00001392  4EB8 1158                574              JSR     DMMNEXT
00001396  60E8                     575              BRA     .LOOP
00001398  4CDF 0300                576  .END        MOVEM.L (A7)+,A0-A1
0000139C  4E75                     577              RTS
0000139E                           578  
0000139E                           579  ; -----------------------------------------------------------------------------
0000139E  =000011C0                580  AGLKILL     EQU     DMMFREE
0000139E                           581  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000139E                           582  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000139E                           583  ; OUTPUT   - NONE
0000139E                           584  ; MODIFIES - NONE
0000139E                           585  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000139E                           586  ; -----------------------------------------------------------------------------
0000139E                           587  -------------------- end include --------------------
0000139E                           588              INCLUDE "BLOCK.X68"             ; BLOCK MANAGEMENT
0000139E                           589  
0000139E                           590  ;-----------------------------------------------------------
0000139E                           591  BLOCINIT
0000139E                           592  ; INITIALIZE BLOCK
0000139E                           593  ; INPUT     - D1.W  X PLACE COORDINATE
0000139E                           594  ;          - D2.W  Y PLACE COORDINATE 
0000139E                           595  ;          - D3.L  BLOCK COLOR
0000139E                           596  ; OUTPUT    - NONE
0000139E                           597  ; MODIFIES  - NONE  
0000139E                           598  ;-----------------------------------------------------------
0000139E                           599                         
0000139E  3081                     600              MOVE.W  D1, (A0)
000013A0  3142 0002                601               MOVE.W D2, 2(A0)
000013A4  2143 0004                602               MOVE.L D3, 4(A0)
000013A8                           603              
000013A8                           604              
000013A8  4E75                     605              RTS
000013AA                           606  
000013AA                           607  
000013AA                           608  ;-----------------------------------------------------------
000013AA                           609  BLOCUPD
000013AA                           610  ; UPDATE BLOCK
000013AA                           611  ; INPUT     - NONE
000013AA                           612  ; OUTPUT    - NONE
000013AA                           613  ; MODIFIES  - NONE  
000013AA                           614  ;-----------------------------------------------------------
000013AA  4E75                     615              RTS
000013AC                           616  
000013AC                           617  
000013AC                           618  
000013AC                           619  ;-----------------------------------------------------------
000013AC                           620  BLOCPLOT
000013AC                           621  ; PLOT BLOCK
000013AC                           622  ; INPUT     - NONE
000013AC                           623  ; OUTPUT    - NONE
000013AC                           624  ; MODIFIES  - NONE  
000013AC                           625  ;-----------------------------------------------------------
000013AC  48E7 F800                626              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
000013B0  103C 0050                627              MOVE.B  #80, D0                 ; SET PEN COLOR TASK
000013B4  7200                     628              MOVE.L  #BLOCPCOL, D1           ; BLOCK COLOR
000013B6  4E4F                     629              TRAP #15; SET PEN COLOR
000013B8  103C 0051                630              MOVE.B  #81, D0                 ; SET FILL COLOR TASK
000013BC  2228 0004                631              MOVE.L  4(A0),D1                ; BLOCK COLOR
000013C0  4E4F                     632              TRAP #15; SET FILL COLOR
000013C2                           633              
000013C2  3210                     634              MOVE.W  (A0),D1                 ; D1:=XCENTER
000013C4  3428 0002                635              MOVE.W  2(A0),D2                ; D2:=YCENTER
000013C8  3601                     636              MOVE.W  D1, D3                  ; D3:=XCENTER
000013CA  3802                     637              MOVE.W  D2, D4                  ; D4:=YCENTER
000013CC                           638              
000013CC  0441 0014                639              SUB.W   #BLOCSIZE/2, D1         ; D1:=XLEFT
000013D0  0442 0014                640              SUB.W   #BLOCSIZE/2, D2         ; D2:=YTOP
000013D4  0643 0014                641              ADD.W   #BLOCSIZE/2, D3         ; D3:=XRIGHT
000013D8  0644 0014                642              ADD.W   #BLOCSIZE/2, D4         ; D4:=YBOTTOM
000013DC  103C 0057                643              MOVE.B  #87, D0
000013E0  4E4F                     644              TRAP    #15                     ; DRAW BLOCK
000013E2  4CDF 001F                645              MOVEM.L (A7)+, D0-D4            ; RESTORE REGISTERS
000013E6  4E75                     646              RTS
000013E8                           647  
000013E8                           648  
000013E8                           649  
000013E8                           650  
000013E8                           651  
000013E8                           652  
000013E8                           653  
000013E8                           654  -------------------- end include --------------------
000013E8                           655              INCLUDE "LAND.X68"              ; LAND CREATION
000013E8                           656  ;-----------------------------------------------------------
000013E8                           657  
000013E8                           658  DIRTINIT
000013E8                           659  ; CREATE LAND
000013E8                           660  ; INPUT     - NONE
000013E8                           661  ; OUTPUT    - NONE
000013E8                           662  ; MODIFIES  - NONE  
000013E8                           663  ;-----------------------------------------------------------
000013E8  48E7 FC00                664              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000013EC  48E7 0070                665              MOVEM.L A1-A3, -(A7)
000013F0                           666              
000013F0                           667              
000013F0  383C 0003                668              MOVE.W  #3, D4  ; NUMBER OF STONE BLOCKS
000013F4  3A3C 0014                669              MOVE.W  #STNINITX, D5                     
000013F8                           670              
000013F8  303C 0001                671              MOVE.W  #BLOCID, D0
000013FC  43F8 139E                672              LEA     BLOCINIT, A1
00001400  45F8 13AA                673              LEA     BLOCUPD, A2
00001404  47F8 13AC                674              LEA     BLOCPLOT, A3
00001408  343C 02BC                675              MOVE.W  #STNINITY, D2
0000140C  263C 00676767            676              MOVE.L  #STNFCOL, D3                           
00001412                           677              
00001412  3205                     678              MOVE.W  D5, D1                       
00001414  4EB8 133A                679  .LOOPCOL    JSR     AGLADD
00001418  0442 0028                680              SUB.W   #BLOCSIZE, D2
0000141C  51CC FFF6                681              DBRA.W  D4, .LOOPCOL
00001420                           682              
00001420  4CDF 0E00                683              MOVEM.L (A7)+, A1-A3
00001424  4CDF 003F                684              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
00001428  4E75                     685              RTS
0000142A                           686  
0000142A                           687  
0000142A                           688  
0000142A                           689  
0000142A                           690  
0000142A                           691  ;-----------------------------------------------------------
0000142A                           692  STNEINIT
0000142A                           693  ; CREATE BASELAND OF STONES
0000142A                           694  ; INPUT     - NONE
0000142A                           695  ; OUTPUT    - NONE
0000142A                           696  ; MODIFIES  - NONE  
0000142A                           697  ;-----------------------------------------------------------
0000142A                           698              
0000142A  48E7 FC00                699              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
0000142E  48E7 0070                700              MOVEM.L A1-A3, -(A7)
00001432                           701              
00001432                           702              
00001432  383C 0020                703              MOVE.W  #SCRWIDTH/BLOCSIZE, D4  ; NUMBER OF STONE BLOCKS
00001436  3A3C 0014                704              MOVE.W  #STNINITX, D5                     
0000143A                           705              
0000143A  303C 0001                706              MOVE.W  #BLOCID, D0
0000143E  43F8 139E                707              LEA      BLOCINIT, A1
00001442  45F8 13AA                708              LEA     BLOCUPD, A2
00001446  47F8 13AC                709              LEA     BLOCPLOT, A3
0000144A  343C 02BC                710              MOVE.W  #STNINITY, D2
0000144E  263C 00676767            711              MOVE.L  #STNFCOL, D3                           
00001454                           712              
00001454  3205                     713  .LOOPS      MOVE.W  D5, D1                       
00001456  4EB8 133A                714              JSR     AGLADD
0000145A  0645 0028                715              ADD.W   #BLOCSIZE, D5
0000145E  51CC FFF4                716              DBRA.W  D4, .LOOPS
00001462                           717              
00001462  4CDF 0E00                718              MOVEM.L (A7)+, A1-A3
00001466  4CDF 003F                719              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
0000146A  4E75                     720              RTS
0000146C                           721  
0000146C                           722              
0000146C                           723  ;-----------------------------------------------------------                      
0000146C                           724  LANDINIT
0000146C                           725  ; INITIALIZE BASELAND  
0000146C                           726  ; INPUT     - NONE
0000146C                           727  ; OUTPUT    - NONE
0000146C                           728  ; MODIFIES  - NONE  
0000146C                           729  ;-----------------------------------------------------------
0000146C  48E7 FC00                730              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
00001470  48E7 0070                731              MOVEM.L A1-A3, -(A7)
00001474                           732              
00001474                           733              
00001474  3A3C 0020                734              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS                     
00001478                           735              
00001478  303C 0001                736              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
0000147C  43F8 139E                737              LEA     BLOCINIT, A1
00001480  45F8 13AA                738              LEA     BLOCUPD, A2
00001484  47F8 13AC                739              LEA     BLOCPLOT, A3
00001488  343C 02BC                740              MOVE.W  #STNINITY, D2
0000148C                           741                                        
0000148C                           742              
0000148C  323C 0014                743              MOVE.W  #STNINITX, D1                       
00001490                           744  .LOOPCOL    
00001490  263C 00676767            745              MOVE.L  #STNFCOL, D3            ; STONE
00001496  4EB8 11DE                746              JSR     GETRDIRT
0000149A  3800                     747              MOVE.W  D0, D4                  ; NUMBER OF DIRT BLOCKS FROM ARRAY OF RANDOM
0000149C  4EB8 133A                748              JSR     AGLADD
000014A0  0442 0028                749              SUB.W   #BLOCSIZE, D2
000014A4  263C 00002850            750              MOVE.L  #DIRTFCOL, D3
000014AA                           751              
000014AA  4EB8 133A                752  .LOOPDIR    JSR     AGLADD 
000014AE  0442 0028                753              SUB.W   #BLOCSIZE, D2                       
000014B2  51CC FFF6                754              DBRA.W  D4, .LOOPDIR
000014B6                           755              
000014B6  263C 00008C50            756              MOVE.L  #GRASFCOL, D3
000014BC  4EB8 133A                757              JSR     AGLADD
000014C0                           758              
000014C0  0641 0028                759              ADD.W   #BLOCSIZE, D1
000014C4  343C 02BC                760              MOVE.W  #STNINITY, D2
000014C8  51CD FFC6                761              DBRA.W  D5, .LOOPCOL
000014CC                           762  
000014CC                           763              
000014CC  4CDF 0E00                764              MOVEM.L (A7)+, A1-A3
000014D0  4CDF 003F                765              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
000014D4  4E75                     766              RTS            
000014D6                           767  ;-----------------------------------------------------------                      
000014D6                           768  
000014D6                           769  
000014D6                           770  
000014D6                           771  
000014D6                           772  
000014D6                           773  
000014D6                           774  
000014D6                           775  
000014D6                           776  
000014D6                           777  
000014D6                           778  -------------------- end include --------------------
000014D6                           779  
000014D6                           780  ; --- INITIALIZE --------------------------------------------------------------
000014D6                           781  
000014D6  4EB8 1000                782  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
000014DA                           783               
000014DA                           784  
000014DA                           785              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
000014DA  4EB8 11D6                786              JSR       RNDINIT
000014DE                           787              
000014DE                           788  
000014DE                           789              
000014DE                           790              ; GENERATES BASELAND OF STONES
000014DE                           791                          
000014DE                           792              ;JSR      STNEINIT
000014DE                           793              ;JSR      GRASINIT
000014DE                           794  
000014DE  4EB8 146C                795              JSR LANDINIT          ; LA BUENA
000014E2                           796     
000014E2                           797             
000014E2                           798  
000014E2                           799              
000014E2                           800              
000014E2                           801  
000014E2                           802  
000014E2                           803  ; --- UPDATE ------------------------------------------------------------------
000014E2                           804  
000014E2  4E40                     805  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
000014E4                           806  
000014E4                           807              ; TO DO : ADD YOUR GAME UPDATE HERE
000014E4  4EB8 1354                808              JSR      AGLUPD
000014E8                           809  
000014E8                           810  ; --- WAIT SYNCH --------------------------------------------------------------
000014E8                           811  
000014E8  4A39 00001504            812  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000014EE  67F8                     813              BEQ     .WINT
000014F0  4239 00001504            814              CLR.B   (SCRINTCT)
000014F6                           815  
000014F6                           816  ; --- PLOT --------------------------------------------------------------------
000014F6                           817  
000014F6                           818              ; TO DO : ADD YOUR GAME PLOT HERE           
000014F6  4EB8 1378                819              JSR     AGLPLOT
000014FA                           820  
000014FA  4E41                     821              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000014FC  60E4                     822              BRA     .LOOP                   ; MAIN LOOP
000014FE  FFFF FFFF                823              SIMHALT
00001502                           824  
00001502                           825  ; --- VARIABLES ---------------------------------------------------------------
00001502                           826  
00001502                           827              INCLUDE "SYSVAR.X68"
00001502                           828  ; =============================================================================
00001502                           829  ; TITLE    : SYSTEM VARIABLES
00001502                           830  ; AUTHOR   : ANTONI BURGUERA
00001502                           831  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001502                           832  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001502                           833  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001502                           834  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001502                           835  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001502                           836  ; HISTORY  : XX-XXX-201X - CREATION
00001502                           837  ;            11-OCT-2020 - MINOR CHANGES
00001502                           838  ; =============================================================================
00001502                           839  
00001502                           840  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001502                           841  
00001502                           842  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001503                           843  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001504                           844  
00001504                           845              DS.W    0
00001504                           846  
00001504                           847  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001504                           848  
00001504                           849  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001505                           850  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001506                           851              DS.W    0
00001506                           852  
00001506                           853  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001506                           854  
00001540                           855              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001540                           856  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00009740                           857              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00009740                           858  -------------------- end include --------------------
00009740                           859              INCLUDE "VAR.X68"
00009740                           860  ; =============================================================================
00009740                           861  ; TITLE    : GAME VARIABLES
00009740                           862  ; AUTHOR   : MAURICI RUIZ
00009740                           863  ; HISTORY  : 15/12/2020  - CREATION
00009740                           864  ; =============================================================================
00009740                           865  
00009740                           866  
00009740                           867  ;---- BLOCK RELATED VARIABLES -------------------------------------------------
00009740                           868  
00009740                           869  BLOCKX      DS.W    1                       ; BLOCK X COORDINATE (XCENTER)
00009742                           870  BLOCKY      DS.W    1                       ; BLOCK Y COORDINATE (XCENTER)
00009744                           871  
00009744                           872  
00009744                           873  ; --- RANDOM NUMBER GENERATOR VARIABLES ---------------------------------------
00009744                           874  
00009744                           875  RNDINDEX    DS.B    1                       ; RANDOM INDEX
00009746                           876              DS.W    0
00009746                           877  -------------------- end include --------------------
00009746                           878              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              133A
AGLADD:END          1350
AGLKILL             11C0
AGLPLOT             1378
AGLPLOT:END         1398
AGLPLOT:LOOP        1380
AGLUPD              1354
AGLUPD:END          1372
AGLUPD:LOOP         135C
BLOCID              1
BLOCINIT            139E
BLOCKX              9740
BLOCKY              9742
BLOCPCOL            0
BLOCPLOT            13AC
BLOCSIZE            28
BLOCUPD             13AA
DIRTFCOL            2850
DIRTINIT            13E8
DIRTINIT:LOOPCOL    1414
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             208
DMMBSIZE            40
DMMDATA             1540
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRTINITX            14
DRTINITY            2A8
GETRDIRT            11DE
GETRDIRT:RANDIRT    11FC
GRASFCOL            8C50
GRASINTX            14
GRASINTY            26C
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1503
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1502
LANDINIT            146C
LANDINIT:LOOPCOL    1490
LANDINIT:LOOPDIR    14AA
NCOLBLKS            12
NROWBLKS            20
NUMSTN              12
RNDGET              121C
RNDGET:RANDVEC      123A
RNDINDEX            9744
RNDINIT             11D6
SCRCYCCT            1505
SCRHEIGH            2D0
SCRINIT             101C
SCRINTCT            1504
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            500
START               14D6
START:LOOP          14E2
START:WINT          14E8
STNEINIT            142A
STNEINIT:LOOPS      1454
STNFCOL             676767
STNINITX            14
STNINITY            2BC
SYSINIT             1000

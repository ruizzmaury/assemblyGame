00001794 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 30/12/2020 20:07:10

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS-
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000500                 85  SCRWIDTH    EQU     1280                    ; SCREEN WIDTH (PIXELS)
00001000  =000002D0                 86  SCRHEIGH    EQU     720                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000208                 93  DMMBNUM     EQU     520                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            95  
00001000                            96  
00001000                            97  
00001000                            98  
00001000                            99  -------------------- end include --------------------
00001000                           100              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                           101  ; =============================================================================
00001000                           102  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                           103  ; AUTHOR   : ANTONI BURGUERA
00001000                           104  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           105  ;            - SYS : GENERIC.
00001000                           106  ;            - SCR : SCREEN MANAGEMENT.
00001000                           107  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           108  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           109  ;            11-OCT-2020 - MINOR CHANGES
00001000                           110  ; =============================================================================
00001000                           111  
00001000                           112  ; -----------------------------------------------------------------------------
00001000                           113  SYSINIT
00001000                           114  ; INITIALIZES THE SYSTEM
00001000                           115  ; INPUT    - NONE
00001000                           116  ; OUTPUT   - NONE
00001000                           117  ; MODIFIES - NONE
00001000                           118  ; -----------------------------------------------------------------------------
00001000  205F                     119              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            120              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            121              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            122              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                123              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     124              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     125              RTS
0000101C                           126  
0000101C                           127  ; =============================================================================
0000101C                           128  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           129  ; =============================================================================
0000101C                           130  
0000101C                           131  ; -----------------------------------------------------------------------------
0000101C                           132  SCRINIT
0000101C                           133  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           134  ; INPUT    - NONE
0000101C                           135  ; OUTPUT   - NONE
0000101C                           136  ; MODIFIES - D0,D1,D2,D3
0000101C                           137  ; -----------------------------------------------------------------------------
0000101C  007C 0700                138              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       139              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 050002D0            140              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                141              MOVE.B  #33,D0
00001032  4E4F                     142              TRAP    #15
00001034  7201                     143              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     144              TRAP    #15
00001038  323C FF00                145              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                146              MOVE.B  #11,D0
00001040  4E4F                     147              TRAP    #15
00001042  123C 0011                148              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                149              MOVE.B  #92,D0
0000104A  4E4F                     150              TRAP    #15
0000104C  323C FF00                151              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                152              MOVE.B  #11,D0
00001054  4E4F                     153              TRAP    #15
00001056  21FC 0000108C 0064       154              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                155              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                156              MOVE.B  #32,D0
00001066  4E4F                     157              TRAP    #15
00001068  143C 0081                158              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                159              MOVE.B  #SCRTIM,D3
00001070  123C 0006                160              MOVE.B  #6,D1
00001074  103C 0020                161              MOVE.B  #32,D0
00001078  4E4F                     162              TRAP    #15
0000107A  4239 000017D2            163              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 000017D3            164              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                165              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     166              RTS
0000108C                           167  
0000108C                           168  ; -----------------------------------------------------------------------------
0000108C                           169  SCRISR
0000108C                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           171  ; INPUT    - NONE
0000108C                           172  ; OUTPUT   - NONE
0000108C                           173  ; MODIFIES - NONE
0000108C                           174  ; -----------------------------------------------------------------------------
0000108C  5239 000017D2            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 000017D3            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     177              RTE
0000109A                           178  
0000109A                           179  ; -----------------------------------------------------------------------------
0000109A                           180  SCRUPD
0000109A                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           182  ; BUFFER FOR THE NEXT ONE.
0000109A                           183  ; INPUT    - NONE
0000109A                           184  ; OUTPUT   - NONE
0000109A                           185  ; MODIFIES - NONE
0000109A                           186  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                187              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                188              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     189              TRAP    #15
000010A4  323C FF00                190              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                191              MOVE.B  #11,D0
000010AC  4E4F                     192              TRAP    #15
000010AE  4C9F 0003                193              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     194              RTE
000010B4                           195  
000010B4                           196  ; =============================================================================
000010B4                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           198  ; =============================================================================
000010B4                           199  
000010B4                           200  ; -----------------------------------------------------------------------------
000010B4                           201  KBDINIT
000010B4                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           203  ; INPUT    - NONE
000010B4                           204  ; OUTPUT   - NONE
000010B4                           205  ; MODIFIES - NONE
000010B4                           206  ; -----------------------------------------------------------------------------
000010B4  4239 000017D0            207              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 000017D1            208              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     210              RTS
000010CA                           211  
000010CA                           212  ; -----------------------------------------------------------------------------
000010CA                           213  KBDREAD
000010CA                           214  ; TRAP SERVICE ROUTINE.
000010CA                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           218  ; INPUT    - NONE
000010CA                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           220  ; MODIFIES - NONE
000010CA                           221  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                222              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                223              MOVE.B  #19,D0
000010D2  223C 50104D20            224              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     225              TRAP    #15
000010DA  6100 002A                226              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            227              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     228              TRAP    #15
000010E6  6100 001E                229              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 000017D0            230              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     231              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     232              AND.B   D2,D0
000010F4  13C2 000017D0            233              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 000017D1            234              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                235              MOVEM.L (A7)+,D0-D3
00001104  4E73                     236              RTE
00001106                           237  
00001106  363C 0003                238  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     239  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     240              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                241              DBRA.W  D3,.LOOP
00001112  4E75                     242              RTS
00001114                           243  
00001114                           244  ; =============================================================================
00001114                           245  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           246  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           247  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           248  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           249  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           250  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           251  ; =============================================================================
00001114                           252  
00001114                           253  ; -----------------------------------------------------------------------------
00001114                           254  DMMINIT
00001114                           255  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           256  ; INPUT    - NONE
00001114                           257  ; OUTPUT   - NONE
00001114                           258  ; MODIFIES - NONE
00001114                           259  ; -----------------------------------------------------------------------------
00001114  48E7 8080                260              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001800            261              LEA     DMMDATA,A0
0000111E  303C 0207                262              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                263  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            264              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                265              DBRA.W  D0,.LOOP
00001130  4CDF 0101                266              MOVEM.L (A7)+,D0/A0
00001134  4E75                     267              RTS
00001136                           268  
00001136                           269  ; -----------------------------------------------------------------------------
00001136                           270  DMMFIRST
00001136                           271  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           272  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           273  ; INPUT    - NONE
00001136                           274  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           275  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           276  ; -----------------------------------------------------------------------------
00001136  41F9 00001800            277              LEA     DMMDATA,A0
0000113C  4A58                     278  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                279              BNE     DMMFRFND
00001142  D1FC 0000003E            280              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 000099FF            281  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     282              BLT     DMMFRLOP
00001150  207C 00000000            283              MOVE.L  #0,A0
00001156  4E75                     284  DMMFRFND    RTS
00001158                           285  
00001158                           286  ; -----------------------------------------------------------------------------
00001158                           287  DMMNEXT
00001158                           288  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           289  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           290  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           291  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           292  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           293  ; -----------------------------------------------------------------------------
00001158  2F00                     294              MOVE.L  D0,-(A7)
0000115A  2008                     295              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            296              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            297              ADD.L   #DMMBSIZE,D0
00001168  2040                     298              MOVE.L  D0,A0
0000116A  201F                     299              MOVE.L  (A7)+,D0
0000116C  60DA                     300              BRA     DMMFRCOM
0000116E                           301  
0000116E                           302  ; -----------------------------------------------------------------------------
0000116E                           303  DMMFRSTO
0000116E                           304  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           305  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           306  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           307  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           308  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           309  ; -----------------------------------------------------------------------------
0000116E  41F9 00001800            310              LEA     DMMDATA,A0
00001174  B058                     311  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                312              BEQ     DMMFFND
0000117A  D1FC 0000003E            313              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 000099FF            314  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     315              BLT     DMMFLOOP
00001188  207C 00000000            316              MOVE.L  #0,A0
0000118E  4E75                     317  DMMFFND     RTS
00001190                           318  
00001190                           319  ; -----------------------------------------------------------------------------
00001190                           320  DMMNEXTO
00001190                           321  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           322  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           323  ; INPUT    - D0.W : ID TO SEARCH
00001190                           324  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           325  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           326  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           327  ; -----------------------------------------------------------------------------
00001190  2F00                     328              MOVE.L  D0,-(A7)
00001192  2008                     329              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            330              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            331              ADD.L   #DMMBSIZE,D0
000011A0  2040                     332              MOVE.L  D0,A0
000011A2  201F                     333              MOVE.L  (A7)+,D0
000011A4  60DA                     334              BRA     DMMFCOM
000011A6                           335  
000011A6                           336  ; -----------------------------------------------------------------------------
000011A6                           337  DMMALLOC
000011A6                           338  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           339  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           340  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           341  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           342  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           343  ; -----------------------------------------------------------------------------
000011A6  3F00                     344              MOVE.W  D0,-(A7)
000011A8  4240                     345              CLR.W   D0
000011AA  4EB8 116E                346              JSR     DMMFRSTO
000011AE  301F                     347              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            348              CMP.L   #0,A0
000011B6  6700 0006                349              BEQ     .END
000011BA  3140 FFFE                350              MOVE.W  D0,-2(A0)
000011BE  4E75                     351  .END        RTS
000011C0                           352  
000011C0                           353  ; -----------------------------------------------------------------------------
000011C0                           354  DMMFREE
000011C0                           355  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           356  ; SYSTEM (0)
000011C0                           357  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           358  ; OUTPUT   - NONE
000011C0                           359  ; MODIFIES - NONE
000011C0                           360  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                361              MOVEM.L D0/A0,-(A7)
000011C4  2008                     362              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            363              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     364              MOVE.L  D0,A0
000011CE  4250                     365              CLR.W   (A0)
000011D0  4CDF 0101                366              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     367              RTS
000011D4  4E75                     368  -------------------- end include --------------------
000011D6                           369              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           370  ; =============================================================================
000011D6                           371  ; TITLE    : GAME CONSTANTS
000011D6                           372  ; AUTHOR   : MAURICI RUIZ PLAZA
000011D6                           373  ; HISTORY  : 15/12/2020  -  CREATION
000011D6                           374  ; =============================================================================
000011D6                           375  
000011D6                           376  ; ---- BLOCK RELATED CONSTANTS-------------------------------------------------
000011D6                           377  
000011D6  =00000028                378  BLOCSIZE    EQU     40                  ; BLOCK WIDTH
000011D6                           379  
000011D6                           380  ; ---- BLOCK TYPES - 00BBGGRR -----------------------
000011D6                           381  
000011D6  =00000000                382  BLOCPCOL    EQU     $00000000               ; PEN COLOR
000011D6  =00000001                383  BLOCID      EQU       1                      ; STONE IDENTIFIER
000011D6  =00000020                384  NROWBLKS    EQU     SCRWIDTH/BLOCSIZE       ; NUMBER OF BLOCKS PER ROW TO PAINT
000011D6  =00000012                385  NCOLBLKS    EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF BLOCKS PER COLUMN TO PAINT
000011D6                           386  
000011D6                           387  
000011D6                           388  ; STONE
000011D6  =00000012                389  NUMSTN      EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF STONES TO PAINT
000011D6  =00000014                390  STNINITX    EQU     BLOCSIZE/2              ; INITIALX STONES
000011D6  =000002BC                391  STNINITY    EQU     SCRHEIGH-BLOCSIZE/2     ; INITIALY STONES                                  
000011D6  =00676767                392  STNFCOL     EQU      $00676767          ; FILL STONE COLOR
000011D6                           393  
000011D6                           394  ; DIRT
000011D6  =00000014                395  DRTINITX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =000002A8                396  DRTINITY    EQU     SCRHEIGH-BLOCSIZE     ; INITIALY DIRT
000011D6  =00002850                397  DIRTFCOL    EQU      $00002850              ; FILL DIRT COLOR 
000011D6                           398  
000011D6                           399  ; GRASS
000011D6  =00000014                400  GRASINTX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =0000026C                401  GRASINTY    EQU     SCRHEIGH-3*BLOCSIZE+BLOCSIZE/2      ; INITIALY DIRT
000011D6  =00008C50                402  GRASFCOL    EQU      $00008C50         ; FILL GRASS COLOR
000011D6                           403  
000011D6                           404  
000011D6                           405  ; ---- PLAYER RELATED CONSTANTS--------------------------------------------------
000011D6                           406  
000011D6  =000000FF                407  PLYRCOL     EQU      $000000FF          ; PLAYER COLOR 
000011D6  =00000008                408  PLYSPEED    EQU     8                  ; PLAYER SPEED
000011D6                           409  
000011D6                           410  
000011D6                           411  
000011D6                           412  
000011D6                           413  
000011D6                           414  -------------------- end include --------------------
000011D6                           415              INCLUDE "RANDOM.X68"            ; RANDOM NUMBER GENERATOR
000011D6                           416  ; =============================================================================
000011D6                           417  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
000011D6                           418  ; AUTHOR   : ANTONI BURGUERA
000011D6                           419  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
000011D6                           420  ; HISTORY  : XX-XXX-201X - CREATION
000011D6                           421  ;            11-OCT-2020 - MINOR CHANGES
000011D6                           422  ; =============================================================================
000011D6                           423  
000011D6                           424  ; -----------------------------------------------------------------------------
000011D6                           425  RNDINIT
000011D6                           426  ; INITIALIZES RANDOM NUMBER GENERATOR
000011D6                           427  ; INPUT    - NONE
000011D6                           428  ; OUTPUT   - NONE
000011D6                           429  ; MODIFIES - NONE
000011D6                           430  ; -----------------------------------------------------------------------------
000011D6  4239 00009A04            431              CLR.B   (RNDINDEX)
000011DC  4E75                     432              RTS
000011DE                           433              
000011DE                           434              
000011DE                           435  ; -----------------------------------------------------------------------------
000011DE                           436  GETRDIRT
000011DE                           437  ; PROVIDES A RANDOM NUMBER OF DIRT BLOCKS BETWEEN 6-10
000011DE                           438  ; INPUT    - NONE
000011DE                           439  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011DE                           440  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011DE                           441  ; -----------------------------------------------------------------------------
000011DE  2F08                     442              MOVE.L  A0,-(A7)
000011E0  41F9 00009A2E            443              LEA     LANDHEIG,A0
000011E6  4280                     444              CLR.L   D0
000011E8  1039 00009A04            445              MOVE.B  (RNDINDEX),D0
000011EE  1030 0800                446              MOVE.B  (A0,D0.L),D0
000011F2  5239 00009A04            447              ADDQ.B  #1,(RNDINDEX)
000011F8  205F                     448              MOVE.L  (A7)+,A0
000011FA  4E75                     449              RTS
000011FC                           450  
000011FC                           451  
000011FC                           452              
000011FC                           453  ; -----------------------------------------------------------------------------
000011FC                           454  RNDGET
000011FC                           455  ; PROVIDES A PSEUDO-RANDOM BYTE
000011FC                           456  ; INPUT    - NONE
000011FC                           457  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011FC                           458  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011FC                           459  ; -----------------------------------------------------------------------------
000011FC  2F08                     460              MOVE.L  A0,-(A7)
000011FE  41F9 0000121A            461              LEA     .RANDVEC,A0
00001204  4280                     462              CLR.L   D0
00001206  1039 00009A04            463              MOVE.B  (RNDINDEX),D0
0000120C  1030 0800                464              MOVE.B  (A0,D0.L),D0
00001210  5239 00009A04            465              ADDQ.B  #1,(RNDINDEX)
00001216  205F                     466              MOVE.L  (A7)+,A0
00001218  4E75                     467              RTS
0000121A                           468  
0000121A= A2 EE 9A 0C F5 24 ...    469  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
00001222= 2A A3 51 26 E0 AC ...    470              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
0000122A= 75 51 CA FD 33 EB ...    471              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001232= 60 CC E7 B8 9A EB ...    472              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000123A= 1D 76 B5 95 B0 89 ...    473              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001242= 39 15 48 C9 6E CA ...    474              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000124A= 43 E7 E2 7C 37 25 ...    475              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001252= E9 94 CE E9 E4 52 ...    476              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000125A= 37 6D 9A 84 A2 28 ...    477              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001262= 19 E2 C6 77 80 D4 ...    478              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000126A= 0A 5A 32 67 33 C2 ...    479              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001272= 59 80 DC 0E 57 FC ...    480              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000127A= 8A AB BC F7 07 4D ...    481              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001282= EF D5 77 6E 1E BB ...    482              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000128A= D6 E0 2A 8F BD 28 ...    483              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001292= 13 4F 66 EC 0A 64 ...    484              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000129A= 56 52 9A 16 9B 90 ...    485              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
000012A2= 06 8A A4 F7 01 DA ...    486              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
000012AA= F2 E7 77 28 B1 76 ...    487              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
000012B2= A4 42 E3 81 B1 67 ...    488              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
000012BA= BF CE FA 16 BF 38 ...    489              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
000012C2= D1 8B 50 0C 5F 49 ...    490              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
000012CA= DE 4C 14 A2 40 DC ...    491              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012D2= B6 9B 0A 38 5D AB ...    492              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012DA= E2 1B DD 75 15 82 ...    493              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012E2= 8A 26 51 30 9F 47 ...    494              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012EA= 1E 8A BB 71 C6 6E ...    495              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012F2= 9F 47 E5 34 94 27 ...    496              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012FA= 7D 06 D6 BA 30 0F ...    497              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
00001302= EC 7F 7E 03 CF 2D ...    498              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
0000130A= 94 5B 23 F2 8B CD ...    499              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
00001312= 74 33 EC B9 0F D5 ...    500              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
0000131A                           501  
0000131A                           502  
0000131A                           503  -------------------- end include --------------------
0000131A                           504              INCLUDE "AGENTLST.X68"          ; 
0000131A                           505  ; =============================================================================
0000131A                           506  ; TITLE    : AGENT LIST
0000131A                           507  ; AUTHOR   : ANTONI BURGUERA
0000131A                           508  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
0000131A                           509  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
0000131A                           510  ;              +4 - LONG : PLOT SUBROUTINE POINTER
0000131A                           511  ;              +8:END    : DATA (AGENT SPECIFIC)
0000131A                           512  ; HISTORY  : XX-XXX-201X - CREATION
0000131A                           513  ;            11-OCT-2020 - MINOR CHANGES
0000131A                           514  ; =============================================================================
0000131A                           515  
0000131A                           516  ; -----------------------------------------------------------------------------
0000131A                           517  AGLADD
0000131A                           518  ; CREATES A NEW AGENT
0000131A                           519  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
0000131A                           520  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
0000131A                           521  ;            A3 - POINTER TO AGENT PLOT FUNCTION
0000131A                           522  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
0000131A                           523  ;            D1 - AGENT INITIALIZATION PARAMETER 1
0000131A                           524  ;            D2 - AGENT INITIALIZATION PARAMETER 2
0000131A                           525  ;            D3 - AGENT INITIALIZATION PARAMETER 3
0000131A                           526  ; OUTPUT   - NONE
0000131A                           527  ; MODIFIES - NONE
0000131A                           528  ; -----------------------------------------------------------------------------
0000131A  2F08                     529              MOVE.L  A0,-(A7)
0000131C  4EB8 11A6                530              JSR     DMMALLOC
00001320  B1FC 00000000            531              CMP.L   #0,A0
00001326  6700 0008                532              BEQ     .END
0000132A  20CA                     533              MOVE.L  A2,(A0)+
0000132C  20CB                     534              MOVE.L  A3,(A0)+
0000132E  4E91                     535              JSR     (A1)
00001330  205F                     536  .END        MOVE.L  (A7)+,A0
00001332  4E75                     537              RTS
00001334                           538  
00001334                           539  ; -----------------------------------------------------------------------------
00001334                           540  AGLUPD
00001334                           541  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001334                           542  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001334                           543  ; INPUT    - NONE
00001334                           544  ; OUTPUT   - NONE
00001334                           545  ; MODIFIES - NONE
00001334                           546  ; -----------------------------------------------------------------------------
00001334  48E7 00C0                547              MOVEM.L A0-A1,-(A7)
00001338  4EB8 1136                548              JSR     DMMFIRST
0000133C  B1FC 00000000            549  .LOOP       CMP.L   #0,A0
00001342  6700 000E                550              BEQ     .END
00001346  2250                     551              MOVE.L  (A0),A1
00001348  5088                     552              ADD.L   #8,A0
0000134A  4E91                     553              JSR     (A1)
0000134C  4EB8 1158                554              JSR     DMMNEXT
00001350  60EA                     555              BRA     .LOOP
00001352  4CDF 0300                556  .END        MOVEM.L (A7)+,A0-A1
00001356  4E75                     557              RTS
00001358                           558  
00001358                           559  ; -----------------------------------------------------------------------------
00001358                           560  AGLPLOT
00001358                           561  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001358                           562  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001358                           563  ; INPUT    - NONE
00001358                           564  ; OUTPUT   - NONE
00001358                           565  ; MODIFIES - NONE
00001358                           566  ; -----------------------------------------------------------------------------
00001358  48E7 00C0                567              MOVEM.L A0-A1,-(A7)
0000135C  4EB8 1136                568              JSR     DMMFIRST
00001360  B1FC 00000000            569  .LOOP       CMP.L   #0,A0
00001366  6700 0010                570              BEQ     .END
0000136A  2268 0004                571              MOVE.L  4(A0),A1
0000136E  5088                     572              ADD.L   #8,A0
00001370  4E91                     573              JSR     (A1)
00001372  4EB8 1158                574              JSR     DMMNEXT
00001376  60E8                     575              BRA     .LOOP
00001378  4CDF 0300                576  .END        MOVEM.L (A7)+,A0-A1
0000137C  4E75                     577              RTS
0000137E                           578  
0000137E                           579  ; -----------------------------------------------------------------------------
0000137E  =000011C0                580  AGLKILL     EQU     DMMFREE
0000137E                           581  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000137E                           582  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000137E                           583  ; OUTPUT   - NONE
0000137E                           584  ; MODIFIES - NONE
0000137E                           585  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000137E                           586  ; -----------------------------------------------------------------------------
0000137E                           587  -------------------- end include --------------------
0000137E                           588              INCLUDE "BLOCK.X68"             ; BLOCK MANAGEMENT
0000137E                           589  
0000137E                           590  ;-----------------------------------------------------------
0000137E                           591  BLOCINIT
0000137E                           592  ; INITIALIZE BLOCK
0000137E                           593  ; INPUT     - D1.W  X PLACE COORDINATE
0000137E                           594  ;          - D2.W  Y PLACE COORDINATE 
0000137E                           595  ;          - D3.L  BLOCK COLOR
0000137E                           596  ; OUTPUT    - NONE
0000137E                           597  ; MODIFIES  - NONE  
0000137E                           598  ;-----------------------------------------------------------
0000137E                           599                         
0000137E  3081                     600             MOVE.W   D1, (A0)
00001380  3142 0002                601              MOVE.W  D2, 2(A0)
00001384  2143 0004                602              MOVE.L  D3, 4(A0)
00001388                           603              
00001388                           604              
00001388  4E75                     605              RTS
0000138A                           606  
0000138A                           607  
0000138A                           608  ;-----------------------------------------------------------
0000138A                           609  BLOCUPD
0000138A                           610  ; UPDATE BLOCK
0000138A                           611  ; INPUT     - NONE
0000138A                           612  ; OUTPUT    - NONE
0000138A                           613  ; MODIFIES  - NONE  
0000138A                           614  ;-----------------------------------------------------------
0000138A  48E7 F800                615              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
0000138E                           616              
0000138E  4240                     617              CLR D0
00001390  4241                     618              CLR D1
00001392                           619            
00001392                           620              ; CHECK BOTTOM'S PLAYER WITH TOP'S BLOCK
00001392  3039 00009A08            621              MOVE.W  (PLAYERY),D0            
00001398  0640 0014                622              ADD.W   #BLOCSIZE/2, D0         ; BOTTOM OF PLAYER
0000139C                           623              
0000139C  3228 0002                624              MOVE.W  2(A0),D1
000013A0  0441 0014                625              SUB.W   #BLOCSIZE/2, D1         ; TOP OF BLOCK
000013A4                           626  
000013A4  B041                     627              CMP.W   D1, D0
000013A6  6C00 0006                628              BGE     .CHKPRHT
000013AA  6000 003C                629              BRA     .END
000013AE                           630              
000013AE                           631  .CHKPRHT    
000013AE                           632              ; CHECK RIGHT'S PLAYER WITH LEFT'S BLOCK
000013AE  3039 00009A06            633              MOVE.W  (PLAYERX),D0            
000013B4  0640 0014                634              ADD.W   #BLOCSIZE/2, D0         ; RIGHT OF PLAYER
000013B8                           635              
000013B8  3210                     636              MOVE.W  (A0),D1                 ; BLOCKX 
000013BA                           637              
000013BA  B041                     638              CMP.W   D1, D0
000013BC  6D00 0010                639              BLT     .CHKPINL
000013C0                           640              
000013C0                           641              ;SUB.W   #BLOCSIZE/2, D1         ; LEFT OF BLOCK
000013C0                           642  
000013C0                           643              
000013C0                           644              
000013C0                           645  
000013C0                           646              
000013C0                           647              ; CHECK LEFT'S PLAYER WITH RIGHT'S BLOCK
000013C0                           648              
000013C0  0440 0028                649  .CHKPLFT    SUB.W   #BLOCSIZE, D0           ; LEFT OF PLAYER
000013C4                           650                          
000013C4  B041                     651              CMP.W   D1, D0
000013C6  6E00 0016                652              BGT     .CHKPINR
000013CA                           653              
000013CA  6000 001C                654              BRA .END
000013CE                           655              
000013CE                           656              
000013CE                           657  .CHKPINL    
000013CE  0441 0014                658              SUB.W #BLOCSIZE/2, D1               ; LEFT SIDE OF BLOCK 
000013D2                           659                                              
000013D2  B041                     660              CMP.W   D1, D0
000013D4  6C00 0018                661              BGE     .BLOCKL
000013D8                           662              
000013D8  0641 0014                663              ADD.W   #BLOCSIZE/2, D1           ; BLOCKX            
000013DC  60E2                     664              BRA .CHKPLFT
000013DE                           665              
000013DE                           666  
000013DE                           667  .CHKPINR      
000013DE  0641 0014                668              ADD.W #BLOCSIZE/2, D1           ; THE RIGHT SIDE OF THE BLOCK
000013E2  B041                     669              CMP.W   D1, D0
000013E4  6D00 0016                670              BLT     .BLOCKR
000013E8                           671             
000013E8  4CDF 001F                672  .END        MOVEM.L (A7)+, D0-D4
000013EC  4E75                     673              RTS
000013EE                           674              
000013EE                           675              
000013EE                           676  .BLOCKL     
000013EE  3810                     677              MOVE.W (A0),D4
000013F0  0444 0028                678              SUB.W   #BLOCSIZE, D4
000013F4  33C4 00009A06            679              MOVE.W D4, (PLAYERX)
000013FA  60EC                     680              BRA .END
000013FC                           681  
000013FC                           682  .BLOCKR     
000013FC  3810                     683              MOVE.W (A0),D4
000013FE  0644 0028                684              ADD.W   #BLOCSIZE, D4
00001402  33C4 00009A06            685              MOVE.W D4, (PLAYERX)
00001408  60DE                     686              BRA .END   
0000140A                           687  
0000140A                           688  
0000140A                           689  ;-----------------------------------------------------------
0000140A                           690  BLOCPLOT
0000140A                           691  ; PLOT BLOCK
0000140A                           692  ; INPUT     - NONE
0000140A                           693  ; OUTPUT    - NONE
0000140A                           694  ; MODIFIES  - NONE  
0000140A                           695  ;-----------------------------------------------------------
0000140A  48E7 F800                696              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
0000140E  103C 0050                697              MOVE.B  #80, D0                 ; SET PEN COLOR TASK
00001412  7200                     698              MOVE.L  #BLOCPCOL, D1           ; BLOCK COLOR
00001414  4E4F                     699              TRAP #15; SET PEN COLOR
00001416  103C 0051                700              MOVE.B  #81, D0                 ; SET FILL COLOR TASK
0000141A  2228 0004                701              MOVE.L  4(A0),D1                ; BLOCK COLOR
0000141E  4E4F                     702              TRAP #15; SET FILL COLOR
00001420                           703              
00001420  3210                     704              MOVE.W  (A0),D1                 ; D1:=XCENTER
00001422  3428 0002                705              MOVE.W  2(A0),D2                ; D2:=YCENTER
00001426  3601                     706              MOVE.W  D1, D3                  ; D3:=XCENTER
00001428  3802                     707              MOVE.W  D2, D4                  ; D4:=YCENTER
0000142A                           708              
0000142A  0441 0014                709              SUB.W   #BLOCSIZE/2, D1         ; D1:=XLEFT
0000142E  0442 0014                710              SUB.W   #BLOCSIZE/2, D2         ; D2:=YTOP
00001432  0643 0014                711              ADD.W   #BLOCSIZE/2, D3         ; D3:=XRIGHT
00001436  0644 0014                712              ADD.W   #BLOCSIZE/2, D4         ; D4:=YBOTTOM
0000143A  103C 0057                713              MOVE.B  #87, D0
0000143E  4E4F                     714              TRAP    #15                     ; DRAW BLOCK
00001440  4CDF 001F                715              MOVEM.L (A7)+, D0-D4            ; RESTORE REGISTERS
00001444  4E75                     716              RTS
00001446                           717  
00001446                           718  
00001446                           719  
00001446                           720  
00001446                           721  
00001446                           722  
00001446                           723  
00001446                           724  
00001446                           725  
00001446                           726  -------------------- end include --------------------
00001446                           727              INCLUDE "LAND.X68"              ; LAND CREATION
00001446                           728  ;-----------------------------------------------------------
00001446                           729  
00001446                           730  DIRTINIT
00001446                           731  ; CREATE LAND
00001446                           732  ; INPUT     - NONE
00001446                           733  ; OUTPUT    - NONE
00001446                           734  ; MODIFIES  - NONE  
00001446                           735  ;-----------------------------------------------------------
00001446  48E7 FC00                736              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
0000144A  48E7 0070                737              MOVEM.L A1-A3, -(A7)
0000144E                           738              
0000144E                           739              
0000144E  383C 0003                740              MOVE.W  #3, D4  ; NUMBER OF STONE BLOCKS
00001452  3A3C 0014                741              MOVE.W  #STNINITX, D5                     
00001456                           742              
00001456  303C 0001                743              MOVE.W  #BLOCID, D0
0000145A  43F8 137E                744              LEA     BLOCINIT, A1
0000145E  45F8 138A                745              LEA     BLOCUPD, A2
00001462  47F8 140A                746              LEA     BLOCPLOT, A3
00001466  343C 02BC                747              MOVE.W  #STNINITY, D2
0000146A  263C 00676767            748              MOVE.L  #STNFCOL, D3                           
00001470                           749              
00001470  3205                     750              MOVE.W  D5, D1                       
00001472  4EB8 131A                751  .LOOPCOL    JSR     AGLADD
00001476  0442 0028                752              SUB.W   #BLOCSIZE, D2
0000147A  51CC FFF6                753              DBRA.W  D4, .LOOPCOL
0000147E                           754              
0000147E  4CDF 0E00                755              MOVEM.L (A7)+, A1-A3
00001482  4CDF 003F                756              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
00001486  4E75                     757              RTS
00001488                           758  
00001488                           759  
00001488                           760  
00001488                           761  
00001488                           762  
00001488                           763  ;-----------------------------------------------------------
00001488                           764  STNEINIT
00001488                           765  ; CREATE BASELAND OF STONES
00001488                           766  ; INPUT     - NONE
00001488                           767  ; OUTPUT    - NONE
00001488                           768  ; MODIFIES  - NONE  
00001488                           769  ;-----------------------------------------------------------
00001488                           770              
00001488  48E7 FC00                771              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
0000148C  48E7 0070                772              MOVEM.L A1-A3, -(A7)
00001490                           773              
00001490                           774              
00001490  383C 0020                775              MOVE.W  #SCRWIDTH/BLOCSIZE, D4  ; NUMBER OF STONE BLOCKS
00001494  3A3C 0014                776              MOVE.W  #STNINITX, D5                     
00001498                           777              
00001498  303C 0001                778              MOVE.W  #BLOCID, D0
0000149C  43F8 137E                779              LEA      BLOCINIT, A1
000014A0  45F8 138A                780              LEA     BLOCUPD, A2
000014A4  47F8 140A                781              LEA     BLOCPLOT, A3
000014A8  343C 02BC                782              MOVE.W  #STNINITY, D2
000014AC  263C 00676767            783              MOVE.L  #STNFCOL, D3                           
000014B2                           784              
000014B2  3205                     785  .LOOPS      MOVE.W  D5, D1                       
000014B4  4EB8 131A                786              JSR     AGLADD
000014B8  0645 0028                787              ADD.W   #BLOCSIZE, D5
000014BC  51CC FFF4                788              DBRA.W  D4, .LOOPS
000014C0                           789              
000014C0  4CDF 0E00                790              MOVEM.L (A7)+, A1-A3
000014C4  4CDF 003F                791              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
000014C8  4E75                     792              RTS
000014CA                           793  
000014CA                           794              
000014CA                           795  ;-----------------------------------------------------------                      
000014CA                           796  LANDINIT
000014CA                           797  ; INITIALIZE BASELAND  
000014CA                           798  ; INPUT     - NONE
000014CA                           799  ; OUTPUT    - NONE
000014CA                           800  ; MODIFIES  - NONE  
000014CA                           801  ;-----------------------------------------------------------
000014CA  48E7 FC00                802              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000014CE  48E7 0070                803              MOVEM.L A1-A3, -(A7)
000014D2                           804              
000014D2                           805              
000014D2  3A3C 0020                806              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS                     
000014D6                           807              
000014D6  303C 0001                808              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
000014DA  43F8 137E                809              LEA      BLOCINIT, A1
000014DE  45F8 138A                810              LEA     BLOCUPD, A2
000014E2  47F8 140A                811              LEA     BLOCPLOT, A3
000014E6  343C 02BC                812              MOVE.W  #STNINITY, D2
000014EA                           813                                        
000014EA                           814              
000014EA  323C 0014                815              MOVE.W  #STNINITX, D1                       
000014EE                           816  .LOOPCOL    
000014EE  263C 00676767            817              MOVE.L  #STNFCOL, D3            ; STONE
000014F4  4EB8 11DE                818              JSR     GETRDIRT
000014F8  3800                     819              MOVE.W  D0, D4                  ; NUMBER OF DIRT BLOCKS FROM ARRAY OF RANDOM
000014FA  4EB8 131A                820              JSR     AGLADD
000014FE  0442 0028                821              SUB.W   #BLOCSIZE, D2
00001502  263C 00002850            822              MOVE.L  #DIRTFCOL, D3
00001508                           823              
00001508  4EB8 131A                824  .LOOPDIR    JSR     AGLADD 
0000150C  0442 0028                825              SUB.W   #BLOCSIZE, D2                       
00001510  51CC FFF6                826              DBRA.W  D4, .LOOPDIR
00001514                           827              
00001514  263C 00008C50            828              MOVE.L  #GRASFCOL, D3
0000151A  4EB8 131A                829              JSR     AGLADD
0000151E                           830              
0000151E  0641 0028                831              ADD.W   #BLOCSIZE, D1
00001522  343C 02BC                832              MOVE.W  #STNINITY, D2
00001526  51CD FFC6                833              DBRA.W  D5, .LOOPCOL
0000152A                           834  
0000152A                           835              
0000152A  4CDF 0E00                836              MOVEM.L (A7)+, A1-A3
0000152E  4CDF 003F                837              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
00001532  4E75                     838              RTS            
00001534                           839  ;-----------------------------------------------------------                      
00001534                           840  
00001534                           841  
00001534                           842  ;-----------------------------------------------------------                      
00001534                           843  LANDCRTE
00001534                           844  ; INITIALIZE BASELAND  
00001534                           845  ; INPUT     - NONE
00001534                           846  ; OUTPUT    - NONE
00001534                           847  ; MODIFIES  - NONE  
00001534                           848  ;-----------------------------------------------------------
00001534  48E7 FC00                849              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
00001538  48E7 0070                850              MOVEM.L A1-A3, -(A7)
0000153C                           851              
0000153C  3A3C 0020                852              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS 
00001540  303C 0001                853              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
00001544  43F8 137E                854              LEA      BLOCINIT, A1
00001548  45F8 138A                855              LEA     BLOCUPD, A2
0000154C  47F8 140A                856              LEA     BLOCPLOT, A3           
00001550  323C 0014                857              MOVE.W  #STNINITX, D1             
00001554                           858                                                 
00001554                           859  .LOOPL      
00001554  343C 02BC                860              MOVE.W  #STNINITY, D2
00001558  4EB8 11DE                861              JSR GETRDIRT
0000155C  3800                     862              MOVE.W D0, D4
0000155E  263C 00676767            863              MOVE.L  #STNFCOL, D3     
00001564  4EB8 131A                864              JSR AGLADD
00001568  5544                     865              SUB.W   #2, D4
0000156A  0442 0028                866              SUB.W   #BLOCSIZE, D2
0000156E  263C 00002850            867              MOVE.L  #DIRTFCOL, D3 
00001574                           868  .LOOPD      
00001574  4EB8 131A                869              JSR AGLADD
00001578  0442 0028                870              SUB.W   #BLOCSIZE, D2
0000157C  51CC FFF6                871              DBRA.W  D4, .LOOPD
00001580                           872              
00001580  263C 00008C50            873              MOVE.L  #GRASFCOL, D3
00001586  4EB8 131A                874              JSR     AGLADD
0000158A                           875              
0000158A  0641 0028                876              ADD.W   #BLOCSIZE, D1
0000158E  51CD FFC4                877              DBRA.W  D5, .LOOPL      
00001592                           878  
00001592                           879                         
00001592  4CDF 0E00                880              MOVEM.L (A7)+, A1-A3
00001596  4CDF 003F                881              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
0000159A  4E75                     882              RTS            
0000159C                           883  ;-----------------------------------------------------------                      
0000159C                           884  
0000159C                           885  
0000159C                           886  
0000159C                           887  
0000159C                           888  
0000159C                           889  
0000159C                           890  
0000159C                           891  
0000159C                           892  
0000159C                           893  -------------------- end include --------------------
0000159C                           894              INCLUDE "PLAYER.X68"              ; PLAYER MANAGEMENT
0000159C                           895  
0000159C                           896  
0000159C                           897  ;-----------------------------------------------------------
0000159C                           898  PLYRINIT
0000159C                           899  ; INITIALIZE PLAYER
0000159C                           900  ; INPUT     -   - NONE 
0000159C                           901  ; OUTPUT    - NONE  
0000159C                           902  ; MODIFIES  - NONE  
0000159C                           903  ;-----------------------------------------------------------
0000159C                           904                         
0000159C  33FC 0037 00009A06       905              MOVE.W  #55,(PLAYERX)
000015A4  33FC 0032 00009A08       906                      MOVE.W  #50,(PLAYERY)
000015AC                           907  
000015AC  4E75                     908                      RTS
000015AE                           909  
000015AE                           910  
000015AE                           911  ;-----------------------------------------------------------
000015AE                           912  PLYRUPDX
000015AE                           913  ; UPDATE PLAYER
000015AE                           914  ; INPUT         - NONE
000015AE                           915  ; OUTPUT    - NONE
000015AE                           916  ; MODIFIES  - NONE  
000015AE                           917  ;-----------------------------------------------------------
000015AE  0839 0000 000017D0       918                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
000015B6  6600 0010                919              BNE     .MOVEL                  ; YES: MOVE LEFT
000015BA  0839 0002 000017D0       920              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
000015C2  6600 001A                921              BNE     .MOVER                  ; YES: MOVE LEFT
000015C6  4E75                     922              RTS
000015C8  0C79 0014 00009A06       923  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
000015D0  6E00 0004                924              BGT     .DOL                    ; NO: MOVE
000015D4  4E75                     925              RTS                             ; YES: END
000015D6  5179 00009A06            926  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
000015DC  4E75                     927              RTS
000015DE  0C79 04EB 00009A06       928  .MOVER      CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
000015E6  6D00 0004                929              BLT     .DOR                    ; NO: MOVE
000015EA  4E75                     930              RTS                             ; YES: END
000015EC  5079 00009A06            931  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
000015F2  4E75                     932              RTS
000015F4                           933  
000015F4                           934              
000015F4                           935  
000015F4                           936  
000015F4                           937  
000015F4                           938  
000015F4                           939  
000015F4                           940  ;-----------------------------------------------------------
000015F4                           941  PLAYELX
000015F4                           942  ; UPDATE PLAYER
000015F4                           943  ; INPUT         - NONE
000015F4                           944  ; OUTPUT    - NONE
000015F4                           945  ; MODIFIES  - NONE  
000015F4                           946  ;-----------------------------------------------------------
000015F4  0839 0000 000017D0       947                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
000015FC  6600 0010                948              BNE     .MOVEL                  ; YES: MOVE LEFT
00001600  0839 0002 000017D0       949              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
00001608  6600 001A                950              BNE     .MOVER                  ; YES: MOVE LEFT
0000160C  4E75                     951              RTS
0000160E  0C79 0014 00009A06       952  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
00001616  6E00 0004                953              BGT     .DOL                    ; NO: MOVE
0000161A  4E75                     954              RTS                             ; YES: END
0000161C  5179 00009A06            955  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
00001622  4E75                     956              RTS
00001624                           957  
00001624                           958  
00001624                           959  
00001624                           960  
00001624                           961  .MOVER      
00001624  48E7 0E80                962              MOVEM.L D4-D6/A0, -(A7)         ; STACK REGISTER
00001628                           963              
00001628  0C79 04EB 00009A06       964              CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
00001630  6E00 0056                965              BGT     .END                    ; YES: STOP
00001634                           966              
00001634                           967              
00001634  3A39 00009A06            968              MOVE.W  (PLAYERX),D5
0000163A  0445 0014                969              SUB.W   #BLOCSIZE/2, D5
0000163E  8AFC 0028                970              DIVU.W  #BLOCSIZE,  D5  ; SEGMENT OF SCREEN PLAYER LOCATED 
00001642                           971       
00001642                           972              
00001642  3C05                     973              MOVE.W  D5, D6      ; COPY SEGMENT OF SCREEN PLAYER LOCATED IN D6
00001644                           974                         
00001644  41F9 00009A2E            975              LEA LANDHEIG, A0
0000164A  D0C5                     976              ADDA.W  D5, A0
0000164C                           977                             
0000164C                           978                
0000164C  1A10                     979              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
0000164E                           980                                      ; OF THE SCREEN SEGMENT WHERE IS 
0000164E                           981                                      ; LOCATED THE PLAYER
0000164E                           982                                      ; RIGHT NOW 
0000164E  5205                     983              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
00001650                           984                          
00001650                           985              
00001650  5246                     986              ADD.W   #1, D6          ; ACCESSING THE NUMBER OF BLOCKS OF THE NEXT COLUMN
00001652  41F9 00009A2E            987              LEA LANDHEIG, A0
00001658  D0C6                     988              ADDA.W  D6, A0
0000165A                           989  
0000165A  1C10                     990              MOVE.B  (A0),D6         ; NUMBER OF BLOCKS - 1 IN COLUMN 
0000165C                           991                                      ; OF THE NEXT SCREEN SEGMENT WHERE IS 
0000165C                           992                                      ; LOCATED THE PLAYER
0000165C                           993                                      ; RIGHT NOW 
0000165C                           994  
0000165C                           995                
0000165C  5206                     996              ADD.B   #1, D6          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
0000165E                           997              
0000165E  BC45                     998              CMP.W   D5, D6          ; NEXT COLUMN IS HIGHER THAN THE ACTUAL COLUMN?
00001660  6F00 0020                999              BLE .DOR
00001664                          1000              
00001664  CCFC 0028               1001              MULU.W  #BLOCSIZE, D6   
00001668  383C 02D0               1002              MOVE.W  #SCRHEIGH, D4   
0000166C  9846                    1003              SUB.W   D6, D4          
0000166E  0444 0014               1004              SUB.W   #BLOCSIZE/2, D4  
00001672  5B44                    1005              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN
00001674                          1006  
00001674  B879 00009A08           1007              CMP.W   (PLAYERY),D4   ; TOP OF COLUMN HIGHER THAN PLAYERY?
0000167A  6E00 0006               1008              BGT     .DOR           ; YES: MOVE
0000167E                          1009                            
0000167E  6000 0008               1010              BRA .END               ; NO: END
00001682                          1011              
00001682                          1012  
00001682  5079 00009A06           1013  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
00001688                          1014  .END        
00001688  4CDF 0170               1015              MOVEM.L (A7)+, D4-D6/A0         ; RESTORE REGISTERS
0000168C  4E75                    1016              RTS
0000168E                          1017  
0000168E                          1018  
0000168E                          1019  
0000168E                          1020  
0000168E                          1021  
0000168E                          1022  
0000168E                          1023  ;-----------------------------------------------------------
0000168E                          1024  PLAYELY
0000168E                          1025  ; UPDATE PLAYER
0000168E                          1026  ; INPUT         - NONE
0000168E                          1027  ; OUTPUT    - NONE
0000168E                          1028  ; MODIFIES  - NONE  
0000168E                          1029  ;-----------------------------------------------------------
0000168E                          1030                      
0000168E  0839 0001 000017D0      1031              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001696  6600 0010               1032              BNE     .MOVEU                  ; YES: MOVE UP
0000169A  0839 0003 000017D0      1033              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?
000016A2  6600 001A               1034              BNE     .MOVED                  ; YES: MOVE DOWN
000016A6  4E75                    1035              RTS
000016A8                          1036              
000016A8                          1037        
000016A8                          1038              
000016A8  0C79 0014 00009A08      1039  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
000016B0  6E00 0004               1040              BGT     .DOU                    ; NO: MOVE
000016B4  4E75                    1041              RTS                             ; YES: END
000016B6  5179 00009A08           1042  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
000016BC  4E75                    1043              RTS
000016BE  0C79 02BC 00009A08      1044  .MOVED      CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
000016C6  6D00 0004               1045              BLT     .DOD                    ; NO: MOVE
000016CA  4E75                    1046              RTS                             ; YES: END
000016CC  5079 00009A08           1047  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
000016D2  4E75                    1048              RTS
000016D4                          1049  
000016D4                          1050  
000016D4                          1051  
000016D4                          1052  ;-----------------------------------------------------------
000016D4                          1053  
000016D4                          1054  PLYRUPDY
000016D4                          1055  ; UPDATE PLAYER
000016D4                          1056  ; INPUT         - NONE
000016D4                          1057  ; OUTPUT    - NONE
000016D4                          1058  ; MODIFIES  - NONE  
000016D4                          1059  ;-----------------------------------------------------------
000016D4                          1060        
000016D4                          1061                      
000016D4  0839 0001 000017D0      1062              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
000016DC  6600 0010               1063              BNE     .MOVEU                  ; YES: MOVE UP
000016E0  0839 0003 000017D0      1064              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?            
000016E8  6600 001A               1065              BNE     .MOVED                  ; YES: MOVE DOWN
000016EC  4E75                    1066              RTS
000016EE                          1067              
000016EE                          1068        
000016EE                          1069              
000016EE  0C79 0014 00009A08      1070  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
000016F6  6E00 0004               1071              BGT     .DOU                    ; NO: MOVE
000016FA  4E75                    1072              RTS                             ; YES: END
000016FC  5179 00009A08           1073  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
00001702  4E75                    1074              RTS
00001704                          1075  .MOVED      
00001704  3A39 00009A06           1076              MOVE.W  (PLAYERX),D5
0000170A  8AFC 0028               1077              DIVU.W  #BLOCSIZE,  D5
0000170E                          1078                         
0000170E  41F9 00009A2E           1079              LEA LANDHEIG, A0
00001714  D0C5                    1080              ADDA.W  D5, A0
00001716                          1081                                     
00001716                          1082                
00001716  1A10                    1083              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
00001718                          1084                                      ; OF THE SCREEN SEGMENT WHERE IS 
00001718                          1085                                      ; LOCATED THE PLAYER
00001718                          1086                                      ; RIGHT NOW 
00001718                          1087                 
00001718                          1088              
00001718  5205                    1089              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
0000171A  CAFC 0028               1090              MULU.W  #BLOCSIZE, D5   
0000171E  383C 02D0               1091              MOVE.W  #SCRHEIGH, D4   
00001722  9845                    1092              SUB.W   D5, D4          
00001724  0444 0014               1093              SUB.W   #BLOCSIZE/2, D4  
00001728  5B44                    1094              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN 
0000172A                          1095              
0000172A  B879 00009A08           1096              CMP.W   (PLAYERY),D4   ; LOWER THAN TOP OF COLUMN BLOCKS?
00001730  6E00 0012               1097              BGT     .DOD           ; YES: MOVE
00001734  4E75                    1098              RTS                    ; NO: END
00001736                          1099                          
00001736  0C79 02BC 00009A08      1100              CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
0000173E  6D00 0004               1101              BLT     .DOD                    ; NO: MOVE
00001742  4E75                    1102              RTS                             ; YES: END
00001744  5079 00009A08           1103  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
0000174A  4E75                    1104              RTS
0000174C                          1105  
0000174C                          1106  
0000174C                          1107  ;-----------------------------------------------------------
0000174C                          1108  
0000174C                          1109  
0000174C                          1110  ;------------------------------------------------------------------------------------------------------
0000174C                          1111  
0000174C                          1112  
0000174C                          1113  PLYRPLOT
0000174C                          1114  ; PLOT PLAYER
0000174C                          1115  ; INPUT     - NONE
0000174C                          1116  ; OUTPUT    - NONE
0000174C                          1117  ; MODIFIES  - NONE  
0000174C                          1118  ;-----------------------------------------------------------
0000174C  48E7 F800               1119                      MOVEM.L D0-D4, -(A7)    ; STACK REGISTER
00001750  103C 0050               1120                      MOVE.B                  #80, D0; SET PEN COLOR TASK
00001754  223C 000000FF           1121                      MOVE.L                  #PLYRCOL, D1; PLAYER COLOR
0000175A  4E4F                    1122                      TRAP #15                ; SET PEN COLOR
0000175C  103C 0051               1123                      MOVE.B                  #81, D0; SET FILL COLOR TASK
00001760  223C 000000FF           1124                      MOVE.L                  #PLYRCOL,D1; BLOCK COLOR
00001766  4E4F                    1125                      TRAP #15                ; SET FILL COLOR
00001768                          1126              
00001768  3239 00009A06           1127                      MOVE.W                  (PLAYERX),D1; D1:=XCENTER
0000176E  3439 00009A08           1128                      MOVE.W                  (PLAYERY),D2; D2:=YCENTER
00001774  3601                    1129                      MOVE.W                  D1, D3; D3:=XCENTER
00001776  3802                    1130                      MOVE.W                  D2, D4; D4:=YCENTER
00001778                          1131              
00001778  0441 0014               1132                      SUB.W                   #BLOCSIZE/2, D1; D1:=XLEFT
0000177C  0442 0014               1133                      SUB.W                   #BLOCSIZE/2, D2; D2:=YTOP
00001780  0643 0014               1134                      ADD.W                   #BLOCSIZE/2, D3; D3:=XRIGHT
00001784  0644 0014               1135                      ADD.W                   #BLOCSIZE/2, D4; D4:=YBOTTOM
00001788  103C 0057               1136                      MOVE.B                  #87, D0
0000178C  4E4F                    1137                      TRAP                    #15; DRAW PLAYER
0000178E  4CDF 001F               1138                      MOVEM.L (A7)+, D0-D4    ; RESTORE REGISTERS
00001792                          1139                      
00001792  4E75                    1140                      RTS
00001794                          1141  
00001794                          1142  
00001794                          1143  
00001794                          1144  
00001794                          1145  
00001794                          1146  
00001794                          1147  
00001794                          1148  
00001794                          1149  
00001794                          1150  
00001794                          1151  -------------------- end include --------------------
00001794                          1152  
00001794                          1153  ; --- INITIALIZE --------------------------------------------------------------
00001794                          1154  
00001794  4EB8 1000               1155  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
00001798                          1156               
00001798                          1157  
00001798                          1158              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
00001798  4EB8 11D6               1159              JSR       RNDINIT
0000179C                          1160              
0000179C                          1161             
0000179C                          1162              
0000179C                          1163              ; GENERATES LAND 
0000179C                          1164  
0000179C                          1165              ;JSR     LANDINIT
0000179C  4EB8 1534               1166              JSR     LANDCRTE
000017A0                          1167              ; PLACE PLAYER
000017A0  4EB8 159C               1168              JSR     PLYRINIT             
000017A4                          1169             
000017A4                          1170              
000017A4                          1171              
000017A4                          1172              
000017A4                          1173  
000017A4                          1174  
000017A4                          1175  ; --- UPDATE ------------------------------------------------------------------
000017A4                          1176  
000017A4  4E40                    1177  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
000017A6                          1178  
000017A6                          1179              ; TO DO : ADD YOUR GAME UPDATE HERE
000017A6                          1180              
000017A6                          1181              ;JSR     PLAYELX
000017A6  4EB8 15AE               1182              JSR     PLYRUPDX               ; WITHOUT BOUNDING 
000017AA                          1183              ;JSR     PLYRUPDY
000017AA  4EB8 168E               1184              JSR     PLAYELY                ; WITHOUT BOUNDING 
000017AE                          1185              
000017AE  4EB8 1334               1186              JSR      AGLUPD
000017B2                          1187              
000017B2                          1188  
000017B2                          1189  ; --- WAIT SYNCH --------------------------------------------------------------
000017B2                          1190  
000017B2  4A39 000017D2           1191  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000017B8  67F8                    1192              BEQ     .WINT
000017BA  4239 000017D2           1193              CLR.B   (SCRINTCT)
000017C0                          1194  
000017C0                          1195  ; --- PLOT --------------------------------------------------------------------
000017C0                          1196  
000017C0                          1197              ; TO DO : ADD YOUR GAME PLOT HERE           
000017C0  4EB8 1358               1198              JSR     AGLPLOT
000017C4                          1199              
000017C4  4EB8 174C               1200              JSR     PLYRPLOT
000017C8                          1201              
000017C8  4E41                    1202              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000017CA  60D8                    1203              BRA     .LOOP                   ; MAIN LOOP
000017CC  FFFF FFFF               1204              SIMHALT
000017D0                          1205  
000017D0                          1206  ; --- VARIABLES ---------------------------------------------------------------
000017D0                          1207  
000017D0                          1208              INCLUDE "SYSVAR.X68"
000017D0                          1209  ; =============================================================================
000017D0                          1210  ; TITLE    : SYSTEM VARIABLES
000017D0                          1211  ; AUTHOR   : ANTONI BURGUERA
000017D0                          1212  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
000017D0                          1213  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
000017D0                          1214  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
000017D0                          1215  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
000017D0                          1216  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
000017D0                          1217  ; HISTORY  : XX-XXX-201X - CREATION
000017D0                          1218  ;            11-OCT-2020 - MINOR CHANGES
000017D0                          1219  ; =============================================================================
000017D0                          1220  
000017D0                          1221  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000017D0                          1222  
000017D0                          1223  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000017D1                          1224  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000017D2                          1225  
000017D2                          1226              DS.W    0
000017D2                          1227  
000017D2                          1228  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000017D2                          1229  
000017D2                          1230  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000017D3                          1231  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000017D4                          1232              DS.W    0
000017D4                          1233  
000017D4                          1234  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000017D4                          1235  
00001800                          1236              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001800                          1237  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00009A00                          1238              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00009A00                          1239  -------------------- end include --------------------
00009A00                          1240              INCLUDE "VAR.X68"
00009A00                          1241  ; =============================================================================
00009A00                          1242  ; TITLE    : GAME VARIABLES
00009A00                          1243  ; AUTHOR   : MAURICI RUIZ
00009A00                          1244  ; HISTORY  : 15/12/2020  - CREATION
00009A00                          1245  ; =============================================================================
00009A00                          1246  
00009A00                          1247  
00009A00                          1248  ;---- BLOCK RELATED VARIABLES -------------------------------------------------
00009A00                          1249  
00009A00                          1250  BLOCKX          DS.W    1                   ; BLOCK X COORDINATE (XCENTER)
00009A02                          1251  BLOCKY          DS.W    1                   ; BLOCK Y COORDINATE (XCENTER)
00009A04                          1252  
00009A04                          1253  
00009A04                          1254  ; --- RANDOM NUMBER GENERATOR VARIABLES ---------------------------------------
00009A04                          1255  
00009A04                          1256  RNDINDEX    DS.B        1                   ; RANDOM INDEX
00009A06                          1257                      DS.W                        0
00009A06                          1258                      
00009A06                          1259  ; --- PLAYER RELATED VARIABLES ------------------------------------------------
00009A06                          1260  
00009A06                          1261  PLAYERX     DS.W    1                       ; PAD X COORDINATE (XCENTER)
00009A08                          1262  PLAYERY     DS.W    1                       ; PAD X COORDINATE (XCENTER)
00009A0A                          1263  
00009A0A                          1264  PLYERSEG    DS.W    1                       ; SCREEN SEGMENT WHERE IS LOCATED THE PLAYER
00009A0C                          1265  
00009A0C                          1266  TOPOFSEG    DS.W    1                       ; NUMBER OF BLOCKS IN COLUMN UNDER PLAYER
00009A0E                          1267  
00009A0E                          1268  
00009A0E                          1269  ; --- LAND RELATED VARIABLES --------------------------------------------------
00009A0E                          1270  
00009A0E= 06 07 07 08 09 0A ...   1271  RANDIRT     DC.B    6  , 7  , 7  , 8  , 9  , 10  , 10  , 9 
00009A16= 08 07 06 06 07 08 ...   1272              DC.B    8  , 7  , 6  , 6  , 7  , 8   , 9   , 9 
00009A1E= 0A 09 08 08 09 0A ...   1273              DC.B    10 , 9  , 8  , 8  , 9  , 10  , 10  , 9 
00009A26= 08 07 07 06 07 08 ...   1274              DC.B    8  , 7  , 7  , 6  , 7  , 8   , 9   , 10
00009A2E                          1275              DS.W    0 
00009A2E                          1276  
00009A2E                          1277  
00009A2E= 08 08 09 0A 0B 0C ...   1278  LANDHEIG    DC.B    8  ,  8 ,  9 , 10  , 11  , 12  , 12  , 11 
00009A36= 0A 09 08 08 09 0A ...   1279              DC.B    10 ,  9 ,  8 ,  8  ,  9  , 10  , 11  , 11 
00009A3E= 0C 0B 0A 0A 0B 0C ...   1280              DC.B    12 , 11 , 10 , 10  , 11  , 12  , 12  , 11 
00009A46= 0A 09 09 08 09 0A ...   1281              DC.B    10 ,  9 ,  9 ,  8  ,  9  , 10  , 11  , 12
00009A4E                          1282              DS.W    0 
00009A4E                          1283  
00009A4E                          1284  
00009A4E                          1285  -------------------- end include --------------------
00009A4E                          1286              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              131A
AGLADD:END          1330
AGLKILL             11C0
AGLPLOT             1358
AGLPLOT:END         1378
AGLPLOT:LOOP        1360
AGLUPD              1334
AGLUPD:END          1352
AGLUPD:LOOP         133C
BLOCID              1
BLOCINIT            137E
BLOCKX              9A00
BLOCKY              9A02
BLOCPCOL            0
BLOCPLOT            140A
BLOCSIZE            28
BLOCUPD             138A
BLOCUPD:BLOCKL      13EE
BLOCUPD:BLOCKR      13FC
BLOCUPD:CHKPINL     13CE
BLOCUPD:CHKPINR     13DE
BLOCUPD:CHKPLFT     13C0
BLOCUPD:CHKPRHT     13AE
BLOCUPD:END         13E8
DIRTFCOL            2850
DIRTINIT            1446
DIRTINIT:LOOPCOL    1472
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             208
DMMBSIZE            40
DMMDATA             1800
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRTINITX            14
DRTINITY            2A8
GETRDIRT            11DE
GRASFCOL            8C50
GRASINTX            14
GRASINTY            26C
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             17D1
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              17D0
LANDCRTE            1534
LANDCRTE:LOOPD      1574
LANDCRTE:LOOPL      1554
LANDHEIG            9A2E
LANDINIT            14CA
LANDINIT:LOOPCOL    14EE
LANDINIT:LOOPDIR    1508
NCOLBLKS            12
NROWBLKS            20
NUMSTN              12
PLAYELX             15F4
PLAYELX:DOL         161C
PLAYELX:DOR         1682
PLAYELX:END         1688
PLAYELX:MOVEL       160E
PLAYELX:MOVER       1624
PLAYELY             168E
PLAYELY:DOD         16CC
PLAYELY:DOU         16B6
PLAYELY:MOVED       16BE
PLAYELY:MOVEU       16A8
PLAYERX             9A06
PLAYERY             9A08
PLYERSEG            9A0A
PLYRCOL             FF
PLYRINIT            159C
PLYRPLOT            174C
PLYRUPDX            15AE
PLYRUPDX:DOL        15D6
PLYRUPDX:DOR        15EC
PLYRUPDX:MOVEL      15C8
PLYRUPDX:MOVER      15DE
PLYRUPDY            16D4
PLYRUPDY:DOD        1744
PLYRUPDY:DOU        16FC
PLYRUPDY:MOVED      1704
PLYRUPDY:MOVEU      16EE
PLYSPEED            8
RANDIRT             9A0E
RNDGET              11FC
RNDGET:RANDVEC      121A
RNDINDEX            9A04
RNDINIT             11D6
SCRCYCCT            17D3
SCRHEIGH            2D0
SCRINIT             101C
SCRINTCT            17D2
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            500
START               1794
START:LOOP          17A4
START:WINT          17B2
STNEINIT            1488
STNEINIT:LOOPS      14B2
STNFCOL             676767
STNINITX            14
STNINITY            2BC
SYSINIT             1000
TOPOFSEG            9A0C

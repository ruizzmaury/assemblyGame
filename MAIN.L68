00001716 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/12/2020 18:17:59

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS-
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000500                 85  SCRWIDTH    EQU     1280                    ; SCREEN WIDTH (PIXELS)
00001000  =000002D0                 86  SCRHEIGH    EQU     720                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000208                 93  DMMBNUM     EQU     520                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            95  
00001000                            96  
00001000                            97  
00001000                            98  
00001000                            99  -------------------- end include --------------------
00001000                           100              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                           101  ; =============================================================================
00001000                           102  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                           103  ; AUTHOR   : ANTONI BURGUERA
00001000                           104  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           105  ;            - SYS : GENERIC.
00001000                           106  ;            - SCR : SCREEN MANAGEMENT.
00001000                           107  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           108  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           109  ;            11-OCT-2020 - MINOR CHANGES
00001000                           110  ; =============================================================================
00001000                           111  
00001000                           112  ; -----------------------------------------------------------------------------
00001000                           113  SYSINIT
00001000                           114  ; INITIALIZES THE SYSTEM
00001000                           115  ; INPUT    - NONE
00001000                           116  ; OUTPUT   - NONE
00001000                           117  ; MODIFIES - NONE
00001000                           118  ; -----------------------------------------------------------------------------
00001000  205F                     119              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            120              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            121              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            122              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                123              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     124              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     125              RTS
0000101C                           126  
0000101C                           127  ; =============================================================================
0000101C                           128  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           129  ; =============================================================================
0000101C                           130  
0000101C                           131  ; -----------------------------------------------------------------------------
0000101C                           132  SCRINIT
0000101C                           133  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           134  ; INPUT    - NONE
0000101C                           135  ; OUTPUT   - NONE
0000101C                           136  ; MODIFIES - D0,D1,D2,D3
0000101C                           137  ; -----------------------------------------------------------------------------
0000101C  007C 0700                138              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       139              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 050002D0            140              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                141              MOVE.B  #33,D0
00001032  4E4F                     142              TRAP    #15
00001034  7201                     143              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     144              TRAP    #15
00001038  323C FF00                145              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                146              MOVE.B  #11,D0
00001040  4E4F                     147              TRAP    #15
00001042  123C 0011                148              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                149              MOVE.B  #92,D0
0000104A  4E4F                     150              TRAP    #15
0000104C  323C FF00                151              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                152              MOVE.B  #11,D0
00001054  4E4F                     153              TRAP    #15
00001056  21FC 0000108C 0064       154              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                155              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                156              MOVE.B  #32,D0
00001066  4E4F                     157              TRAP    #15
00001068  143C 0081                158              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                159              MOVE.B  #SCRTIM,D3
00001070  123C 0006                160              MOVE.B  #6,D1
00001074  103C 0020                161              MOVE.B  #32,D0
00001078  4E4F                     162              TRAP    #15
0000107A  4239 00001754            163              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001755            164              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                165              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     166              RTS
0000108C                           167  
0000108C                           168  ; -----------------------------------------------------------------------------
0000108C                           169  SCRISR
0000108C                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           171  ; INPUT    - NONE
0000108C                           172  ; OUTPUT   - NONE
0000108C                           173  ; MODIFIES - NONE
0000108C                           174  ; -----------------------------------------------------------------------------
0000108C  5239 00001754            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001755            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     177              RTE
0000109A                           178  
0000109A                           179  ; -----------------------------------------------------------------------------
0000109A                           180  SCRUPD
0000109A                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           182  ; BUFFER FOR THE NEXT ONE.
0000109A                           183  ; INPUT    - NONE
0000109A                           184  ; OUTPUT   - NONE
0000109A                           185  ; MODIFIES - NONE
0000109A                           186  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                187              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                188              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     189              TRAP    #15
000010A4  323C FF00                190              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                191              MOVE.B  #11,D0
000010AC  4E4F                     192              TRAP    #15
000010AE  4C9F 0003                193              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     194              RTE
000010B4                           195  
000010B4                           196  ; =============================================================================
000010B4                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           198  ; =============================================================================
000010B4                           199  
000010B4                           200  ; -----------------------------------------------------------------------------
000010B4                           201  KBDINIT
000010B4                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           203  ; INPUT    - NONE
000010B4                           204  ; OUTPUT   - NONE
000010B4                           205  ; MODIFIES - NONE
000010B4                           206  ; -----------------------------------------------------------------------------
000010B4  4239 00001752            207              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001753            208              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     210              RTS
000010CA                           211  
000010CA                           212  ; -----------------------------------------------------------------------------
000010CA                           213  KBDREAD
000010CA                           214  ; TRAP SERVICE ROUTINE.
000010CA                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           218  ; INPUT    - NONE
000010CA                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           220  ; MODIFIES - NONE
000010CA                           221  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                222              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                223              MOVE.B  #19,D0
000010D2  223C 50104D20            224              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     225              TRAP    #15
000010DA  6100 002A                226              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            227              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     228              TRAP    #15
000010E6  6100 001E                229              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001752            230              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     231              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     232              AND.B   D2,D0
000010F4  13C2 00001752            233              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001753            234              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                235              MOVEM.L (A7)+,D0-D3
00001104  4E73                     236              RTE
00001106                           237  
00001106  363C 0003                238  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     239  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     240              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                241              DBRA.W  D3,.LOOP
00001112  4E75                     242              RTS
00001114                           243  
00001114                           244  ; =============================================================================
00001114                           245  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           246  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           247  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           248  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           249  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           250  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           251  ; =============================================================================
00001114                           252  
00001114                           253  ; -----------------------------------------------------------------------------
00001114                           254  DMMINIT
00001114                           255  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           256  ; INPUT    - NONE
00001114                           257  ; OUTPUT   - NONE
00001114                           258  ; MODIFIES - NONE
00001114                           259  ; -----------------------------------------------------------------------------
00001114  48E7 8080                260              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001780            261              LEA     DMMDATA,A0
0000111E  303C 0207                262              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                263  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            264              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                265              DBRA.W  D0,.LOOP
00001130  4CDF 0101                266              MOVEM.L (A7)+,D0/A0
00001134  4E75                     267              RTS
00001136                           268  
00001136                           269  ; -----------------------------------------------------------------------------
00001136                           270  DMMFIRST
00001136                           271  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           272  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           273  ; INPUT    - NONE
00001136                           274  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           275  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           276  ; -----------------------------------------------------------------------------
00001136  41F9 00001780            277              LEA     DMMDATA,A0
0000113C  4A58                     278  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                279              BNE     DMMFRFND
00001142  D1FC 0000003E            280              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 0000997F            281  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     282              BLT     DMMFRLOP
00001150  207C 00000000            283              MOVE.L  #0,A0
00001156  4E75                     284  DMMFRFND    RTS
00001158                           285  
00001158                           286  ; -----------------------------------------------------------------------------
00001158                           287  DMMNEXT
00001158                           288  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           289  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           290  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           291  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           292  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           293  ; -----------------------------------------------------------------------------
00001158  2F00                     294              MOVE.L  D0,-(A7)
0000115A  2008                     295              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            296              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            297              ADD.L   #DMMBSIZE,D0
00001168  2040                     298              MOVE.L  D0,A0
0000116A  201F                     299              MOVE.L  (A7)+,D0
0000116C  60DA                     300              BRA     DMMFRCOM
0000116E                           301  
0000116E                           302  ; -----------------------------------------------------------------------------
0000116E                           303  DMMFRSTO
0000116E                           304  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           305  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           306  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           307  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           308  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           309  ; -----------------------------------------------------------------------------
0000116E  41F9 00001780            310              LEA     DMMDATA,A0
00001174  B058                     311  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                312              BEQ     DMMFFND
0000117A  D1FC 0000003E            313              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 0000997F            314  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     315              BLT     DMMFLOOP
00001188  207C 00000000            316              MOVE.L  #0,A0
0000118E  4E75                     317  DMMFFND     RTS
00001190                           318  
00001190                           319  ; -----------------------------------------------------------------------------
00001190                           320  DMMNEXTO
00001190                           321  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           322  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           323  ; INPUT    - D0.W : ID TO SEARCH
00001190                           324  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           325  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           326  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           327  ; -----------------------------------------------------------------------------
00001190  2F00                     328              MOVE.L  D0,-(A7)
00001192  2008                     329              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            330              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            331              ADD.L   #DMMBSIZE,D0
000011A0  2040                     332              MOVE.L  D0,A0
000011A2  201F                     333              MOVE.L  (A7)+,D0
000011A4  60DA                     334              BRA     DMMFCOM
000011A6                           335  
000011A6                           336  ; -----------------------------------------------------------------------------
000011A6                           337  DMMALLOC
000011A6                           338  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           339  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           340  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           341  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           342  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           343  ; -----------------------------------------------------------------------------
000011A6  3F00                     344              MOVE.W  D0,-(A7)
000011A8  4240                     345              CLR.W   D0
000011AA  4EB8 116E                346              JSR     DMMFRSTO
000011AE  301F                     347              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            348              CMP.L   #0,A0
000011B6  6700 0006                349              BEQ     .END
000011BA  3140 FFFE                350              MOVE.W  D0,-2(A0)
000011BE  4E75                     351  .END        RTS
000011C0                           352  
000011C0                           353  ; -----------------------------------------------------------------------------
000011C0                           354  DMMFREE
000011C0                           355  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           356  ; SYSTEM (0)
000011C0                           357  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           358  ; OUTPUT   - NONE
000011C0                           359  ; MODIFIES - NONE
000011C0                           360  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                361              MOVEM.L D0/A0,-(A7)
000011C4  2008                     362              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            363              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     364              MOVE.L  D0,A0
000011CE  4250                     365              CLR.W   (A0)
000011D0  4CDF 0101                366              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     367              RTS
000011D4  4E75                     368  -------------------- end include --------------------
000011D6                           369              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           370  ; =============================================================================
000011D6                           371  ; TITLE    : GAME CONSTANTS
000011D6                           372  ; AUTHOR   : MAURICI RUIZ PLAZA
000011D6                           373  ; HISTORY  : 15/12/2020  -  CREATION
000011D6                           374  ; =============================================================================
000011D6                           375  
000011D6                           376  ; ---- BLOCK RELATED CONSTANTS-------------------------------------------------
000011D6                           377  
000011D6  =00000028                378  BLOCSIZE    EQU     40                  ; BLOCK WIDTH
000011D6                           379  
000011D6                           380  ; ---- BLOCK TYPES - 00BBGGRR -----------------------
000011D6                           381  
000011D6  =00000000                382  BLOCPCOL    EQU     $00000000               ; PEN COLOR
000011D6  =00000001                383  BLOCID      EQU       1                      ; STONE IDENTIFIER
000011D6  =00000020                384  NROWBLKS    EQU     SCRWIDTH/BLOCSIZE       ; NUMBER OF BLOCKS PER ROW TO PAINT
000011D6  =00000012                385  NCOLBLKS    EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF BLOCKS PER COLUMN TO PAINT
000011D6                           386  
000011D6                           387  
000011D6                           388  ; STONE
000011D6  =00000012                389  NUMSTN      EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF STONES TO PAINT
000011D6  =00000014                390  STNINITX    EQU     BLOCSIZE/2              ; INITIALX STONES
000011D6  =000002BC                391  STNINITY    EQU     SCRHEIGH-BLOCSIZE/2     ; INITIALY STONES                                  
000011D6  =00676767                392  STNFCOL     EQU      $00676767          ; FILL STONE COLOR
000011D6                           393  
000011D6                           394  ; DIRT
000011D6  =00000014                395  DRTINITX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =000002A8                396  DRTINITY    EQU     SCRHEIGH-BLOCSIZE     ; INITIALY DIRT
000011D6  =00002850                397  DIRTFCOL    EQU      $00002850              ; FILL DIRT COLOR 
000011D6                           398  
000011D6                           399  ; GRASS
000011D6  =00000014                400  GRASINTX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =0000026C                401  GRASINTY    EQU     SCRHEIGH-3*BLOCSIZE+BLOCSIZE/2      ; INITIALY DIRT
000011D6  =00008C50                402  GRASFCOL    EQU      $00008C50         ; FILL GRASS COLOR
000011D6                           403  
000011D6                           404  
000011D6                           405  ; ---- PLAYER RELATED CONSTANTS--------------------------------------------------
000011D6                           406  
000011D6  =000000FF                407  PLYRCOL     EQU      $000000FF          ; PLAYER COLOR 
000011D6  =00000008                408  PLYSPEED    EQU     8                  ; PLAYER SPEED
000011D6                           409  
000011D6                           410  
000011D6                           411  
000011D6                           412  -------------------- end include --------------------
000011D6                           413              INCLUDE "RANDOM.X68"            ; RANDOM NUMBER GENERATOR
000011D6                           414  ; =============================================================================
000011D6                           415  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
000011D6                           416  ; AUTHOR   : ANTONI BURGUERA
000011D6                           417  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
000011D6                           418  ; HISTORY  : XX-XXX-201X - CREATION
000011D6                           419  ;            11-OCT-2020 - MINOR CHANGES
000011D6                           420  ; =============================================================================
000011D6                           421  
000011D6                           422  ; -----------------------------------------------------------------------------
000011D6                           423  RNDINIT
000011D6                           424  ; INITIALIZES RANDOM NUMBER GENERATOR
000011D6                           425  ; INPUT    - NONE
000011D6                           426  ; OUTPUT   - NONE
000011D6                           427  ; MODIFIES - NONE
000011D6                           428  ; -----------------------------------------------------------------------------
000011D6  4239 00009984            429              CLR.B   (RNDINDEX)
000011DC  4E75                     430              RTS
000011DE                           431              
000011DE                           432              
000011DE                           433  ; -----------------------------------------------------------------------------
000011DE                           434  GETRDIRT
000011DE                           435  ; PROVIDES A RANDOM NUMBER OF DIRT BLOCKS BETWEEN 6-10
000011DE                           436  ; INPUT    - NONE
000011DE                           437  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011DE                           438  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011DE                           439  ; -----------------------------------------------------------------------------
000011DE  2F08                     440              MOVE.L  A0,-(A7)
000011E0  41F9 000099AE            441              LEA     LANDHEIG,A0
000011E6  4280                     442              CLR.L   D0
000011E8  1039 00009984            443              MOVE.B  (RNDINDEX),D0
000011EE  1030 0800                444              MOVE.B  (A0,D0.L),D0
000011F2  5239 00009984            445              ADDQ.B  #1,(RNDINDEX)
000011F8  205F                     446              MOVE.L  (A7)+,A0
000011FA  4E75                     447              RTS
000011FC                           448  
000011FC                           449  
000011FC                           450              
000011FC                           451  ; -----------------------------------------------------------------------------
000011FC                           452  RNDGET
000011FC                           453  ; PROVIDES A PSEUDO-RANDOM BYTE
000011FC                           454  ; INPUT    - NONE
000011FC                           455  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011FC                           456  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011FC                           457  ; -----------------------------------------------------------------------------
000011FC  2F08                     458              MOVE.L  A0,-(A7)
000011FE  41F9 0000121A            459              LEA     .RANDVEC,A0
00001204  4280                     460              CLR.L   D0
00001206  1039 00009984            461              MOVE.B  (RNDINDEX),D0
0000120C  1030 0800                462              MOVE.B  (A0,D0.L),D0
00001210  5239 00009984            463              ADDQ.B  #1,(RNDINDEX)
00001216  205F                     464              MOVE.L  (A7)+,A0
00001218  4E75                     465              RTS
0000121A                           466  
0000121A= A2 EE 9A 0C F5 24 ...    467  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
00001222= 2A A3 51 26 E0 AC ...    468              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
0000122A= 75 51 CA FD 33 EB ...    469              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001232= 60 CC E7 B8 9A EB ...    470              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000123A= 1D 76 B5 95 B0 89 ...    471              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001242= 39 15 48 C9 6E CA ...    472              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000124A= 43 E7 E2 7C 37 25 ...    473              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001252= E9 94 CE E9 E4 52 ...    474              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000125A= 37 6D 9A 84 A2 28 ...    475              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001262= 19 E2 C6 77 80 D4 ...    476              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000126A= 0A 5A 32 67 33 C2 ...    477              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001272= 59 80 DC 0E 57 FC ...    478              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000127A= 8A AB BC F7 07 4D ...    479              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001282= EF D5 77 6E 1E BB ...    480              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000128A= D6 E0 2A 8F BD 28 ...    481              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001292= 13 4F 66 EC 0A 64 ...    482              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000129A= 56 52 9A 16 9B 90 ...    483              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
000012A2= 06 8A A4 F7 01 DA ...    484              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
000012AA= F2 E7 77 28 B1 76 ...    485              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
000012B2= A4 42 E3 81 B1 67 ...    486              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
000012BA= BF CE FA 16 BF 38 ...    487              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
000012C2= D1 8B 50 0C 5F 49 ...    488              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
000012CA= DE 4C 14 A2 40 DC ...    489              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012D2= B6 9B 0A 38 5D AB ...    490              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012DA= E2 1B DD 75 15 82 ...    491              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012E2= 8A 26 51 30 9F 47 ...    492              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012EA= 1E 8A BB 71 C6 6E ...    493              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012F2= 9F 47 E5 34 94 27 ...    494              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012FA= 7D 06 D6 BA 30 0F ...    495              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
00001302= EC 7F 7E 03 CF 2D ...    496              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
0000130A= 94 5B 23 F2 8B CD ...    497              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
00001312= 74 33 EC B9 0F D5 ...    498              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
0000131A                           499  
0000131A                           500  
0000131A                           501  -------------------- end include --------------------
0000131A                           502              INCLUDE "AGENTLST.X68"          ; 
0000131A                           503  ; =============================================================================
0000131A                           504  ; TITLE    : AGENT LIST
0000131A                           505  ; AUTHOR   : ANTONI BURGUERA
0000131A                           506  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
0000131A                           507  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
0000131A                           508  ;              +4 - LONG : PLOT SUBROUTINE POINTER
0000131A                           509  ;              +8:END    : DATA (AGENT SPECIFIC)
0000131A                           510  ; HISTORY  : XX-XXX-201X - CREATION
0000131A                           511  ;            11-OCT-2020 - MINOR CHANGES
0000131A                           512  ; =============================================================================
0000131A                           513  
0000131A                           514  ; -----------------------------------------------------------------------------
0000131A                           515  AGLADD
0000131A                           516  ; CREATES A NEW AGENT
0000131A                           517  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
0000131A                           518  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
0000131A                           519  ;            A3 - POINTER TO AGENT PLOT FUNCTION
0000131A                           520  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
0000131A                           521  ;            D1 - AGENT INITIALIZATION PARAMETER 1
0000131A                           522  ;            D2 - AGENT INITIALIZATION PARAMETER 2
0000131A                           523  ;            D3 - AGENT INITIALIZATION PARAMETER 3
0000131A                           524  ; OUTPUT   - NONE
0000131A                           525  ; MODIFIES - NONE
0000131A                           526  ; -----------------------------------------------------------------------------
0000131A  2F08                     527              MOVE.L  A0,-(A7)
0000131C  4EB8 11A6                528              JSR     DMMALLOC
00001320  B1FC 00000000            529              CMP.L   #0,A0
00001326  6700 0008                530              BEQ     .END
0000132A  20CA                     531              MOVE.L  A2,(A0)+
0000132C  20CB                     532              MOVE.L  A3,(A0)+
0000132E  4E91                     533              JSR     (A1)
00001330  205F                     534  .END        MOVE.L  (A7)+,A0
00001332  4E75                     535              RTS
00001334                           536  
00001334                           537  ; -----------------------------------------------------------------------------
00001334                           538  AGLUPD
00001334                           539  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001334                           540  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001334                           541  ; INPUT    - NONE
00001334                           542  ; OUTPUT   - NONE
00001334                           543  ; MODIFIES - NONE
00001334                           544  ; -----------------------------------------------------------------------------
00001334  48E7 00C0                545              MOVEM.L A0-A1,-(A7)
00001338  4EB8 1136                546              JSR     DMMFIRST
0000133C  B1FC 00000000            547  .LOOP       CMP.L   #0,A0
00001342  6700 000E                548              BEQ     .END
00001346  2250                     549              MOVE.L  (A0),A1
00001348  5088                     550              ADD.L   #8,A0
0000134A  4E91                     551              JSR     (A1)
0000134C  4EB8 1158                552              JSR     DMMNEXT
00001350  60EA                     553              BRA     .LOOP
00001352  4CDF 0300                554  .END        MOVEM.L (A7)+,A0-A1
00001356  4E75                     555              RTS
00001358                           556  
00001358                           557  ; -----------------------------------------------------------------------------
00001358                           558  AGLPLOT
00001358                           559  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001358                           560  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001358                           561  ; INPUT    - NONE
00001358                           562  ; OUTPUT   - NONE
00001358                           563  ; MODIFIES - NONE
00001358                           564  ; -----------------------------------------------------------------------------
00001358  48E7 00C0                565              MOVEM.L A0-A1,-(A7)
0000135C  4EB8 1136                566              JSR     DMMFIRST
00001360  B1FC 00000000            567  .LOOP       CMP.L   #0,A0
00001366  6700 0010                568              BEQ     .END
0000136A  2268 0004                569              MOVE.L  4(A0),A1
0000136E  5088                     570              ADD.L   #8,A0
00001370  4E91                     571              JSR     (A1)
00001372  4EB8 1158                572              JSR     DMMNEXT
00001376  60E8                     573              BRA     .LOOP
00001378  4CDF 0300                574  .END        MOVEM.L (A7)+,A0-A1
0000137C  4E75                     575              RTS
0000137E                           576  
0000137E                           577  ; -----------------------------------------------------------------------------
0000137E  =000011C0                578  AGLKILL     EQU     DMMFREE
0000137E                           579  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000137E                           580  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000137E                           581  ; OUTPUT   - NONE
0000137E                           582  ; MODIFIES - NONE
0000137E                           583  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000137E                           584  ; -----------------------------------------------------------------------------
0000137E                           585  -------------------- end include --------------------
0000137E                           586              INCLUDE "BLOCK.X68"             ; BLOCK MANAGEMENT
0000137E                           587  
0000137E                           588  ;-----------------------------------------------------------
0000137E                           589  BLOCINIT
0000137E                           590  ; INITIALIZE BLOCK
0000137E                           591  ; INPUT     - D1.W  X PLACE COORDINATE
0000137E                           592  ;          - D2.W  Y PLACE COORDINATE 
0000137E                           593  ;          - D3.L  BLOCK COLOR
0000137E                           594  ; OUTPUT    - NONE
0000137E                           595  ; MODIFIES  - NONE  
0000137E                           596  ;-----------------------------------------------------------
0000137E                           597                         
0000137E  3081                     598              MOVE.W  D1, (A0)
00001380  3142 0002                599               MOVE.W D2, 2(A0)
00001384  2143 0004                600               MOVE.L D3, 4(A0)
00001388                           601              
00001388                           602              
00001388  4E75                     603              RTS
0000138A                           604  
0000138A                           605  
0000138A                           606  ;-----------------------------------------------------------
0000138A                           607  BLOCUPD
0000138A                           608  ; UPDATE BLOCK
0000138A                           609  ; INPUT     - NONE
0000138A                           610  ; OUTPUT    - NONE
0000138A                           611  ; MODIFIES  - NONE  
0000138A                           612  ;-----------------------------------------------------------
0000138A  4E75                     613              RTS
0000138C                           614  
0000138C                           615  
0000138C                           616  
0000138C                           617  ;-----------------------------------------------------------
0000138C                           618  BLOCPLOT
0000138C                           619  ; PLOT BLOCK
0000138C                           620  ; INPUT     - NONE
0000138C                           621  ; OUTPUT    - NONE
0000138C                           622  ; MODIFIES  - NONE  
0000138C                           623  ;-----------------------------------------------------------
0000138C  48E7 F800                624              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
00001390  103C 0050                625              MOVE.B  #80, D0                 ; SET PEN COLOR TASK
00001394  7200                     626              MOVE.L  #BLOCPCOL, D1           ; BLOCK COLOR
00001396  4E4F                     627              TRAP #15; SET PEN COLOR
00001398  103C 0051                628              MOVE.B  #81, D0                 ; SET FILL COLOR TASK
0000139C  2228 0004                629              MOVE.L  4(A0),D1                ; BLOCK COLOR
000013A0  4E4F                     630              TRAP #15; SET FILL COLOR
000013A2                           631              
000013A2  3210                     632              MOVE.W  (A0),D1                 ; D1:=XCENTER
000013A4  3428 0002                633              MOVE.W  2(A0),D2                ; D2:=YCENTER
000013A8  3601                     634              MOVE.W  D1, D3                  ; D3:=XCENTER
000013AA  3802                     635              MOVE.W  D2, D4                  ; D4:=YCENTER
000013AC                           636              
000013AC  0441 0014                637              SUB.W   #BLOCSIZE/2, D1         ; D1:=XLEFT
000013B0  0442 0014                638              SUB.W   #BLOCSIZE/2, D2         ; D2:=YTOP
000013B4  0643 0014                639              ADD.W   #BLOCSIZE/2, D3         ; D3:=XRIGHT
000013B8  0644 0014                640              ADD.W   #BLOCSIZE/2, D4         ; D4:=YBOTTOM
000013BC  103C 0057                641              MOVE.B  #87, D0
000013C0  4E4F                     642              TRAP    #15                     ; DRAW BLOCK
000013C2  4CDF 001F                643              MOVEM.L (A7)+, D0-D4            ; RESTORE REGISTERS
000013C6  4E75                     644              RTS
000013C8                           645  
000013C8                           646  
000013C8                           647  
000013C8                           648  
000013C8                           649  
000013C8                           650  
000013C8                           651  
000013C8                           652  
000013C8                           653  -------------------- end include --------------------
000013C8                           654              INCLUDE "LAND.X68"              ; LAND CREATION
000013C8                           655  ;-----------------------------------------------------------
000013C8                           656  
000013C8                           657  DIRTINIT
000013C8                           658  ; CREATE LAND
000013C8                           659  ; INPUT     - NONE
000013C8                           660  ; OUTPUT    - NONE
000013C8                           661  ; MODIFIES  - NONE  
000013C8                           662  ;-----------------------------------------------------------
000013C8  48E7 FC00                663              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000013CC  48E7 0070                664              MOVEM.L A1-A3, -(A7)
000013D0                           665              
000013D0                           666              
000013D0  383C 0003                667              MOVE.W  #3, D4  ; NUMBER OF STONE BLOCKS
000013D4  3A3C 0014                668              MOVE.W  #STNINITX, D5                     
000013D8                           669              
000013D8  303C 0001                670              MOVE.W  #BLOCID, D0
000013DC  43F8 137E                671              LEA     BLOCINIT, A1
000013E0  45F8 138A                672              LEA     BLOCUPD, A2
000013E4  47F8 138C                673              LEA     BLOCPLOT, A3
000013E8  343C 02BC                674              MOVE.W  #STNINITY, D2
000013EC  263C 00676767            675              MOVE.L  #STNFCOL, D3                           
000013F2                           676              
000013F2  3205                     677              MOVE.W  D5, D1                       
000013F4  4EB8 131A                678  .LOOPCOL    JSR     AGLADD
000013F8  0442 0028                679              SUB.W   #BLOCSIZE, D2
000013FC  51CC FFF6                680              DBRA.W  D4, .LOOPCOL
00001400                           681              
00001400  4CDF 0E00                682              MOVEM.L (A7)+, A1-A3
00001404  4CDF 003F                683              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
00001408  4E75                     684              RTS
0000140A                           685  
0000140A                           686  
0000140A                           687  
0000140A                           688  
0000140A                           689  
0000140A                           690  ;-----------------------------------------------------------
0000140A                           691  STNEINIT
0000140A                           692  ; CREATE BASELAND OF STONES
0000140A                           693  ; INPUT     - NONE
0000140A                           694  ; OUTPUT    - NONE
0000140A                           695  ; MODIFIES  - NONE  
0000140A                           696  ;-----------------------------------------------------------
0000140A                           697              
0000140A  48E7 FC00                698              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
0000140E  48E7 0070                699              MOVEM.L A1-A3, -(A7)
00001412                           700              
00001412                           701              
00001412  383C 0020                702              MOVE.W  #SCRWIDTH/BLOCSIZE, D4  ; NUMBER OF STONE BLOCKS
00001416  3A3C 0014                703              MOVE.W  #STNINITX, D5                     
0000141A                           704              
0000141A  303C 0001                705              MOVE.W  #BLOCID, D0
0000141E  43F8 137E                706              LEA      BLOCINIT, A1
00001422  45F8 138A                707              LEA     BLOCUPD, A2
00001426  47F8 138C                708              LEA     BLOCPLOT, A3
0000142A  343C 02BC                709              MOVE.W  #STNINITY, D2
0000142E  263C 00676767            710              MOVE.L  #STNFCOL, D3                           
00001434                           711              
00001434  3205                     712  .LOOPS      MOVE.W  D5, D1                       
00001436  4EB8 131A                713              JSR     AGLADD
0000143A  0645 0028                714              ADD.W   #BLOCSIZE, D5
0000143E  51CC FFF4                715              DBRA.W  D4, .LOOPS
00001442                           716              
00001442  4CDF 0E00                717              MOVEM.L (A7)+, A1-A3
00001446  4CDF 003F                718              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
0000144A  4E75                     719              RTS
0000144C                           720  
0000144C                           721              
0000144C                           722  ;-----------------------------------------------------------                      
0000144C                           723  LANDINIT
0000144C                           724  ; INITIALIZE BASELAND  
0000144C                           725  ; INPUT     - NONE
0000144C                           726  ; OUTPUT    - NONE
0000144C                           727  ; MODIFIES  - NONE  
0000144C                           728  ;-----------------------------------------------------------
0000144C  48E7 FC00                729              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
00001450  48E7 0070                730              MOVEM.L A1-A3, -(A7)
00001454                           731              
00001454                           732              
00001454  3A3C 0020                733              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS                     
00001458                           734              
00001458  303C 0001                735              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
0000145C  43F8 137E                736              LEA      BLOCINIT, A1
00001460  45F8 138A                737              LEA     BLOCUPD, A2
00001464  47F8 138C                738              LEA     BLOCPLOT, A3
00001468  343C 02BC                739              MOVE.W  #STNINITY, D2
0000146C                           740                                        
0000146C                           741              
0000146C  323C 0014                742              MOVE.W  #STNINITX, D1                       
00001470                           743  .LOOPCOL    
00001470  263C 00676767            744              MOVE.L  #STNFCOL, D3            ; STONE
00001476  4EB8 11DE                745              JSR     GETRDIRT
0000147A  3800                     746              MOVE.W  D0, D4                  ; NUMBER OF DIRT BLOCKS FROM ARRAY OF RANDOM
0000147C  4EB8 131A                747              JSR     AGLADD
00001480  0442 0028                748              SUB.W   #BLOCSIZE, D2
00001484  263C 00002850            749              MOVE.L  #DIRTFCOL, D3
0000148A                           750              
0000148A  4EB8 131A                751  .LOOPDIR    JSR     AGLADD 
0000148E  0442 0028                752              SUB.W   #BLOCSIZE, D2                       
00001492  51CC FFF6                753              DBRA.W  D4, .LOOPDIR
00001496                           754              
00001496  263C 00008C50            755              MOVE.L  #GRASFCOL, D3
0000149C  4EB8 131A                756              JSR     AGLADD
000014A0                           757              
000014A0  0641 0028                758              ADD.W   #BLOCSIZE, D1
000014A4  343C 02BC                759              MOVE.W  #STNINITY, D2
000014A8  51CD FFC6                760              DBRA.W  D5, .LOOPCOL
000014AC                           761  
000014AC                           762              
000014AC  4CDF 0E00                763              MOVEM.L (A7)+, A1-A3
000014B0  4CDF 003F                764              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
000014B4  4E75                     765              RTS            
000014B6                           766  ;-----------------------------------------------------------                      
000014B6                           767  
000014B6                           768  
000014B6                           769  ;-----------------------------------------------------------                      
000014B6                           770  LANDCRTE
000014B6                           771  ; INITIALIZE BASELAND  
000014B6                           772  ; INPUT     - NONE
000014B6                           773  ; OUTPUT    - NONE
000014B6                           774  ; MODIFIES  - NONE  
000014B6                           775  ;-----------------------------------------------------------
000014B6  48E7 FC00                776              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000014BA  48E7 0070                777              MOVEM.L A1-A3, -(A7)
000014BE                           778              
000014BE  3A3C 0020                779              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS 
000014C2  303C 0001                780              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
000014C6  43F8 137E                781              LEA      BLOCINIT, A1
000014CA  45F8 138A                782              LEA     BLOCUPD, A2
000014CE  47F8 138C                783              LEA     BLOCPLOT, A3           
000014D2  323C 0014                784              MOVE.W  #STNINITX, D1             
000014D6                           785                                                 
000014D6                           786  .LOOPL      
000014D6  343C 02BC                787              MOVE.W  #STNINITY, D2
000014DA  4EB8 11DE                788              JSR GETRDIRT
000014DE  3800                     789              MOVE.W D0, D4
000014E0  263C 00676767            790              MOVE.L  #STNFCOL, D3     
000014E6  4EB8 131A                791              JSR AGLADD
000014EA  5544                     792              SUB.W   #2, D4
000014EC  0442 0028                793              SUB.W   #BLOCSIZE, D2
000014F0  263C 00002850            794              MOVE.L  #DIRTFCOL, D3 
000014F6                           795  .LOOPD      
000014F6  4EB8 131A                796              JSR AGLADD
000014FA  0442 0028                797              SUB.W   #BLOCSIZE, D2
000014FE  51CC FFF6                798              DBRA.W  D4, .LOOPD
00001502                           799              
00001502  263C 00008C50            800              MOVE.L  #GRASFCOL, D3
00001508  4EB8 131A                801              JSR     AGLADD
0000150C                           802              
0000150C  0641 0028                803              ADD.W   #BLOCSIZE, D1
00001510  51CD FFC4                804              DBRA.W  D5, .LOOPL      
00001514                           805  
00001514                           806                         
00001514  4CDF 0E00                807              MOVEM.L (A7)+, A1-A3
00001518  4CDF 003F                808              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
0000151C  4E75                     809              RTS            
0000151E                           810  ;-----------------------------------------------------------                      
0000151E                           811  
0000151E                           812  
0000151E                           813  
0000151E                           814  
0000151E                           815  
0000151E                           816  
0000151E                           817  
0000151E                           818  
0000151E                           819  
0000151E                           820  -------------------- end include --------------------
0000151E                           821              INCLUDE "PLAYER.X68"              ; PLAYER MANAGEMENT
0000151E                           822  
0000151E                           823  
0000151E                           824  ;-----------------------------------------------------------
0000151E                           825  PLYRINIT
0000151E                           826  ; INITIALIZE PLAYER
0000151E                           827  ; INPUT     -   - NONE 
0000151E                           828  ; OUTPUT    - NONE  
0000151E                           829  ; MODIFIES  - NONE  
0000151E                           830  ;-----------------------------------------------------------
0000151E                           831                         
0000151E  33FC 0037 00009986       832              MOVE.W  #55,(PLAYERX)
00001526  33FC 0032 00009988       833                      MOVE.W  #50,(PLAYERY)
0000152E                           834  
0000152E  4E75                     835                      RTS
00001530                           836  
00001530                           837  
00001530                           838  ;-----------------------------------------------------------
00001530                           839  PLYRUPDX
00001530                           840  ; UPDATE PLAYER
00001530                           841  ; INPUT         - NONE
00001530                           842  ; OUTPUT    - NONE
00001530                           843  ; MODIFIES  - NONE  
00001530                           844  ;-----------------------------------------------------------
00001530  0839 0000 00001752       845                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
00001538  6600 0010                846              BNE     .MOVEL                  ; YES: MOVE LEFT
0000153C  0839 0002 00001752       847              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
00001544  6600 001A                848              BNE     .MOVER                  ; YES: MOVE LEFT
00001548  4E75                     849              RTS
0000154A  0C79 0014 00009986       850  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
00001552  6E00 0004                851              BGT     .DOL                    ; NO: MOVE
00001556  4E75                     852              RTS                             ; YES: END
00001558  5179 00009986            853  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
0000155E  4E75                     854              RTS
00001560  0C79 04EB 00009986       855  .MOVER      CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
00001568  6D00 0004                856              BLT     .DOR                    ; NO: MOVE
0000156C  4E75                     857              RTS                             ; YES: END
0000156E  5079 00009986            858  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
00001574  4E75                     859              RTS
00001576                           860  
00001576                           861              
00001576                           862  
00001576                           863  
00001576                           864  
00001576                           865  
00001576                           866  
00001576                           867  ;-----------------------------------------------------------
00001576                           868  PLAYELX
00001576                           869  ; UPDATE PLAYER
00001576                           870  ; INPUT         - NONE
00001576                           871  ; OUTPUT    - NONE
00001576                           872  ; MODIFIES  - NONE  
00001576                           873  ;-----------------------------------------------------------
00001576  0839 0000 00001752       874                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
0000157E  6600 0010                875              BNE     .MOVEL                  ; YES: MOVE LEFT
00001582  0839 0002 00001752       876              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
0000158A  6600 001A                877              BNE     .MOVER                  ; YES: MOVE LEFT
0000158E  4E75                     878              RTS
00001590  0C79 0014 00009986       879  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
00001598  6E00 0004                880              BGT     .DOL                    ; NO: MOVE
0000159C  4E75                     881              RTS                             ; YES: END
0000159E  5179 00009986            882  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
000015A4  4E75                     883              RTS
000015A6                           884  
000015A6                           885  
000015A6                           886  
000015A6                           887  
000015A6                           888  .MOVER      
000015A6  48E7 0E80                889              MOVEM.L D4-D6/A0, -(A7)         ; STACK REGISTER
000015AA                           890              
000015AA  0C79 04EB 00009986       891              CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
000015B2  6E00 0056                892              BGT     .END                    ; YES: STOP
000015B6                           893              
000015B6                           894              
000015B6  3A39 00009986            895              MOVE.W  (PLAYERX),D5
000015BC  0445 0014                896              SUB.W   #BLOCSIZE/2, D5
000015C0  8AFC 0028                897              DIVU.W  #BLOCSIZE,  D5  ; SEGMENT OF SCREEN PLAYER LOCATED 
000015C4                           898       
000015C4                           899              
000015C4  3C05                     900              MOVE.W  D5, D6      ; COPY SEGMENT OF SCREEN PLAYER LOCATED IN D6
000015C6                           901                         
000015C6  41F9 000099AE            902              LEA LANDHEIG, A0
000015CC  D0C5                     903              ADDA.W  D5, A0
000015CE                           904                             
000015CE                           905                
000015CE  1A10                     906              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
000015D0                           907                                      ; OF THE SCREEN SEGMENT WHERE IS 
000015D0                           908                                      ; LOCATED THE PLAYER
000015D0                           909                                      ; RIGHT NOW 
000015D0  5205                     910              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
000015D2                           911                          
000015D2                           912              
000015D2  5246                     913              ADD.W   #1, D6          ; ACCESSING THE NUMBER OF BLOCKS OF THE NEXT COLUMN
000015D4  41F9 000099AE            914              LEA LANDHEIG, A0
000015DA  D0C6                     915              ADDA.W  D6, A0
000015DC                           916  
000015DC  1C10                     917              MOVE.B  (A0),D6         ; NUMBER OF BLOCKS - 1 IN COLUMN 
000015DE                           918                                      ; OF THE NEXT SCREEN SEGMENT WHERE IS 
000015DE                           919                                      ; LOCATED THE PLAYER
000015DE                           920                                      ; RIGHT NOW 
000015DE                           921  
000015DE                           922                
000015DE  5206                     923              ADD.B   #1, D6          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
000015E0                           924              
000015E0  BC45                     925              CMP.W   D5, D6          ; NEXT COLUMN IS HIGHER THAN THE ACTUAL COLUMN?
000015E2  6F00 0020                926              BLE .DOR
000015E6                           927              
000015E6  CCFC 0028                928              MULU.W  #BLOCSIZE, D6   
000015EA  383C 02D0                929              MOVE.W  #SCRHEIGH, D4   
000015EE  9846                     930              SUB.W   D6, D4          
000015F0  0444 0014                931              SUB.W   #BLOCSIZE/2, D4  
000015F4  5B44                     932              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN
000015F6                           933  
000015F6  B879 00009988            934              CMP.W   (PLAYERY),D4   ; TOP OF COLUMN HIGHER THAN PLAYERY?
000015FC  6E00 0006                935              BGT     .DOR           ; YES: MOVE
00001600                           936                            
00001600  6000 0008                937              BRA .END               ; NO: END
00001604                           938              
00001604                           939  
00001604  5079 00009986            940  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
0000160A                           941  .END        
0000160A  4CDF 0170                942              MOVEM.L (A7)+, D4-D6/A0         ; RESTORE REGISTERS
0000160E  4E75                     943              RTS
00001610                           944  
00001610                           945  
00001610                           946  
00001610                           947  
00001610                           948  
00001610                           949  
00001610                           950  ;-----------------------------------------------------------
00001610                           951  PLAYELY
00001610                           952  ; UPDATE PLAYER
00001610                           953  ; INPUT         - NONE
00001610                           954  ; OUTPUT    - NONE
00001610                           955  ; MODIFIES  - NONE  
00001610                           956  ;-----------------------------------------------------------
00001610                           957                      
00001610  0839 0001 00001752       958              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001618  6600 0010                959              BNE     .MOVEU                  ; YES: MOVE UP
0000161C  0839 0003 00001752       960              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?
00001624  6600 001A                961              BNE     .MOVED                  ; YES: MOVE DOWN
00001628  4E75                     962              RTS
0000162A                           963              
0000162A                           964        
0000162A                           965              
0000162A  0C79 0014 00009988       966  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
00001632  6E00 0004                967              BGT     .DOU                    ; NO: MOVE
00001636  4E75                     968              RTS                             ; YES: END
00001638  5179 00009988            969  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
0000163E  4E75                     970              RTS
00001640  0C79 02BC 00009988       971  .MOVED      CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
00001648  6D00 0004                972              BLT     .DOD                    ; NO: MOVE
0000164C  4E75                     973              RTS                             ; YES: END
0000164E  5079 00009988            974  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
00001654  4E75                     975              RTS
00001656                           976  
00001656                           977  
00001656                           978  
00001656                           979  ;-----------------------------------------------------------
00001656                           980  
00001656                           981  PLYRUPDY
00001656                           982  ; UPDATE PLAYER
00001656                           983  ; INPUT         - NONE
00001656                           984  ; OUTPUT    - NONE
00001656                           985  ; MODIFIES  - NONE  
00001656                           986  ;-----------------------------------------------------------
00001656                           987        
00001656                           988                      
00001656  0839 0001 00001752       989              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
0000165E  6600 0010                990              BNE     .MOVEU                  ; YES: MOVE UP
00001662  0839 0003 00001752       991              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?            
0000166A  6600 001A                992              BNE     .MOVED                  ; YES: MOVE DOWN
0000166E  4E75                     993              RTS
00001670                           994              
00001670                           995        
00001670                           996              
00001670  0C79 0014 00009988       997  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
00001678  6E00 0004                998              BGT     .DOU                    ; NO: MOVE
0000167C  4E75                     999              RTS                             ; YES: END
0000167E  5179 00009988           1000  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
00001684  4E75                    1001              RTS
00001686                          1002  .MOVED      
00001686  3A39 00009986           1003              MOVE.W  (PLAYERX),D5
0000168C  8AFC 0028               1004              DIVU.W  #BLOCSIZE,  D5
00001690                          1005                         
00001690  41F9 000099AE           1006              LEA LANDHEIG, A0
00001696  D0C5                    1007              ADDA.W  D5, A0
00001698                          1008                                     
00001698                          1009                
00001698  1A10                    1010              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
0000169A                          1011                                      ; OF THE SCREEN SEGMENT WHERE IS 
0000169A                          1012                                      ; LOCATED THE PLAYER
0000169A                          1013                                      ; RIGHT NOW 
0000169A                          1014                 
0000169A                          1015              
0000169A  5205                    1016              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
0000169C  CAFC 0028               1017              MULU.W  #BLOCSIZE, D5   
000016A0  383C 02D0               1018              MOVE.W  #SCRHEIGH, D4   
000016A4  9845                    1019              SUB.W   D5, D4          
000016A6  0444 0014               1020              SUB.W   #BLOCSIZE/2, D4  
000016AA  5B44                    1021              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN 
000016AC                          1022              
000016AC  B879 00009988           1023              CMP.W   (PLAYERY),D4   ; LOWER THAN TOP OF COLUMN BLOCKS?
000016B2  6E00 0012               1024              BGT     .DOD           ; YES: MOVE
000016B6  4E75                    1025              RTS                    ; NO: END
000016B8                          1026                          
000016B8  0C79 02BC 00009988      1027              CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
000016C0  6D00 0004               1028              BLT     .DOD                    ; NO: MOVE
000016C4  4E75                    1029              RTS                             ; YES: END
000016C6  5079 00009988           1030  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
000016CC  4E75                    1031              RTS
000016CE                          1032  
000016CE                          1033  
000016CE                          1034  ;-----------------------------------------------------------
000016CE                          1035  
000016CE                          1036  
000016CE                          1037  ;------------------------------------------------------------------------------------------------------
000016CE                          1038  
000016CE                          1039  
000016CE                          1040  PLYRPLOT
000016CE                          1041  ; PLOT PLAYER
000016CE                          1042  ; INPUT     - NONE
000016CE                          1043  ; OUTPUT    - NONE
000016CE                          1044  ; MODIFIES  - NONE  
000016CE                          1045  ;-----------------------------------------------------------
000016CE  48E7 F800               1046                      MOVEM.L D0-D4, -(A7)    ; STACK REGISTER
000016D2  103C 0050               1047                      MOVE.B                  #80, D0; SET PEN COLOR TASK
000016D6  223C 000000FF           1048                      MOVE.L                  #PLYRCOL, D1; PLAYER COLOR
000016DC  4E4F                    1049                      TRAP #15                ; SET PEN COLOR
000016DE  103C 0051               1050                      MOVE.B                  #81, D0; SET FILL COLOR TASK
000016E2  223C 000000FF           1051                      MOVE.L                  #PLYRCOL,D1; BLOCK COLOR
000016E8  4E4F                    1052                      TRAP #15                ; SET FILL COLOR
000016EA                          1053              
000016EA  3239 00009986           1054                      MOVE.W                  (PLAYERX),D1; D1:=XCENTER
000016F0  3439 00009988           1055                      MOVE.W                  (PLAYERY),D2; D2:=YCENTER
000016F6  3601                    1056                      MOVE.W                  D1, D3; D3:=XCENTER
000016F8  3802                    1057                      MOVE.W                  D2, D4; D4:=YCENTER
000016FA                          1058              
000016FA  0441 0014               1059                      SUB.W                   #BLOCSIZE/2, D1; D1:=XLEFT
000016FE  0442 0014               1060                      SUB.W                   #BLOCSIZE/2, D2; D2:=YTOP
00001702  0643 0014               1061                      ADD.W                   #BLOCSIZE/2, D3; D3:=XRIGHT
00001706  0644 0014               1062                      ADD.W                   #BLOCSIZE/2, D4; D4:=YBOTTOM
0000170A  103C 0057               1063                      MOVE.B                  #87, D0
0000170E  4E4F                    1064                      TRAP                    #15; DRAW PLAYER
00001710  4CDF 001F               1065                      MOVEM.L (A7)+, D0-D4    ; RESTORE REGISTERS
00001714                          1066                      
00001714  4E75                    1067                      RTS
00001716                          1068  
00001716                          1069  
00001716                          1070  
00001716                          1071  
00001716                          1072  
00001716                          1073  
00001716                          1074  
00001716                          1075  
00001716                          1076  
00001716                          1077  
00001716                          1078  -------------------- end include --------------------
00001716                          1079  
00001716                          1080  ; --- INITIALIZE --------------------------------------------------------------
00001716                          1081  
00001716  4EB8 1000               1082  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
0000171A                          1083               
0000171A                          1084  
0000171A                          1085              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
0000171A  4EB8 11D6               1086              JSR       RNDINIT
0000171E                          1087              
0000171E                          1088             
0000171E                          1089              
0000171E                          1090              ; GENERATES LAND 
0000171E                          1091  
0000171E                          1092              ;JSR     LANDINIT
0000171E  4EB8 14B6               1093              JSR     LANDCRTE
00001722                          1094              ; PLACE PLAYER
00001722  4EB8 151E               1095              JSR     PLYRINIT             
00001726                          1096             
00001726                          1097              
00001726                          1098              
00001726                          1099              
00001726                          1100  
00001726                          1101  
00001726                          1102  ; --- UPDATE ------------------------------------------------------------------
00001726                          1103  
00001726  4E40                    1104  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
00001728                          1105  
00001728                          1106              ; TO DO : ADD YOUR GAME UPDATE HERE
00001728  4EB8 1334               1107              JSR      AGLUPD
0000172C  4EB8 1576               1108              JSR     PLAYELX
00001730                          1109              ;JSR     PLYRUPDX               ; WITHOUT BOUNDING 
00001730  4EB8 1656               1110              JSR     PLYRUPDY
00001734                          1111              ;JSR     PLAYELY                ; WITHOUT BOUNDING 
00001734                          1112  
00001734                          1113  ; --- WAIT SYNCH --------------------------------------------------------------
00001734                          1114  
00001734  4A39 00001754           1115  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
0000173A  67F8                    1116              BEQ     .WINT
0000173C  4239 00001754           1117              CLR.B   (SCRINTCT)
00001742                          1118  
00001742                          1119  ; --- PLOT --------------------------------------------------------------------
00001742                          1120  
00001742                          1121              ; TO DO : ADD YOUR GAME PLOT HERE           
00001742  4EB8 1358               1122              JSR     AGLPLOT
00001746                          1123              
00001746  4EB8 16CE               1124              JSR     PLYRPLOT
0000174A                          1125              
0000174A  4E41                    1126              TRAP    #SCRTRAP                ; SHOW GRAPHICS
0000174C  60D8                    1127              BRA     .LOOP                   ; MAIN LOOP
0000174E  FFFF FFFF               1128              SIMHALT
00001752                          1129  
00001752                          1130  ; --- VARIABLES ---------------------------------------------------------------
00001752                          1131  
00001752                          1132              INCLUDE "SYSVAR.X68"
00001752                          1133  ; =============================================================================
00001752                          1134  ; TITLE    : SYSTEM VARIABLES
00001752                          1135  ; AUTHOR   : ANTONI BURGUERA
00001752                          1136  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001752                          1137  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001752                          1138  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001752                          1139  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001752                          1140  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001752                          1141  ; HISTORY  : XX-XXX-201X - CREATION
00001752                          1142  ;            11-OCT-2020 - MINOR CHANGES
00001752                          1143  ; =============================================================================
00001752                          1144  
00001752                          1145  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001752                          1146  
00001752                          1147  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001753                          1148  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001754                          1149  
00001754                          1150              DS.W    0
00001754                          1151  
00001754                          1152  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001754                          1153  
00001754                          1154  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001755                          1155  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001756                          1156              DS.W    0
00001756                          1157  
00001756                          1158  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001756                          1159  
00001780                          1160              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001780                          1161  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00009980                          1162              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00009980                          1163  -------------------- end include --------------------
00009980                          1164              INCLUDE "VAR.X68"
00009980                          1165  ; =============================================================================
00009980                          1166  ; TITLE    : GAME VARIABLES
00009980                          1167  ; AUTHOR   : MAURICI RUIZ
00009980                          1168  ; HISTORY  : 15/12/2020  - CREATION
00009980                          1169  ; =============================================================================
00009980                          1170  
00009980                          1171  
00009980                          1172  ;---- BLOCK RELATED VARIABLES -------------------------------------------------
00009980                          1173  
00009980                          1174  BLOCKX          DS.W    1                   ; BLOCK X COORDINATE (XCENTER)
00009982                          1175  BLOCKY          DS.W    1                   ; BLOCK Y COORDINATE (XCENTER)
00009984                          1176  
00009984                          1177  
00009984                          1178  ; --- RANDOM NUMBER GENERATOR VARIABLES ---------------------------------------
00009984                          1179  
00009984                          1180  RNDINDEX    DS.B        1                   ; RANDOM INDEX
00009986                          1181                      DS.W                        0
00009986                          1182                      
00009986                          1183  ; --- PLAYER RELATED VARIABLES ------------------------------------------------
00009986                          1184  
00009986                          1185  PLAYERX     DS.W    1                       ; PAD X COORDINATE (XCENTER)
00009988                          1186  PLAYERY     DS.W    1                       ; PAD X COORDINATE (XCENTER)
0000998A                          1187  
0000998A                          1188  PLYERSEG    DS.W    1                       ; SCREEN SEGMENT WHERE IS LOCATED THE PLAYER
0000998C                          1189  
0000998C                          1190  TOPOFSEG    DS.W    1                       ; NUMBER OF BLOCKS IN COLUMN UNDER PLAYER
0000998E                          1191  
0000998E                          1192  
0000998E                          1193  ; --- LAND RELATED VARIABLES --------------------------------------------------
0000998E                          1194  
0000998E= 06 07 07 08 09 0A ...   1195  RANDIRT     DC.B    6  , 7  , 7  , 8  , 9  , 10  , 10  , 9 
00009996= 08 07 06 06 07 08 ...   1196              DC.B    8  , 7  , 6  , 6  , 7  , 8   , 9   , 9 
0000999E= 0A 09 08 08 09 0A ...   1197              DC.B    10 , 9  , 8  , 8  , 9  , 10  , 10  , 9 
000099A6= 08 07 07 06 07 08 ...   1198              DC.B    8  , 7  , 7  , 6  , 7  , 8   , 9   , 10
000099AE                          1199              DS.W    0 
000099AE                          1200  
000099AE                          1201  
000099AE= 08 08 09 0A 0B 0C ...   1202  LANDHEIG    DC.B    8  ,  8 ,  9 , 10  , 11  , 12  , 12  , 11 
000099B6= 0A 09 08 08 09 0A ...   1203              DC.B    10 ,  9 ,  8 ,  8  ,  9  , 10  , 11  , 11 
000099BE= 0C 0B 0A 0A 0B 0C ...   1204              DC.B    12 , 11 , 10 , 10  , 11  , 12  , 12  , 11 
000099C6= 0A 09 09 08 09 0A ...   1205              DC.B    10 ,  9 ,  9 ,  8  ,  9  , 10  , 11  , 12
000099CE                          1206              DS.W    0 
000099CE                          1207  
000099CE                          1208  
000099CE                          1209  -------------------- end include --------------------
000099CE                          1210              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              131A
AGLADD:END          1330
AGLKILL             11C0
AGLPLOT             1358
AGLPLOT:END         1378
AGLPLOT:LOOP        1360
AGLUPD              1334
AGLUPD:END          1352
AGLUPD:LOOP         133C
BLOCID              1
BLOCINIT            137E
BLOCKX              9980
BLOCKY              9982
BLOCPCOL            0
BLOCPLOT            138C
BLOCSIZE            28
BLOCUPD             138A
DIRTFCOL            2850
DIRTINIT            13C8
DIRTINIT:LOOPCOL    13F4
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             208
DMMBSIZE            40
DMMDATA             1780
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRTINITX            14
DRTINITY            2A8
GETRDIRT            11DE
GRASFCOL            8C50
GRASINTX            14
GRASINTY            26C
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1753
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1752
LANDCRTE            14B6
LANDCRTE:LOOPD      14F6
LANDCRTE:LOOPL      14D6
LANDHEIG            99AE
LANDINIT            144C
LANDINIT:LOOPCOL    1470
LANDINIT:LOOPDIR    148A
NCOLBLKS            12
NROWBLKS            20
NUMSTN              12
PLAYELX             1576
PLAYELX:DOL         159E
PLAYELX:DOR         1604
PLAYELX:END         160A
PLAYELX:MOVEL       1590
PLAYELX:MOVER       15A6
PLAYELY             1610
PLAYELY:DOD         164E
PLAYELY:DOU         1638
PLAYELY:MOVED       1640
PLAYELY:MOVEU       162A
PLAYERX             9986
PLAYERY             9988
PLYERSEG            998A
PLYRCOL             FF
PLYRINIT            151E
PLYRPLOT            16CE
PLYRUPDX            1530
PLYRUPDX:DOL        1558
PLYRUPDX:DOR        156E
PLYRUPDX:MOVEL      154A
PLYRUPDX:MOVER      1560
PLYRUPDY            1656
PLYRUPDY:DOD        16C6
PLYRUPDY:DOU        167E
PLYRUPDY:MOVED      1686
PLYRUPDY:MOVEU      1670
PLYSPEED            8
RANDIRT             998E
RNDGET              11FC
RNDGET:RANDVEC      121A
RNDINDEX            9984
RNDINIT             11D6
SCRCYCCT            1755
SCRHEIGH            2D0
SCRINIT             101C
SCRINTCT            1754
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            500
START               1716
START:LOOP          1726
START:WINT          1734
STNEINIT            140A
STNEINIT:LOOPS      1434
STNFCOL             676767
STNINITX            14
STNINITY            2BC
SYSINIT             1000
TOPOFSEG            998C

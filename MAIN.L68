000017EC Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 30/12/2020 21:00:03

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS-
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000500                 85  SCRWIDTH    EQU     1280                    ; SCREEN WIDTH (PIXELS)
00001000  =000002D0                 86  SCRHEIGH    EQU     720                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000208                 93  DMMBNUM     EQU     520                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            95  
00001000                            96  
00001000                            97  
00001000                            98  
00001000                            99  -------------------- end include --------------------
00001000                           100              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                           101  ; =============================================================================
00001000                           102  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                           103  ; AUTHOR   : ANTONI BURGUERA
00001000                           104  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           105  ;            - SYS : GENERIC.
00001000                           106  ;            - SCR : SCREEN MANAGEMENT.
00001000                           107  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           108  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           109  ;            11-OCT-2020 - MINOR CHANGES
00001000                           110  ; =============================================================================
00001000                           111  
00001000                           112  ; -----------------------------------------------------------------------------
00001000                           113  SYSINIT
00001000                           114  ; INITIALIZES THE SYSTEM
00001000                           115  ; INPUT    - NONE
00001000                           116  ; OUTPUT   - NONE
00001000                           117  ; MODIFIES - NONE
00001000                           118  ; -----------------------------------------------------------------------------
00001000  205F                     119              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            120              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            121              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            122              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                123              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     124              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     125              RTS
0000101C                           126  
0000101C                           127  ; =============================================================================
0000101C                           128  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           129  ; =============================================================================
0000101C                           130  
0000101C                           131  ; -----------------------------------------------------------------------------
0000101C                           132  SCRINIT
0000101C                           133  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           134  ; INPUT    - NONE
0000101C                           135  ; OUTPUT   - NONE
0000101C                           136  ; MODIFIES - D0,D1,D2,D3
0000101C                           137  ; -----------------------------------------------------------------------------
0000101C  007C 0700                138              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       139              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 050002D0            140              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                141              MOVE.B  #33,D0
00001032  4E4F                     142              TRAP    #15
00001034  7201                     143              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     144              TRAP    #15
00001038  323C FF00                145              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                146              MOVE.B  #11,D0
00001040  4E4F                     147              TRAP    #15
00001042  123C 0011                148              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                149              MOVE.B  #92,D0
0000104A  4E4F                     150              TRAP    #15
0000104C  323C FF00                151              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                152              MOVE.B  #11,D0
00001054  4E4F                     153              TRAP    #15
00001056  21FC 0000108C 0064       154              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                155              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                156              MOVE.B  #32,D0
00001066  4E4F                     157              TRAP    #15
00001068  143C 0081                158              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                159              MOVE.B  #SCRTIM,D3
00001070  123C 0006                160              MOVE.B  #6,D1
00001074  103C 0020                161              MOVE.B  #32,D0
00001078  4E4F                     162              TRAP    #15
0000107A  4239 0000182A            163              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 0000182B            164              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                165              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     166              RTS
0000108C                           167  
0000108C                           168  ; -----------------------------------------------------------------------------
0000108C                           169  SCRISR
0000108C                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           171  ; INPUT    - NONE
0000108C                           172  ; OUTPUT   - NONE
0000108C                           173  ; MODIFIES - NONE
0000108C                           174  ; -----------------------------------------------------------------------------
0000108C  5239 0000182A            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 0000182B            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     177              RTE
0000109A                           178  
0000109A                           179  ; -----------------------------------------------------------------------------
0000109A                           180  SCRUPD
0000109A                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           182  ; BUFFER FOR THE NEXT ONE.
0000109A                           183  ; INPUT    - NONE
0000109A                           184  ; OUTPUT   - NONE
0000109A                           185  ; MODIFIES - NONE
0000109A                           186  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                187              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                188              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     189              TRAP    #15
000010A4  323C FF00                190              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                191              MOVE.B  #11,D0
000010AC  4E4F                     192              TRAP    #15
000010AE  4C9F 0003                193              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     194              RTE
000010B4                           195  
000010B4                           196  ; =============================================================================
000010B4                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           198  ; =============================================================================
000010B4                           199  
000010B4                           200  ; -----------------------------------------------------------------------------
000010B4                           201  KBDINIT
000010B4                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           203  ; INPUT    - NONE
000010B4                           204  ; OUTPUT   - NONE
000010B4                           205  ; MODIFIES - NONE
000010B4                           206  ; -----------------------------------------------------------------------------
000010B4  4239 00001828            207              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001829            208              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     210              RTS
000010CA                           211  
000010CA                           212  ; -----------------------------------------------------------------------------
000010CA                           213  KBDREAD
000010CA                           214  ; TRAP SERVICE ROUTINE.
000010CA                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           218  ; INPUT    - NONE
000010CA                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           220  ; MODIFIES - NONE
000010CA                           221  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                222              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                223              MOVE.B  #19,D0
000010D2  223C 50104D20            224              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     225              TRAP    #15
000010DA  6100 002A                226              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            227              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     228              TRAP    #15
000010E6  6100 001E                229              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001828            230              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     231              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     232              AND.B   D2,D0
000010F4  13C2 00001828            233              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001829            234              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                235              MOVEM.L (A7)+,D0-D3
00001104  4E73                     236              RTE
00001106                           237  
00001106  363C 0003                238  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     239  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     240              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                241              DBRA.W  D3,.LOOP
00001112  4E75                     242              RTS
00001114                           243  
00001114                           244  ; =============================================================================
00001114                           245  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           246  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           247  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           248  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           249  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           250  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           251  ; =============================================================================
00001114                           252  
00001114                           253  ; -----------------------------------------------------------------------------
00001114                           254  DMMINIT
00001114                           255  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           256  ; INPUT    - NONE
00001114                           257  ; OUTPUT   - NONE
00001114                           258  ; MODIFIES - NONE
00001114                           259  ; -----------------------------------------------------------------------------
00001114  48E7 8080                260              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001840            261              LEA     DMMDATA,A0
0000111E  303C 0207                262              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                263  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            264              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                265              DBRA.W  D0,.LOOP
00001130  4CDF 0101                266              MOVEM.L (A7)+,D0/A0
00001134  4E75                     267              RTS
00001136                           268  
00001136                           269  ; -----------------------------------------------------------------------------
00001136                           270  DMMFIRST
00001136                           271  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           272  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           273  ; INPUT    - NONE
00001136                           274  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           275  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           276  ; -----------------------------------------------------------------------------
00001136  41F9 00001840            277              LEA     DMMDATA,A0
0000113C  4A58                     278  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                279              BNE     DMMFRFND
00001142  D1FC 0000003E            280              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 00009A3F            281  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     282              BLT     DMMFRLOP
00001150  207C 00000000            283              MOVE.L  #0,A0
00001156  4E75                     284  DMMFRFND    RTS
00001158                           285  
00001158                           286  ; -----------------------------------------------------------------------------
00001158                           287  DMMNEXT
00001158                           288  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           289  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           290  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           291  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           292  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           293  ; -----------------------------------------------------------------------------
00001158  2F00                     294              MOVE.L  D0,-(A7)
0000115A  2008                     295              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            296              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            297              ADD.L   #DMMBSIZE,D0
00001168  2040                     298              MOVE.L  D0,A0
0000116A  201F                     299              MOVE.L  (A7)+,D0
0000116C  60DA                     300              BRA     DMMFRCOM
0000116E                           301  
0000116E                           302  ; -----------------------------------------------------------------------------
0000116E                           303  DMMFRSTO
0000116E                           304  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           305  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           306  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           307  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           308  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           309  ; -----------------------------------------------------------------------------
0000116E  41F9 00001840            310              LEA     DMMDATA,A0
00001174  B058                     311  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                312              BEQ     DMMFFND
0000117A  D1FC 0000003E            313              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 00009A3F            314  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     315              BLT     DMMFLOOP
00001188  207C 00000000            316              MOVE.L  #0,A0
0000118E  4E75                     317  DMMFFND     RTS
00001190                           318  
00001190                           319  ; -----------------------------------------------------------------------------
00001190                           320  DMMNEXTO
00001190                           321  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           322  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           323  ; INPUT    - D0.W : ID TO SEARCH
00001190                           324  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           325  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           326  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           327  ; -----------------------------------------------------------------------------
00001190  2F00                     328              MOVE.L  D0,-(A7)
00001192  2008                     329              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            330              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            331              ADD.L   #DMMBSIZE,D0
000011A0  2040                     332              MOVE.L  D0,A0
000011A2  201F                     333              MOVE.L  (A7)+,D0
000011A4  60DA                     334              BRA     DMMFCOM
000011A6                           335  
000011A6                           336  ; -----------------------------------------------------------------------------
000011A6                           337  DMMALLOC
000011A6                           338  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           339  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           340  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           341  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           342  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           343  ; -----------------------------------------------------------------------------
000011A6  3F00                     344              MOVE.W  D0,-(A7)
000011A8  4240                     345              CLR.W   D0
000011AA  4EB8 116E                346              JSR     DMMFRSTO
000011AE  301F                     347              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            348              CMP.L   #0,A0
000011B6  6700 0006                349              BEQ     .END
000011BA  3140 FFFE                350              MOVE.W  D0,-2(A0)
000011BE  4E75                     351  .END        RTS
000011C0                           352  
000011C0                           353  ; -----------------------------------------------------------------------------
000011C0                           354  DMMFREE
000011C0                           355  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           356  ; SYSTEM (0)
000011C0                           357  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           358  ; OUTPUT   - NONE
000011C0                           359  ; MODIFIES - NONE
000011C0                           360  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                361              MOVEM.L D0/A0,-(A7)
000011C4  2008                     362              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            363              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     364              MOVE.L  D0,A0
000011CE  4250                     365              CLR.W   (A0)
000011D0  4CDF 0101                366              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     367              RTS
000011D4  4E75                     368  -------------------- end include --------------------
000011D6                           369              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           370  ; =============================================================================
000011D6                           371  ; TITLE    : GAME CONSTANTS
000011D6                           372  ; AUTHOR   : MAURICI RUIZ PLAZA
000011D6                           373  ; HISTORY  : 15/12/2020  -  CREATION
000011D6                           374  ; =============================================================================
000011D6                           375  
000011D6                           376  ; ---- BLOCK RELATED CONSTANTS-------------------------------------------------
000011D6                           377  
000011D6  =00000028                378  BLOCSIZE    EQU     40                  ; BLOCK WIDTH
000011D6                           379  
000011D6                           380  ; ---- BLOCK TYPES - 00BBGGRR -----------------------
000011D6                           381  
000011D6  =00000000                382  BLOCPCOL    EQU     $00000000               ; PEN COLOR
000011D6  =00000001                383  BLOCID      EQU       1                      ; STONE IDENTIFIER
000011D6  =00000020                384  NROWBLKS    EQU     SCRWIDTH/BLOCSIZE       ; NUMBER OF BLOCKS PER ROW TO PAINT
000011D6  =00000012                385  NCOLBLKS    EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF BLOCKS PER COLUMN TO PAINT
000011D6                           386  
000011D6                           387  
000011D6                           388  ; STONE
000011D6  =00000012                389  NUMSTN      EQU     SCRHEIGH/BLOCSIZE       ; NUMBER OF STONES TO PAINT
000011D6  =00000014                390  STNINITX    EQU     BLOCSIZE/2              ; INITIALX STONES
000011D6  =000002BC                391  STNINITY    EQU     SCRHEIGH-BLOCSIZE/2     ; INITIALY STONES                                  
000011D6  =00676767                392  STNFCOL     EQU      $00676767          ; FILL STONE COLOR
000011D6                           393  
000011D6                           394  ; DIRT
000011D6  =00000014                395  DRTINITX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =000002A8                396  DRTINITY    EQU     SCRHEIGH-BLOCSIZE     ; INITIALY DIRT
000011D6  =00002850                397  DIRTFCOL    EQU      $00002850              ; FILL DIRT COLOR 
000011D6                           398  
000011D6                           399  ; GRASS
000011D6  =00000014                400  GRASINTX    EQU     BLOCSIZE/2              ; INITIALX DIRT
000011D6  =0000026C                401  GRASINTY    EQU     SCRHEIGH-3*BLOCSIZE+BLOCSIZE/2      ; INITIALY DIRT
000011D6  =00008C50                402  GRASFCOL    EQU      $00008C50         ; FILL GRASS COLOR
000011D6                           403  
000011D6                           404  
000011D6                           405  ; ---- PLAYER RELATED CONSTANTS--------------------------------------------------
000011D6                           406  
000011D6  =000000FF                407  PLYRCOL     EQU      $000000FF          ; PLAYER COLOR 
000011D6  =00000008                408  PLYSPEED    EQU     8                  ; PLAYER SPEED
000011D6                           409  
000011D6                           410  
000011D6                           411  
000011D6                           412  
000011D6                           413  
000011D6                           414  -------------------- end include --------------------
000011D6                           415              INCLUDE "RANDOM.X68"            ; RANDOM NUMBER GENERATOR
000011D6                           416  ; =============================================================================
000011D6                           417  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
000011D6                           418  ; AUTHOR   : ANTONI BURGUERA
000011D6                           419  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
000011D6                           420  ; HISTORY  : XX-XXX-201X - CREATION
000011D6                           421  ;            11-OCT-2020 - MINOR CHANGES
000011D6                           422  ; =============================================================================
000011D6                           423  
000011D6                           424  ; -----------------------------------------------------------------------------
000011D6                           425  RNDINIT
000011D6                           426  ; INITIALIZES RANDOM NUMBER GENERATOR
000011D6                           427  ; INPUT    - NONE
000011D6                           428  ; OUTPUT   - NONE
000011D6                           429  ; MODIFIES - NONE
000011D6                           430  ; -----------------------------------------------------------------------------
000011D6  4239 00009A44            431              CLR.B   (RNDINDEX)
000011DC  4E75                     432              RTS
000011DE                           433              
000011DE                           434              
000011DE                           435  ; -----------------------------------------------------------------------------
000011DE                           436  GETRDIRT
000011DE                           437  ; PROVIDES A RANDOM NUMBER OF DIRT BLOCKS BETWEEN 6-10
000011DE                           438  ; INPUT    - NONE
000011DE                           439  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011DE                           440  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011DE                           441  ; -----------------------------------------------------------------------------
000011DE  2F08                     442              MOVE.L  A0,-(A7)
000011E0  41F9 00009A6E            443              LEA     LANDHEIG,A0
000011E6  4280                     444              CLR.L   D0
000011E8  1039 00009A44            445              MOVE.B  (RNDINDEX),D0
000011EE  1030 0800                446              MOVE.B  (A0,D0.L),D0
000011F2  5239 00009A44            447              ADDQ.B  #1,(RNDINDEX)
000011F8  205F                     448              MOVE.L  (A7)+,A0
000011FA  4E75                     449              RTS
000011FC                           450  
000011FC                           451  
000011FC                           452              
000011FC                           453  ; -----------------------------------------------------------------------------
000011FC                           454  RNDGET
000011FC                           455  ; PROVIDES A PSEUDO-RANDOM BYTE
000011FC                           456  ; INPUT    - NONE
000011FC                           457  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011FC                           458  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011FC                           459  ; -----------------------------------------------------------------------------
000011FC  2F08                     460              MOVE.L  A0,-(A7)
000011FE  41F9 0000121A            461              LEA     .RANDVEC,A0
00001204  4280                     462              CLR.L   D0
00001206  1039 00009A44            463              MOVE.B  (RNDINDEX),D0
0000120C  1030 0800                464              MOVE.B  (A0,D0.L),D0
00001210  5239 00009A44            465              ADDQ.B  #1,(RNDINDEX)
00001216  205F                     466              MOVE.L  (A7)+,A0
00001218  4E75                     467              RTS
0000121A                           468  
0000121A= A2 EE 9A 0C F5 24 ...    469  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
00001222= 2A A3 51 26 E0 AC ...    470              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
0000122A= 75 51 CA FD 33 EB ...    471              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001232= 60 CC E7 B8 9A EB ...    472              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000123A= 1D 76 B5 95 B0 89 ...    473              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001242= 39 15 48 C9 6E CA ...    474              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000124A= 43 E7 E2 7C 37 25 ...    475              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001252= E9 94 CE E9 E4 52 ...    476              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000125A= 37 6D 9A 84 A2 28 ...    477              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001262= 19 E2 C6 77 80 D4 ...    478              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000126A= 0A 5A 32 67 33 C2 ...    479              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001272= 59 80 DC 0E 57 FC ...    480              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000127A= 8A AB BC F7 07 4D ...    481              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001282= EF D5 77 6E 1E BB ...    482              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000128A= D6 E0 2A 8F BD 28 ...    483              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001292= 13 4F 66 EC 0A 64 ...    484              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000129A= 56 52 9A 16 9B 90 ...    485              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
000012A2= 06 8A A4 F7 01 DA ...    486              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
000012AA= F2 E7 77 28 B1 76 ...    487              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
000012B2= A4 42 E3 81 B1 67 ...    488              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
000012BA= BF CE FA 16 BF 38 ...    489              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
000012C2= D1 8B 50 0C 5F 49 ...    490              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
000012CA= DE 4C 14 A2 40 DC ...    491              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012D2= B6 9B 0A 38 5D AB ...    492              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012DA= E2 1B DD 75 15 82 ...    493              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012E2= 8A 26 51 30 9F 47 ...    494              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012EA= 1E 8A BB 71 C6 6E ...    495              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012F2= 9F 47 E5 34 94 27 ...    496              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012FA= 7D 06 D6 BA 30 0F ...    497              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
00001302= EC 7F 7E 03 CF 2D ...    498              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
0000130A= 94 5B 23 F2 8B CD ...    499              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
00001312= 74 33 EC B9 0F D5 ...    500              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
0000131A                           501  
0000131A                           502  
0000131A                           503  -------------------- end include --------------------
0000131A                           504              INCLUDE "AGENTLST.X68"          ; 
0000131A                           505  ; =============================================================================
0000131A                           506  ; TITLE    : AGENT LIST
0000131A                           507  ; AUTHOR   : ANTONI BURGUERA
0000131A                           508  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
0000131A                           509  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
0000131A                           510  ;              +4 - LONG : PLOT SUBROUTINE POINTER
0000131A                           511  ;              +8:END    : DATA (AGENT SPECIFIC)
0000131A                           512  ; HISTORY  : XX-XXX-201X - CREATION
0000131A                           513  ;            11-OCT-2020 - MINOR CHANGES
0000131A                           514  ; =============================================================================
0000131A                           515  
0000131A                           516  ; -----------------------------------------------------------------------------
0000131A                           517  AGLADD
0000131A                           518  ; CREATES A NEW AGENT
0000131A                           519  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
0000131A                           520  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
0000131A                           521  ;            A3 - POINTER TO AGENT PLOT FUNCTION
0000131A                           522  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
0000131A                           523  ;            D1 - AGENT INITIALIZATION PARAMETER 1
0000131A                           524  ;            D2 - AGENT INITIALIZATION PARAMETER 2
0000131A                           525  ;            D3 - AGENT INITIALIZATION PARAMETER 3
0000131A                           526  ; OUTPUT   - NONE
0000131A                           527  ; MODIFIES - NONE
0000131A                           528  ; -----------------------------------------------------------------------------
0000131A  2F08                     529              MOVE.L  A0,-(A7)
0000131C  4EB8 11A6                530              JSR     DMMALLOC
00001320  B1FC 00000000            531              CMP.L   #0,A0
00001326  6700 0008                532              BEQ     .END
0000132A  20CA                     533              MOVE.L  A2,(A0)+
0000132C  20CB                     534              MOVE.L  A3,(A0)+
0000132E  4E91                     535              JSR     (A1)
00001330  205F                     536  .END        MOVE.L  (A7)+,A0
00001332  4E75                     537              RTS
00001334                           538  
00001334                           539  ; -----------------------------------------------------------------------------
00001334                           540  AGLUPD
00001334                           541  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001334                           542  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001334                           543  ; INPUT    - NONE
00001334                           544  ; OUTPUT   - NONE
00001334                           545  ; MODIFIES - NONE
00001334                           546  ; -----------------------------------------------------------------------------
00001334  48E7 00C0                547              MOVEM.L A0-A1,-(A7)
00001338  4EB8 1136                548              JSR     DMMFIRST
0000133C  B1FC 00000000            549  .LOOP       CMP.L   #0,A0
00001342  6700 000E                550              BEQ     .END
00001346  2250                     551              MOVE.L  (A0),A1
00001348  5088                     552              ADD.L   #8,A0
0000134A  4E91                     553              JSR     (A1)
0000134C  4EB8 1158                554              JSR     DMMNEXT
00001350  60EA                     555              BRA     .LOOP
00001352  4CDF 0300                556  .END        MOVEM.L (A7)+,A0-A1
00001356  4E75                     557              RTS
00001358                           558  
00001358                           559  ; -----------------------------------------------------------------------------
00001358                           560  AGLPLOT
00001358                           561  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001358                           562  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001358                           563  ; INPUT    - NONE
00001358                           564  ; OUTPUT   - NONE
00001358                           565  ; MODIFIES - NONE
00001358                           566  ; -----------------------------------------------------------------------------
00001358  48E7 00C0                567              MOVEM.L A0-A1,-(A7)
0000135C  4EB8 1136                568              JSR     DMMFIRST
00001360  B1FC 00000000            569  .LOOP       CMP.L   #0,A0
00001366  6700 0010                570              BEQ     .END
0000136A  2268 0004                571              MOVE.L  4(A0),A1
0000136E  5088                     572              ADD.L   #8,A0
00001370  4E91                     573              JSR     (A1)
00001372  4EB8 1158                574              JSR     DMMNEXT
00001376  60E8                     575              BRA     .LOOP
00001378  4CDF 0300                576  .END        MOVEM.L (A7)+,A0-A1
0000137C  4E75                     577              RTS
0000137E                           578  
0000137E                           579  ; -----------------------------------------------------------------------------
0000137E  =000011C0                580  AGLKILL     EQU     DMMFREE
0000137E                           581  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000137E                           582  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000137E                           583  ; OUTPUT   - NONE
0000137E                           584  ; MODIFIES - NONE
0000137E                           585  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000137E                           586  ; -----------------------------------------------------------------------------
0000137E                           587  -------------------- end include --------------------
0000137E                           588              INCLUDE "BLOCK.X68"             ; BLOCK MANAGEMENT
0000137E                           589  
0000137E                           590  ;-----------------------------------------------------------
0000137E                           591  BLOCINIT
0000137E                           592  ; INITIALIZE BLOCK
0000137E                           593  ; INPUT     - D1.W  X PLACE COORDINATE
0000137E                           594  ;          - D2.W  Y PLACE COORDINATE 
0000137E                           595  ;          - D3.L  BLOCK COLOR
0000137E                           596  ; OUTPUT    - NONE
0000137E                           597  ; MODIFIES  - NONE  
0000137E                           598  ;-----------------------------------------------------------
0000137E                           599                         
0000137E  3081                     600             MOVE.W   D1, (A0)
00001380  3142 0002                601              MOVE.W  D2, 2(A0)
00001384  2143 0004                602              MOVE.L  D3, 4(A0)
00001388                           603              
00001388                           604              
00001388  4E75                     605              RTS
0000138A                           606  
0000138A                           607  
0000138A                           608  ;-----------------------------------------------------------
0000138A                           609  BLOCUPD
0000138A                           610  ; UPDATE BLOCK
0000138A                           611  ; INPUT     - NONE
0000138A                           612  ; OUTPUT    - NONE
0000138A                           613  ; MODIFIES  - NONE  
0000138A                           614  ;-----------------------------------------------------------
0000138A  48E7 F800                615              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
0000138E                           616              
0000138E  4240                     617              CLR D0
00001390  4241                     618              CLR D1
00001392                           619            
00001392                           620              ; CHECK BOTTOM'S PLAYER WITH TOP'S BLOCK
00001392  3039 00009A48            621              MOVE.W  (PLAYERY),D0            
00001398  0640 0014                622              ADD.W   #BLOCSIZE/2, D0         ; BOTTOM OF PLAYER
0000139C                           623              
0000139C  3228 0002                624              MOVE.W  2(A0),D1
000013A0  0441 0014                625              SUB.W   #BLOCSIZE/2, D1         ; TOP OF BLOCK
000013A4                           626  
000013A4  B041                     627              CMP.W   D1, D0
000013A6  6C00 0006                628              BGE     .CHKPRHT
000013AA  6000 0040                629              BRA     .END
000013AE                           630              
000013AE                           631  .CHKPRHT    
000013AE                           632              ; CHECK RIGHT'S PLAYER WITH LEFT'S BLOCK
000013AE  3039 00009A46            633              MOVE.W  (PLAYERX),D0            
000013B4  0640 0014                634              ADD.W   #BLOCSIZE/2, D0         ; RIGHT OF PLAYER
000013B8                           635              
000013B8  3210                     636              MOVE.W  (A0),D1                 ; BLOCKX 
000013BA                           637              
000013BA  B041                     638              CMP.W   D1, D0
000013BC  6D00 0010                639              BLT     .CHKPINL
000013C0                           640              
000013C0                           641              ;SUB.W   #BLOCSIZE/2, D1         ; LEFT OF BLOCK
000013C0                           642  
000013C0                           643              
000013C0                           644              
000013C0                           645  
000013C0                           646              
000013C0                           647              ; CHECK LEFT'S PLAYER WITH RIGHT'S BLOCK
000013C0                           648              
000013C0  0440 0028                649  .CHKPLFT    SUB.W   #BLOCSIZE, D0           ; LEFT OF PLAYER
000013C4                           650                          
000013C4  B041                     651              CMP.W   D1, D0
000013C6  6E00 0016                652              BGT     .CHKPINR
000013CA                           653              
000013CA  6000 0020                654              BRA .END
000013CE                           655              
000013CE                           656              
000013CE                           657  .CHKPINL    
000013CE  0441 0014                658              SUB.W #BLOCSIZE/2, D1               ; LEFT SIDE OF BLOCK 
000013D2                           659                                              
000013D2  B041                     660              CMP.W   D1, D0
000013D4  6C00 004E                661              BGE     .BLOCKL
000013D8                           662              
000013D8  0641 0014                663              ADD.W   #BLOCSIZE/2, D1           ; BLOCKX            
000013DC  60E2                     664              BRA .CHKPLFT
000013DE                           665              
000013DE                           666  
000013DE                           667  .CHKPINR      
000013DE  0641 0014                668              ADD.W #BLOCSIZE/2, D1           ; THE RIGHT SIDE OF THE BLOCK
000013E2  B041                     669              CMP.W   D1, D0
000013E4  6D00 004C                670              BLT     .BLOCKR
000013E8  6000 0002                671              BRA .END
000013EC                           672             
000013EC                           673              
000013EC                           674  .END        ; CHECK BOTTOM'S PLAYER WITH TOP'S BLOCK
000013EC                           675  
000013EC  4240                     676              CLR D0
000013EE  4241                     677              CLR D1
000013F0                           678            
000013F0                           679              ; CHECK BOTTOM'S PLAYER WITH TOP'S BLOCK
000013F0  3039 00009A48            680              MOVE.W  (PLAYERY),D0            
000013F6  0640 0014                681              ADD.W   #BLOCSIZE/2, D0         ; BOTTOM OF PLAYER
000013FA                           682              
000013FA  3228 0002                683              MOVE.W  2(A0),D1
000013FE  0441 0014                684              SUB.W   #BLOCSIZE/2, D1         ; TOP OF BLOCK
00001402                           685  
00001402  B041                     686              CMP.W   D1, D0
00001404  6D00 0018                687              BLT     .ENDF
00001408                           688  
00001408                           689  
00001408  3039 00009A46            690              MOVE.W  (PLAYERX),D0            
0000140E  0640 0014                691              ADD.W   #BLOCSIZE/2, D0         ; RIGHT OF PLAYER
00001412                           692              
00001412  3210                     693              MOVE.W  (A0),D1
00001414  0441 0014                694              SUB.W   #BLOCSIZE/2, D1         ; LEFT OF BLOCK
00001418                           695              
00001418  B041                     696              CMP.W   D1, D0
0000141A  6E00 0034                697              BGT     .CHKPINT
0000141E                           698       
0000141E                           699              
0000141E  4CDF 001F                700  .ENDF       MOVEM.L (A7)+, D0-D4
00001422  4E75                     701              RTS
00001424                           702              
00001424                           703              
00001424                           704  .BLOCKL     
00001424  3810                     705              MOVE.W (A0),D4
00001426  0444 0028                706              SUB.W   #BLOCSIZE, D4
0000142A  33C4 00009A46            707              MOVE.W D4, (PLAYERX)
00001430  60BA                     708              BRA .END
00001432                           709  
00001432                           710  .BLOCKR     
00001432  3810                     711              MOVE.W (A0),D4
00001434  0644 0028                712              ADD.W   #BLOCSIZE, D4
00001438  33C4 00009A46            713              MOVE.W D4, (PLAYERX)
0000143E  60AC                     714              BRA .END 
00001440                           715  
00001440                           716  .BLOCKT     
00001440  3828 0002                717              MOVE.W  2(A0),D4
00001444  0444 0028                718              SUB.W   #BLOCSIZE, D4
00001448  33C4 00009A48            719              MOVE.W D4, (PLAYERY)
0000144E  60CE                     720              BRA .ENDF  
00001450                           721  
00001450                           722  
00001450                           723  .CHKPINT    
00001450  0641 0028                724              ADD.W   #BLOCSIZE, D1           ; RIGHT SIDE OF BLOCK
00001454  B041                     725              CMP.W   D1, D0
00001456  6DE8                     726              BLT     .BLOCKT
00001458                           727              
00001458  0440 0028                728              SUB.W   #BLOCSIZE, D0           ; LEFT OF PLAYER
0000145C  B041                     729              CMP.W   D1, D0
0000145E  6DE0                     730              BLT     .BLOCKT
00001460                           731              
00001460  60BC                     732              BRA .ENDF     
00001462                           733              
00001462                           734  
00001462                           735  
00001462                           736  ;-----------------------------------------------------------
00001462                           737  BLOCPLOT
00001462                           738  ; PLOT BLOCK
00001462                           739  ; INPUT     - NONE
00001462                           740  ; OUTPUT    - NONE
00001462                           741  ; MODIFIES  - NONE  
00001462                           742  ;-----------------------------------------------------------
00001462  48E7 F800                743              MOVEM.L D0-D4, -(A7)            ; STACK REGISTER
00001466  103C 0050                744              MOVE.B  #80, D0                 ; SET PEN COLOR TASK
0000146A  7200                     745              MOVE.L  #BLOCPCOL, D1           ; BLOCK COLOR
0000146C  4E4F                     746              TRAP #15; SET PEN COLOR
0000146E  103C 0051                747              MOVE.B  #81, D0                 ; SET FILL COLOR TASK
00001472  2228 0004                748              MOVE.L  4(A0),D1                ; BLOCK COLOR
00001476  4E4F                     749              TRAP #15; SET FILL COLOR
00001478                           750              
00001478  3210                     751              MOVE.W  (A0),D1                 ; D1:=XCENTER
0000147A  3428 0002                752              MOVE.W  2(A0),D2                ; D2:=YCENTER
0000147E  3601                     753              MOVE.W  D1, D3                  ; D3:=XCENTER
00001480  3802                     754              MOVE.W  D2, D4                  ; D4:=YCENTER
00001482                           755              
00001482  0441 0014                756              SUB.W   #BLOCSIZE/2, D1         ; D1:=XLEFT
00001486  0442 0014                757              SUB.W   #BLOCSIZE/2, D2         ; D2:=YTOP
0000148A  0643 0014                758              ADD.W   #BLOCSIZE/2, D3         ; D3:=XRIGHT
0000148E  0644 0014                759              ADD.W   #BLOCSIZE/2, D4         ; D4:=YBOTTOM
00001492  103C 0057                760              MOVE.B  #87, D0
00001496  4E4F                     761              TRAP    #15                     ; DRAW BLOCK
00001498  4CDF 001F                762              MOVEM.L (A7)+, D0-D4            ; RESTORE REGISTERS
0000149C  4E75                     763              RTS
0000149E                           764  
0000149E                           765  
0000149E                           766  
0000149E                           767  
0000149E                           768  
0000149E                           769  
0000149E                           770  
0000149E                           771  
0000149E                           772  
0000149E                           773  -------------------- end include --------------------
0000149E                           774              INCLUDE "LAND.X68"              ; LAND CREATION
0000149E                           775  ;-----------------------------------------------------------
0000149E                           776  
0000149E                           777  DIRTINIT
0000149E                           778  ; CREATE LAND
0000149E                           779  ; INPUT     - NONE
0000149E                           780  ; OUTPUT    - NONE
0000149E                           781  ; MODIFIES  - NONE  
0000149E                           782  ;-----------------------------------------------------------
0000149E  48E7 FC00                783              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000014A2  48E7 0070                784              MOVEM.L A1-A3, -(A7)
000014A6                           785              
000014A6                           786              
000014A6  383C 0003                787              MOVE.W  #3, D4  ; NUMBER OF STONE BLOCKS
000014AA  3A3C 0014                788              MOVE.W  #STNINITX, D5                     
000014AE                           789              
000014AE  303C 0001                790              MOVE.W  #BLOCID, D0
000014B2  43F8 137E                791              LEA     BLOCINIT, A1
000014B6  45F8 138A                792              LEA     BLOCUPD, A2
000014BA  47F8 1462                793              LEA     BLOCPLOT, A3
000014BE  343C 02BC                794              MOVE.W  #STNINITY, D2
000014C2  263C 00676767            795              MOVE.L  #STNFCOL, D3                           
000014C8                           796              
000014C8  3205                     797              MOVE.W  D5, D1                       
000014CA  4EB8 131A                798  .LOOPCOL    JSR     AGLADD
000014CE  0442 0028                799              SUB.W   #BLOCSIZE, D2
000014D2  51CC FFF6                800              DBRA.W  D4, .LOOPCOL
000014D6                           801              
000014D6  4CDF 0E00                802              MOVEM.L (A7)+, A1-A3
000014DA  4CDF 003F                803              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
000014DE  4E75                     804              RTS
000014E0                           805  
000014E0                           806  
000014E0                           807  
000014E0                           808  
000014E0                           809  
000014E0                           810  ;-----------------------------------------------------------
000014E0                           811  STNEINIT
000014E0                           812  ; CREATE BASELAND OF STONES
000014E0                           813  ; INPUT     - NONE
000014E0                           814  ; OUTPUT    - NONE
000014E0                           815  ; MODIFIES  - NONE  
000014E0                           816  ;-----------------------------------------------------------
000014E0                           817              
000014E0  48E7 FC00                818              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
000014E4  48E7 0070                819              MOVEM.L A1-A3, -(A7)
000014E8                           820              
000014E8                           821              
000014E8  383C 0020                822              MOVE.W  #SCRWIDTH/BLOCSIZE, D4  ; NUMBER OF STONE BLOCKS
000014EC  3A3C 0014                823              MOVE.W  #STNINITX, D5                     
000014F0                           824              
000014F0  303C 0001                825              MOVE.W  #BLOCID, D0
000014F4  43F8 137E                826              LEA      BLOCINIT, A1
000014F8  45F8 138A                827              LEA     BLOCUPD, A2
000014FC  47F8 1462                828              LEA     BLOCPLOT, A3
00001500  343C 02BC                829              MOVE.W  #STNINITY, D2
00001504  263C 00676767            830              MOVE.L  #STNFCOL, D3                           
0000150A                           831              
0000150A  3205                     832  .LOOPS      MOVE.W  D5, D1                       
0000150C  4EB8 131A                833              JSR     AGLADD
00001510  0645 0028                834              ADD.W   #BLOCSIZE, D5
00001514  51CC FFF4                835              DBRA.W  D4, .LOOPS
00001518                           836              
00001518  4CDF 0E00                837              MOVEM.L (A7)+, A1-A3
0000151C  4CDF 003F                838              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
00001520  4E75                     839              RTS
00001522                           840  
00001522                           841              
00001522                           842  ;-----------------------------------------------------------                      
00001522                           843  LANDINIT
00001522                           844  ; INITIALIZE BASELAND  
00001522                           845  ; INPUT     - NONE
00001522                           846  ; OUTPUT    - NONE
00001522                           847  ; MODIFIES  - NONE  
00001522                           848  ;-----------------------------------------------------------
00001522  48E7 FC00                849              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
00001526  48E7 0070                850              MOVEM.L A1-A3, -(A7)
0000152A                           851              
0000152A                           852              
0000152A  3A3C 0020                853              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS                     
0000152E                           854              
0000152E  303C 0001                855              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
00001532  43F8 137E                856              LEA      BLOCINIT, A1
00001536  45F8 138A                857              LEA     BLOCUPD, A2
0000153A  47F8 1462                858              LEA     BLOCPLOT, A3
0000153E  343C 02BC                859              MOVE.W  #STNINITY, D2
00001542                           860                                        
00001542                           861              
00001542  323C 0014                862              MOVE.W  #STNINITX, D1                       
00001546                           863  .LOOPCOL    
00001546  263C 00676767            864              MOVE.L  #STNFCOL, D3            ; STONE
0000154C  4EB8 11DE                865              JSR     GETRDIRT
00001550  3800                     866              MOVE.W  D0, D4                  ; NUMBER OF DIRT BLOCKS FROM ARRAY OF RANDOM
00001552  4EB8 131A                867              JSR     AGLADD
00001556  0442 0028                868              SUB.W   #BLOCSIZE, D2
0000155A  263C 00002850            869              MOVE.L  #DIRTFCOL, D3
00001560                           870              
00001560  4EB8 131A                871  .LOOPDIR    JSR     AGLADD 
00001564  0442 0028                872              SUB.W   #BLOCSIZE, D2                       
00001568  51CC FFF6                873              DBRA.W  D4, .LOOPDIR
0000156C                           874              
0000156C  263C 00008C50            875              MOVE.L  #GRASFCOL, D3
00001572  4EB8 131A                876              JSR     AGLADD
00001576                           877              
00001576  0641 0028                878              ADD.W   #BLOCSIZE, D1
0000157A  343C 02BC                879              MOVE.W  #STNINITY, D2
0000157E  51CD FFC6                880              DBRA.W  D5, .LOOPCOL
00001582                           881  
00001582                           882              
00001582  4CDF 0E00                883              MOVEM.L (A7)+, A1-A3
00001586  4CDF 003F                884              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
0000158A  4E75                     885              RTS            
0000158C                           886  ;-----------------------------------------------------------                      
0000158C                           887  
0000158C                           888  
0000158C                           889  ;-----------------------------------------------------------                      
0000158C                           890  LANDCRTE
0000158C                           891  ; INITIALIZE BASELAND  
0000158C                           892  ; INPUT     - NONE
0000158C                           893  ; OUTPUT    - NONE
0000158C                           894  ; MODIFIES  - NONE  
0000158C                           895  ;-----------------------------------------------------------
0000158C  48E7 FC00                896              MOVEM.L D0-D5, -(A7)            ; STACK REGISTER
00001590  48E7 0070                897              MOVEM.L A1-A3, -(A7)
00001594                           898              
00001594  3A3C 0020                899              MOVE.W  #SCRWIDTH/BLOCSIZE, D5  ; NUMBER OF COLUMNS 
00001598  303C 0001                900              MOVE.W  #BLOCID, D0              ; INITIALIZE BLOCK
0000159C  43F8 137E                901              LEA      BLOCINIT, A1
000015A0  45F8 138A                902              LEA     BLOCUPD, A2
000015A4  47F8 1462                903              LEA     BLOCPLOT, A3           
000015A8  323C 0014                904              MOVE.W  #STNINITX, D1             
000015AC                           905                                                 
000015AC                           906  .LOOPL      
000015AC  343C 02BC                907              MOVE.W  #STNINITY, D2
000015B0  4EB8 11DE                908              JSR GETRDIRT
000015B4  3800                     909              MOVE.W D0, D4
000015B6  263C 00676767            910              MOVE.L  #STNFCOL, D3     
000015BC  4EB8 131A                911              JSR AGLADD
000015C0  5544                     912              SUB.W   #2, D4
000015C2  0442 0028                913              SUB.W   #BLOCSIZE, D2
000015C6  263C 00002850            914              MOVE.L  #DIRTFCOL, D3 
000015CC                           915  .LOOPD      
000015CC  4EB8 131A                916              JSR AGLADD
000015D0  0442 0028                917              SUB.W   #BLOCSIZE, D2
000015D4  51CC FFF6                918              DBRA.W  D4, .LOOPD
000015D8                           919              
000015D8  263C 00008C50            920              MOVE.L  #GRASFCOL, D3
000015DE  4EB8 131A                921              JSR     AGLADD
000015E2                           922              
000015E2  0641 0028                923              ADD.W   #BLOCSIZE, D1
000015E6  51CD FFC4                924              DBRA.W  D5, .LOOPL      
000015EA                           925  
000015EA                           926                         
000015EA  4CDF 0E00                927              MOVEM.L (A7)+, A1-A3
000015EE  4CDF 003F                928              MOVEM.L (A7)+, D0-D5            ; RESTORE REGISTERS
000015F2  4E75                     929              RTS            
000015F4                           930  ;-----------------------------------------------------------                      
000015F4                           931  
000015F4                           932  
000015F4                           933  
000015F4                           934  
000015F4                           935  
000015F4                           936  
000015F4                           937  
000015F4                           938  
000015F4                           939  
000015F4                           940  -------------------- end include --------------------
000015F4                           941              INCLUDE "PLAYER.X68"              ; PLAYER MANAGEMENT
000015F4                           942  
000015F4                           943  
000015F4                           944  ;-----------------------------------------------------------
000015F4                           945  PLYRINIT
000015F4                           946  ; INITIALIZE PLAYER
000015F4                           947  ; INPUT     -   - NONE 
000015F4                           948  ; OUTPUT    - NONE  
000015F4                           949  ; MODIFIES  - NONE  
000015F4                           950  ;-----------------------------------------------------------
000015F4                           951                         
000015F4  33FC 0037 00009A46       952              MOVE.W  #55,(PLAYERX)
000015FC  33FC 0032 00009A48       953                      MOVE.W  #50,(PLAYERY)
00001604                           954  
00001604  4E75                     955                      RTS
00001606                           956  
00001606                           957  
00001606                           958  ;-----------------------------------------------------------
00001606                           959  PLYRUPDX
00001606                           960  ; UPDATE PLAYER
00001606                           961  ; INPUT         - NONE
00001606                           962  ; OUTPUT    - NONE
00001606                           963  ; MODIFIES  - NONE  
00001606                           964  ;-----------------------------------------------------------
00001606  0839 0000 00001828       965                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
0000160E  6600 0010                966              BNE     .MOVEL                  ; YES: MOVE LEFT
00001612  0839 0002 00001828       967              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
0000161A  6600 001A                968              BNE     .MOVER                  ; YES: MOVE LEFT
0000161E  4E75                     969              RTS
00001620  0C79 0014 00009A46       970  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
00001628  6E00 0004                971              BGT     .DOL                    ; NO: MOVE
0000162C  4E75                     972              RTS                             ; YES: END
0000162E  5179 00009A46            973  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
00001634  4E75                     974              RTS
00001636  0C79 04EB 00009A46       975  .MOVER      CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
0000163E  6D00 0004                976              BLT     .DOR                    ; NO: MOVE
00001642  4E75                     977              RTS                             ; YES: END
00001644  5079 00009A46            978  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
0000164A  4E75                     979              RTS
0000164C                           980  
0000164C                           981              
0000164C                           982  
0000164C                           983  
0000164C                           984  
0000164C                           985  
0000164C                           986  
0000164C                           987  ;-----------------------------------------------------------
0000164C                           988  PLAYELX
0000164C                           989  ; UPDATE PLAYER
0000164C                           990  ; INPUT         - NONE
0000164C                           991  ; OUTPUT    - NONE
0000164C                           992  ; MODIFIES  - NONE  
0000164C                           993  ;-----------------------------------------------------------
0000164C  0839 0000 00001828       994                      BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
00001654  6600 0010                995              BNE     .MOVEL                  ; YES: MOVE LEFT
00001658  0839 0002 00001828       996              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
00001660  6600 001A                997              BNE     .MOVER                  ; YES: MOVE LEFT
00001664  4E75                     998              RTS
00001666  0C79 0014 00009A46       999  .MOVEL      CMP.W   #BLOCSIZE/2,(PLAYERX)      ; BELOW LEFT BOUNDARY?
0000166E  6E00 0004               1000              BGT     .DOL                    ; NO: MOVE
00001672  4E75                    1001              RTS                             ; YES: END
00001674  5179 00009A46           1002  .DOL        SUB.W   #PLYSPEED,(PLAYERX)        ; MOVE LEFT
0000167A  4E75                    1003              RTS
0000167C                          1004  
0000167C                          1005  
0000167C                          1006  
0000167C                          1007  
0000167C                          1008  .MOVER      
0000167C  48E7 0E80               1009              MOVEM.L D4-D6/A0, -(A7)         ; STACK REGISTER
00001680                          1010              
00001680  0C79 04EB 00009A46      1011              CMP.W   #SCRWIDTH-1-BLOCSIZE/2,(PLAYERX) ; HIGHER THAN RIGHT BOUNDARY?
00001688  6E00 0056               1012              BGT     .END                    ; YES: STOP
0000168C                          1013              
0000168C                          1014              
0000168C  3A39 00009A46           1015              MOVE.W  (PLAYERX),D5
00001692  0445 0014               1016              SUB.W   #BLOCSIZE/2, D5
00001696  8AFC 0028               1017              DIVU.W  #BLOCSIZE,  D5  ; SEGMENT OF SCREEN PLAYER LOCATED 
0000169A                          1018       
0000169A                          1019              
0000169A  3C05                    1020              MOVE.W  D5, D6      ; COPY SEGMENT OF SCREEN PLAYER LOCATED IN D6
0000169C                          1021                         
0000169C  41F9 00009A6E           1022              LEA LANDHEIG, A0
000016A2  D0C5                    1023              ADDA.W  D5, A0
000016A4                          1024                             
000016A4                          1025                
000016A4  1A10                    1026              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
000016A6                          1027                                      ; OF THE SCREEN SEGMENT WHERE IS 
000016A6                          1028                                      ; LOCATED THE PLAYER
000016A6                          1029                                      ; RIGHT NOW 
000016A6  5205                    1030              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
000016A8                          1031                          
000016A8                          1032              
000016A8  5246                    1033              ADD.W   #1, D6          ; ACCESSING THE NUMBER OF BLOCKS OF THE NEXT COLUMN
000016AA  41F9 00009A6E           1034              LEA LANDHEIG, A0
000016B0  D0C6                    1035              ADDA.W  D6, A0
000016B2                          1036  
000016B2  1C10                    1037              MOVE.B  (A0),D6         ; NUMBER OF BLOCKS - 1 IN COLUMN 
000016B4                          1038                                      ; OF THE NEXT SCREEN SEGMENT WHERE IS 
000016B4                          1039                                      ; LOCATED THE PLAYER
000016B4                          1040                                      ; RIGHT NOW 
000016B4                          1041  
000016B4                          1042                
000016B4  5206                    1043              ADD.B   #1, D6          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
000016B6                          1044              
000016B6  BC45                    1045              CMP.W   D5, D6          ; NEXT COLUMN IS HIGHER THAN THE ACTUAL COLUMN?
000016B8  6F00 0020               1046              BLE .DOR
000016BC                          1047              
000016BC  CCFC 0028               1048              MULU.W  #BLOCSIZE, D6   
000016C0  383C 02D0               1049              MOVE.W  #SCRHEIGH, D4   
000016C4  9846                    1050              SUB.W   D6, D4          
000016C6  0444 0014               1051              SUB.W   #BLOCSIZE/2, D4  
000016CA  5B44                    1052              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN
000016CC                          1053  
000016CC  B879 00009A48           1054              CMP.W   (PLAYERY),D4   ; TOP OF COLUMN HIGHER THAN PLAYERY?
000016D2  6E00 0006               1055              BGT     .DOR           ; YES: MOVE
000016D6                          1056                            
000016D6  6000 0008               1057              BRA .END               ; NO: END
000016DA                          1058              
000016DA                          1059  
000016DA  5079 00009A46           1060  .DOR        ADD.W   #PLYSPEED,(PLAYERX)        ; MOVE RIGHT
000016E0                          1061  .END        
000016E0  4CDF 0170               1062              MOVEM.L (A7)+, D4-D6/A0         ; RESTORE REGISTERS
000016E4  4E75                    1063              RTS
000016E6                          1064  
000016E6                          1065  
000016E6                          1066  
000016E6                          1067  
000016E6                          1068  
000016E6                          1069  
000016E6                          1070  ;-----------------------------------------------------------
000016E6                          1071  PLAYELY
000016E6                          1072  ; UPDATE PLAYER
000016E6                          1073  ; INPUT         - NONE
000016E6                          1074  ; OUTPUT    - NONE
000016E6                          1075  ; MODIFIES  - NONE  
000016E6                          1076  ;-----------------------------------------------------------
000016E6                          1077                      
000016E6  0839 0001 00001828      1078              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
000016EE  6600 0010               1079              BNE     .MOVEU                  ; YES: MOVE UP
000016F2  0839 0003 00001828      1080              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?
000016FA  6600 001A               1081              BNE     .MOVED                  ; YES: MOVE DOWN
000016FE  4E75                    1082              RTS
00001700                          1083              
00001700                          1084        
00001700                          1085              
00001700  0C79 0014 00009A48      1086  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
00001708  6E00 0004               1087              BGT     .DOU                    ; NO: MOVE
0000170C  4E75                    1088              RTS                             ; YES: END
0000170E  5179 00009A48           1089  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
00001714  4E75                    1090              RTS
00001716  0C79 02BC 00009A48      1091  .MOVED      CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
0000171E  6D00 0004               1092              BLT     .DOD                    ; NO: MOVE
00001722  4E75                    1093              RTS                             ; YES: END
00001724  5079 00009A48           1094  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
0000172A  4E75                    1095              RTS
0000172C                          1096  
0000172C                          1097  
0000172C                          1098  
0000172C                          1099  ;-----------------------------------------------------------
0000172C                          1100  
0000172C                          1101  PLYRUPDY
0000172C                          1102  ; UPDATE PLAYER
0000172C                          1103  ; INPUT         - NONE
0000172C                          1104  ; OUTPUT    - NONE
0000172C                          1105  ; MODIFIES  - NONE  
0000172C                          1106  ;-----------------------------------------------------------
0000172C                          1107        
0000172C                          1108                      
0000172C  0839 0001 00001828      1109              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001734  6600 0010               1110              BNE     .MOVEU                  ; YES: MOVE UP
00001738  0839 0003 00001828      1111              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?            
00001740  6600 001A               1112              BNE     .MOVED                  ; YES: MOVE DOWN
00001744  4E75                    1113              RTS
00001746                          1114              
00001746                          1115        
00001746                          1116              
00001746  0C79 0014 00009A48      1117  .MOVEU      CMP.W   #BLOCSIZE/2,(PLAYERY)      ; ABOVE UP BOUNDARY?
0000174E  6E00 0004               1118              BGT     .DOU                    ; NO: MOVE
00001752  4E75                    1119              RTS                             ; YES: END
00001754  5179 00009A48           1120  .DOU        SUB.W   #PLYSPEED,(PLAYERY)        ; MOVE UP
0000175A  4E75                    1121              RTS
0000175C                          1122  .MOVED      
0000175C  3A39 00009A46           1123              MOVE.W  (PLAYERX),D5
00001762  8AFC 0028               1124              DIVU.W  #BLOCSIZE,  D5
00001766                          1125                         
00001766  41F9 00009A6E           1126              LEA LANDHEIG, A0
0000176C  D0C5                    1127              ADDA.W  D5, A0
0000176E                          1128                                     
0000176E                          1129                
0000176E  1A10                    1130              MOVE.B  (A0),D5         ; NUMBER OF BLOCKS - 1 IN COLUMN 
00001770                          1131                                      ; OF THE SCREEN SEGMENT WHERE IS 
00001770                          1132                                      ; LOCATED THE PLAYER
00001770                          1133                                      ; RIGHT NOW 
00001770                          1134                 
00001770                          1135              
00001770  5205                    1136              ADD.B   #1, D5          ; ADD 1 TO GET THE REAL NUMBER OF BLOCKS
00001772  CAFC 0028               1137              MULU.W  #BLOCSIZE, D5   
00001776  383C 02D0               1138              MOVE.W  #SCRHEIGH, D4   
0000177A  9845                    1139              SUB.W   D5, D4          
0000177C  0444 0014               1140              SUB.W   #BLOCSIZE/2, D4  
00001780  5B44                    1141              SUB.W   #5, D4          ; GETTING THE EXACT HEIGHT OF THE CORRESPONDENT COLUMN 
00001782                          1142              
00001782  B879 00009A48           1143              CMP.W   (PLAYERY),D4   ; LOWER THAN TOP OF COLUMN BLOCKS?
00001788  6E00 0012               1144              BGT     .DOD           ; YES: MOVE
0000178C  4E75                    1145              RTS                    ; NO: END
0000178E                          1146                          
0000178E  0C79 02BC 00009A48      1147              CMP.W   #SCRHEIGH-BLOCSIZE/2,(PLAYERY) ; HIGHER THAN DOWN BOUNDARY?
00001796  6D00 0004               1148              BLT     .DOD                    ; NO: MOVE
0000179A  4E75                    1149              RTS                             ; YES: END
0000179C  5079 00009A48           1150  .DOD        ADD.W   #PLYSPEED,(PLAYERY)        ; MOVE DOWN
000017A2  4E75                    1151              RTS
000017A4                          1152  
000017A4                          1153  
000017A4                          1154  ;-----------------------------------------------------------
000017A4                          1155  
000017A4                          1156  
000017A4                          1157  ;------------------------------------------------------------------------------------------------------
000017A4                          1158  
000017A4                          1159  
000017A4                          1160  PLYRPLOT
000017A4                          1161  ; PLOT PLAYER
000017A4                          1162  ; INPUT     - NONE
000017A4                          1163  ; OUTPUT    - NONE
000017A4                          1164  ; MODIFIES  - NONE  
000017A4                          1165  ;-----------------------------------------------------------
000017A4  48E7 F800               1166                      MOVEM.L D0-D4, -(A7)    ; STACK REGISTER
000017A8  103C 0050               1167                      MOVE.B                  #80, D0; SET PEN COLOR TASK
000017AC  223C 000000FF           1168                      MOVE.L                  #PLYRCOL, D1; PLAYER COLOR
000017B2  4E4F                    1169                      TRAP #15                ; SET PEN COLOR
000017B4  103C 0051               1170                      MOVE.B                  #81, D0; SET FILL COLOR TASK
000017B8  223C 000000FF           1171                      MOVE.L                  #PLYRCOL,D1; BLOCK COLOR
000017BE  4E4F                    1172                      TRAP #15                ; SET FILL COLOR
000017C0                          1173              
000017C0  3239 00009A46           1174                      MOVE.W                  (PLAYERX),D1; D1:=XCENTER
000017C6  3439 00009A48           1175                      MOVE.W                  (PLAYERY),D2; D2:=YCENTER
000017CC  3601                    1176                      MOVE.W                  D1, D3; D3:=XCENTER
000017CE  3802                    1177                      MOVE.W                  D2, D4; D4:=YCENTER
000017D0                          1178              
000017D0  0441 0014               1179                      SUB.W                   #BLOCSIZE/2, D1; D1:=XLEFT
000017D4  0442 0014               1180                      SUB.W                   #BLOCSIZE/2, D2; D2:=YTOP
000017D8  0643 0014               1181                      ADD.W                   #BLOCSIZE/2, D3; D3:=XRIGHT
000017DC  0644 0014               1182                      ADD.W                   #BLOCSIZE/2, D4; D4:=YBOTTOM
000017E0  103C 0057               1183                      MOVE.B                  #87, D0
000017E4  4E4F                    1184                      TRAP                    #15; DRAW PLAYER
000017E6  4CDF 001F               1185                      MOVEM.L (A7)+, D0-D4    ; RESTORE REGISTERS
000017EA                          1186                      
000017EA  4E75                    1187                      RTS
000017EC                          1188  
000017EC                          1189  
000017EC                          1190  
000017EC                          1191  
000017EC                          1192  
000017EC                          1193  
000017EC                          1194  
000017EC                          1195  
000017EC                          1196  
000017EC                          1197  
000017EC                          1198  -------------------- end include --------------------
000017EC                          1199  
000017EC                          1200  ; --- INITIALIZE --------------------------------------------------------------
000017EC                          1201  
000017EC  4EB8 1000               1202  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
000017F0                          1203               
000017F0                          1204  
000017F0                          1205              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
000017F0  4EB8 11D6               1206              JSR       RNDINIT
000017F4                          1207              
000017F4                          1208             
000017F4                          1209              
000017F4                          1210              ; GENERATES LAND 
000017F4                          1211  
000017F4                          1212              ;JSR     LANDINIT
000017F4  4EB8 158C               1213              JSR     LANDCRTE
000017F8                          1214              ; PLACE PLAYER
000017F8  4EB8 15F4               1215              JSR     PLYRINIT             
000017FC                          1216             
000017FC                          1217              
000017FC                          1218              
000017FC                          1219              
000017FC                          1220  
000017FC                          1221  
000017FC                          1222  ; --- UPDATE ------------------------------------------------------------------
000017FC                          1223  
000017FC  4E40                    1224  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
000017FE                          1225  
000017FE                          1226              ; TO DO : ADD YOUR GAME UPDATE HERE
000017FE                          1227              
000017FE                          1228              ;JSR     PLAYELX
000017FE  4EB8 1606               1229              JSR     PLYRUPDX               ; WITHOUT BOUNDING 
00001802                          1230              ;JSR     PLYRUPDY
00001802  4EB8 16E6               1231              JSR     PLAYELY                ; WITHOUT BOUNDING 
00001806                          1232              
00001806  4EB8 1334               1233              JSR      AGLUPD
0000180A                          1234              
0000180A                          1235  
0000180A                          1236  ; --- WAIT SYNCH --------------------------------------------------------------
0000180A                          1237  
0000180A  4A39 0000182A           1238  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001810  67F8                    1239              BEQ     .WINT
00001812  4239 0000182A           1240              CLR.B   (SCRINTCT)
00001818                          1241  
00001818                          1242  ; --- PLOT --------------------------------------------------------------------
00001818                          1243  
00001818                          1244              ; TO DO : ADD YOUR GAME PLOT HERE           
00001818  4EB8 1358               1245              JSR     AGLPLOT
0000181C                          1246              
0000181C  4EB8 17A4               1247              JSR     PLYRPLOT
00001820                          1248              
00001820  4E41                    1249              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001822  60D8                    1250              BRA     .LOOP                   ; MAIN LOOP
00001824  FFFF FFFF               1251              SIMHALT
00001828                          1252  
00001828                          1253  ; --- VARIABLES ---------------------------------------------------------------
00001828                          1254  
00001828                          1255              INCLUDE "SYSVAR.X68"
00001828                          1256  ; =============================================================================
00001828                          1257  ; TITLE    : SYSTEM VARIABLES
00001828                          1258  ; AUTHOR   : ANTONI BURGUERA
00001828                          1259  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001828                          1260  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001828                          1261  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001828                          1262  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001828                          1263  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001828                          1264  ; HISTORY  : XX-XXX-201X - CREATION
00001828                          1265  ;            11-OCT-2020 - MINOR CHANGES
00001828                          1266  ; =============================================================================
00001828                          1267  
00001828                          1268  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001828                          1269  
00001828                          1270  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001829                          1271  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
0000182A                          1272  
0000182A                          1273              DS.W    0
0000182A                          1274  
0000182A                          1275  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
0000182A                          1276  
0000182A                          1277  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
0000182B                          1278  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
0000182C                          1279              DS.W    0
0000182C                          1280  
0000182C                          1281  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
0000182C                          1282  
00001840                          1283              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001840                          1284  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00009A40                          1285              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00009A40                          1286  -------------------- end include --------------------
00009A40                          1287              INCLUDE "VAR.X68"
00009A40                          1288  ; =============================================================================
00009A40                          1289  ; TITLE    : GAME VARIABLES
00009A40                          1290  ; AUTHOR   : MAURICI RUIZ
00009A40                          1291  ; HISTORY  : 15/12/2020  - CREATION
00009A40                          1292  ; =============================================================================
00009A40                          1293  
00009A40                          1294  
00009A40                          1295  ;---- BLOCK RELATED VARIABLES -------------------------------------------------
00009A40                          1296  
00009A40                          1297  BLOCKX          DS.W    1                   ; BLOCK X COORDINATE (XCENTER)
00009A42                          1298  BLOCKY          DS.W    1                   ; BLOCK Y COORDINATE (XCENTER)
00009A44                          1299  
00009A44                          1300  
00009A44                          1301  ; --- RANDOM NUMBER GENERATOR VARIABLES ---------------------------------------
00009A44                          1302  
00009A44                          1303  RNDINDEX    DS.B        1                   ; RANDOM INDEX
00009A46                          1304                      DS.W                        0
00009A46                          1305                      
00009A46                          1306  ; --- PLAYER RELATED VARIABLES ------------------------------------------------
00009A46                          1307  
00009A46                          1308  PLAYERX     DS.W    1                       ; PAD X COORDINATE (XCENTER)
00009A48                          1309  PLAYERY     DS.W    1                       ; PAD X COORDINATE (XCENTER)
00009A4A                          1310  
00009A4A                          1311  PLYERSEG    DS.W    1                       ; SCREEN SEGMENT WHERE IS LOCATED THE PLAYER
00009A4C                          1312  
00009A4C                          1313  TOPOFSEG    DS.W    1                       ; NUMBER OF BLOCKS IN COLUMN UNDER PLAYER
00009A4E                          1314  
00009A4E                          1315  
00009A4E                          1316  ; --- LAND RELATED VARIABLES --------------------------------------------------
00009A4E                          1317  
00009A4E= 06 07 07 08 09 0A ...   1318  RANDIRT     DC.B    6  , 7  , 7  , 8  , 9  , 10  , 10  , 9 
00009A56= 08 07 06 06 07 08 ...   1319              DC.B    8  , 7  , 6  , 6  , 7  , 8   , 9   , 9 
00009A5E= 0A 09 08 08 09 0A ...   1320              DC.B    10 , 9  , 8  , 8  , 9  , 10  , 10  , 9 
00009A66= 08 07 07 06 07 08 ...   1321              DC.B    8  , 7  , 7  , 6  , 7  , 8   , 9   , 10
00009A6E                          1322              DS.W    0 
00009A6E                          1323  
00009A6E                          1324  
00009A6E= 08 08 09 0A 0B 0C ...   1325  LANDHEIG    DC.B    8  ,  8 ,  9 , 10  , 11  , 12  , 12  , 11 
00009A76= 0A 09 08 08 09 0A ...   1326              DC.B    10 ,  9 ,  8 ,  8  ,  9  , 10  , 11  , 11 
00009A7E= 0C 0B 0A 0A 0B 0C ...   1327              DC.B    12 , 11 , 10 , 10  , 11  , 12  , 12  , 11 
00009A86= 0A 09 09 08 09 0A ...   1328              DC.B    10 ,  9 ,  9 ,  8  ,  9  , 10  , 11  , 12
00009A8E                          1329              DS.W    0 
00009A8E                          1330  
00009A8E                          1331  
00009A8E                          1332  -------------------- end include --------------------
00009A8E                          1333              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              131A
AGLADD:END          1330
AGLKILL             11C0
AGLPLOT             1358
AGLPLOT:END         1378
AGLPLOT:LOOP        1360
AGLUPD              1334
AGLUPD:END          1352
AGLUPD:LOOP         133C
BLOCID              1
BLOCINIT            137E
BLOCKX              9A40
BLOCKY              9A42
BLOCPCOL            0
BLOCPLOT            1462
BLOCSIZE            28
BLOCUPD             138A
BLOCUPD:BLOCKL      1424
BLOCUPD:BLOCKR      1432
BLOCUPD:BLOCKT      1440
BLOCUPD:CHKPINL     13CE
BLOCUPD:CHKPINR     13DE
BLOCUPD:CHKPINT     1450
BLOCUPD:CHKPLFT     13C0
BLOCUPD:CHKPRHT     13AE
BLOCUPD:END         13EC
BLOCUPD:ENDF        141E
DIRTFCOL            2850
DIRTINIT            149E
DIRTINIT:LOOPCOL    14CA
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             208
DMMBSIZE            40
DMMDATA             1840
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRTINITX            14
DRTINITY            2A8
GETRDIRT            11DE
GRASFCOL            8C50
GRASINTX            14
GRASINTY            26C
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1829
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1828
LANDCRTE            158C
LANDCRTE:LOOPD      15CC
LANDCRTE:LOOPL      15AC
LANDHEIG            9A6E
LANDINIT            1522
LANDINIT:LOOPCOL    1546
LANDINIT:LOOPDIR    1560
NCOLBLKS            12
NROWBLKS            20
NUMSTN              12
PLAYELX             164C
PLAYELX:DOL         1674
PLAYELX:DOR         16DA
PLAYELX:END         16E0
PLAYELX:MOVEL       1666
PLAYELX:MOVER       167C
PLAYELY             16E6
PLAYELY:DOD         1724
PLAYELY:DOU         170E
PLAYELY:MOVED       1716
PLAYELY:MOVEU       1700
PLAYERX             9A46
PLAYERY             9A48
PLYERSEG            9A4A
PLYRCOL             FF
PLYRINIT            15F4
PLYRPLOT            17A4
PLYRUPDX            1606
PLYRUPDX:DOL        162E
PLYRUPDX:DOR        1644
PLYRUPDX:MOVEL      1620
PLYRUPDX:MOVER      1636
PLYRUPDY            172C
PLYRUPDY:DOD        179C
PLYRUPDY:DOU        1754
PLYRUPDY:MOVED      175C
PLYRUPDY:MOVEU      1746
PLYSPEED            8
RANDIRT             9A4E
RNDGET              11FC
RNDGET:RANDVEC      121A
RNDINDEX            9A44
RNDINIT             11D6
SCRCYCCT            182B
SCRHEIGH            2D0
SCRINIT             101C
SCRINTCT            182A
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            500
START               17EC
START:LOOP          17FC
START:WINT          180A
STNEINIT            14E0
STNEINIT:LOOPS      150A
STNFCOL             676767
STNINITX            14
STNINITY            2BC
SYSINIT             1000
TOPOFSEG            9A4C
